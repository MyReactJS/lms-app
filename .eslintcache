[{"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js":"1","E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js":"2","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\UpdateService.js":"3","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\createService.js":"4","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Login.js":"5","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboard.js":"6","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js":"7","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js":"8","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js":"9","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Table.js":"10","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\jobs.js":"11","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js":"12","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js":"13","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js":"14","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Header.js":"15","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js":"16","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseDetailsPage.js":"17","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js":"18","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js":"19","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js":"20","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js":"21","E:\\bits\\code samples\\assignments\\lms-app\\src\\CourseTablePagination.js":"22","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppGuest.js":"23","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppUser.js":"24","E:\\bits\\code samples\\assignments\\lms-app\\src\\App.js":"25","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseEnrollConfirmModel.js":"26","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js":"27","E:\\bits\\code samples\\assignments\\lms-app\\src\\LoginLayout.js":"28","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js":"29","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js":"30","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js":"31","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js":"32","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js":"33","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js":"34","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js":"35","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js":"36","E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js":"37","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js":"38","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js":"39","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js":"40","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js":"41","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilterPagination.js":"42"},{"size":520,"mtime":1612282672954,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":5836,"mtime":1612037048996,"results":"46","hashOfConfig":"44"},{"size":7641,"mtime":1612036973202,"results":"47","hashOfConfig":"44"},{"size":6220,"mtime":1612615951955,"results":"48","hashOfConfig":"44"},{"size":3287,"mtime":1612036784345,"results":"49","hashOfConfig":"44"},{"size":11954,"mtime":1614860883391,"results":"50","hashOfConfig":"44"},{"size":1745,"mtime":1614722232428,"results":"51","hashOfConfig":"44"},{"size":831,"mtime":1612622834226,"results":"52","hashOfConfig":"44"},{"size":3013,"mtime":1612037032739,"results":"53","hashOfConfig":"44"},{"size":4005,"mtime":1612036868330,"results":"54","hashOfConfig":"44"},{"size":1634,"mtime":1612644421457,"results":"55","hashOfConfig":"44"},{"size":15898,"mtime":1614724660461,"results":"56","hashOfConfig":"44"},{"size":3846,"mtime":1614726651806,"results":"57","hashOfConfig":"44"},{"size":886,"mtime":1612057660215,"results":"58","hashOfConfig":"44"},{"size":11637,"mtime":1614728987462,"results":"59","hashOfConfig":"44"},{"size":275,"mtime":1612440814741,"results":"60","hashOfConfig":"44"},{"size":5650,"mtime":1614770392471,"results":"61","hashOfConfig":"44"},{"size":4385,"mtime":1612630245912,"results":"62","hashOfConfig":"44"},{"size":2518,"mtime":1614755472839,"results":"63","hashOfConfig":"44"},{"size":1212,"mtime":1614689949586,"results":"64","hashOfConfig":"44"},{"size":2494,"mtime":1612235358306,"results":"65","hashOfConfig":"44"},{"size":1708,"mtime":1612441944536,"results":"66","hashOfConfig":"44"},{"size":2050,"mtime":1612441860333,"results":"67","hashOfConfig":"44"},{"size":2599,"mtime":1612281997075,"results":"68","hashOfConfig":"44"},{"size":1418,"mtime":1612285912719,"results":"69","hashOfConfig":"44"},{"size":1863,"mtime":1612618758899,"results":"70","hashOfConfig":"44"},{"size":677,"mtime":1612377717301,"results":"71","hashOfConfig":"44"},{"size":1507,"mtime":1612629963656,"results":"72","hashOfConfig":"44"},{"size":320,"mtime":1612284868747,"results":"73","hashOfConfig":"44"},{"size":729,"mtime":1612443350097,"results":"74","hashOfConfig":"44"},{"size":2537,"mtime":1612442940281,"results":"75","hashOfConfig":"44"},{"size":4242,"mtime":1612630261823,"results":"76","hashOfConfig":"44"},{"size":702,"mtime":1612442986809,"results":"77","hashOfConfig":"44"},{"size":998,"mtime":1612610963735,"results":"78","hashOfConfig":"44"},{"size":9813,"mtime":1614796959946,"results":"79","hashOfConfig":"44"},{"size":775,"mtime":1612622536386,"results":"80","hashOfConfig":"44"},{"size":698,"mtime":1612620672004,"results":"81","hashOfConfig":"44"},{"size":746,"mtime":1612621617502,"results":"82","hashOfConfig":"44"},{"size":4795,"mtime":1612638179193,"results":"83","hashOfConfig":"44"},{"size":10488,"mtime":1612647161413,"results":"84","hashOfConfig":"44"},{"size":1408,"mtime":1612640368060,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"4r43ta",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"99"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"88"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"88"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"88"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js",[],["199","200"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\UpdateService.js",[],["201","202"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\createService.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Login.js",["203","204","205"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { setUserSession } from './Common';\nimport './Login.css';\nimport { FormErrors } from './FormErrors';\nimport axios from 'axios';\nimport { setUserAuthenticationStatus } from './Common';\nimport ModalComponent from './common/ModalComponent.js';\nimport { getUserAuthenticationStatus } from \"./Common.js\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            email: '',\n            password: '',\n            UserType: 'student',\n            RegisterUserType: 'student',\n            formErrors: { email: '', password: '' },\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n            modalshow: false,\n            modaltitle: '',\n             modalbody: ''\n        }\n    }\n\n    handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value });\n\n        //    () => { this.validateField(name, value) });\n    }\n\n    onValueChange = (e) => {\n        this.setState({\n            UserType: e.target.value\n        })\n    }\n\n    validateField() {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n\n        \n        emailValid = this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        passwordValid = this.state.password.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n                \n        this.setState({\n            formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n \n    }\n\n    validateForm() {\n        this.setState({ formValid: this.state.emailValid && this.state.passwordValid },() => { console.log(this.state.formValid) });\n    }\n\n    errorClass(error) {\n        return (error.length === 0 ? '' : 'has-error');\n    }\n\n    handleClick = (e) => {\n        this.props.history.push('/registration');\n        e.preventDefault();\n    }\n    handleSubmit = (e) => {\n        var payload = {\n            \"email\": this.state.email,\n            \"password\": this.state.password,\n            \"role\": this.state.UserType\n        }\n\n        axios.get('data/login.json')\n            .then((res) => {\n                console.log(res.data);\n            }).catch((err) => {\n                console.log(err);\n            })\n        this.validateField();\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.state.formValid == true)\n        {\n            setUserAuthenticationStatus(true);\n            setUserSession(12, \"Rajeswari Subramanian\", payload.role, \"Chennai\",\n                payload.email, \"1234567890\");\n           \n            this.setState({\n                modalshow: true,\n                modaltitle: 'Login',\n                modalbody: 'Login Successful !!!',\n\n            });\n\n          //  alert(\"modal open\");\n\n           \n\n        }\n        \n    }\n   \n    handleConfirmModalClose = (fromModal) => {\n        //alert(fromModal.msg);\n\n        this.setState({\n            modalshow: false\n        });\n       // alert(\"modal close\");\n        if (this.state.UserType == 'student')\n            this.props.history.push('/dashboardS');\n        else\n            this.props.history.push('/dashboardF');\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"login-menu\">\n                    <form className=\"demoForm\" onSubmit={this.handleSubmit}>\n                        <div >\n\n                           \n                            <input type=\"radio\" value=\"faculty\" checked={this.state.UserType === \"faculty\"}\n                                onChange={this.onValueChange} />\n                            <label htmlFor=\"Faculty\">Faculty</label>\n\n                            <input type=\"radio\" value=\"student\"\n                                checked={this.state.UserType === \"student\"}\n                                onChange={this.onValueChange} />\n                            <label htmlFor=\"Student\">Student</label>\n                         </div>\n\n\n                        <div >\n                            <input type=\"email\" required name=\"email\"\n                                placeholder=\"Email\"\n                                value={this.state.email}\n                                onChange={this.handleUserInput} />\n                        </div>\n\n                        <div >\n                            <input type=\"password\" name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleUserInput} />\n                        </div>\n\n                       \n                        <input type='submit' value='Login'  />\n                       \n                        {!this.state.formValid  ?\n                            <div className='error-message' >\n                            <FormErrors formErrors={this.state.formErrors} />\n                            </div> : \n                            <ModalComponent\n                                show={this.state.modalshow}\n                                title={this.state.modaltitle}\n                                body={this.state.modalbody}\n                                onClick={this.handleConfirmModalClose}\n                                onHide={this.handleConfirmModalClose} />\n                        }\n                            \n                    </form>\n                </div>\n\n                <div className=\"register-menu\">\n                    <form className=\"demoForm\" onSubmit={this.handleClick}>\n                        <label htmlFor=\"Registration\">New User? Register Now</label>\n                        <br />\n                        <input type='submit' value='Register' />\n                    </form>\n                </div>\n\n\n            </div>\n        )\n    }\n\n}\nexport default withRouter(Login);\n",["206","207"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboard.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js",["208","209"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js",["210","211"],"import React from 'react';\nimport Alert from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Button';\n/*\n * \n *  <Alert key={i} variant='danger'>\n                        {fieldName} {formErrors[fieldName]}\n                        </Alert>\n                        */\nexport const FormErrors = ({ formErrors }) =>\n    <div className='formErrors'>\n        {Object.keys(formErrors).map((fieldName, i) => {\n            if (formErrors[fieldName].length > 0) {\n                return (\n                   <React.Fragment>\n                     \n                        <h4 key={i}>\n                            {fieldName} {formErrors[fieldName]}  </h4>\n                        <div />\n                    </React.Fragment>\n\n                )\n            } else {\n                return '';\n            }\n        })}\n    </div>","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Table.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\jobs.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js",["212"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseSearch from './CourseSearch.js';\r\nimport CourseFilter from './CourseFilter.js';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\n\r\nclass FilterCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { rows:[], startdate: '', enddate: ''}\r\n        this.setStartDateRangeFilter = this.setStartDateRangeFilter.bind(this);\r\n        this.setEndDateRangeFilter = this.setEndDateRangeFilter.bind(this);\r\n        this.setResultRows = this.setResultRows.bind(this);\r\n    }\r\n  \r\n    setResultRows(r) {\r\n        this.setState({ rows: r }, () => {\r\n            console.log(\"setResultRows =\" + this.state.rows.length);\r\n     //       alert(\"setResultRows: \" + this.state.rows.length);\r\n\r\n        });\r\n    }\r\n    setStartDateRangeFilter(sdate) {\r\n        this.setState({ startdate: sdate });\r\n        //alert(\"startdate: \" + sdate);\r\n    }\r\n    setEndDateRangeFilter( edate) {\r\n        this.setState({ enddate: edate });\r\n        //alert(\"enddate: \" + edate);\r\n    }\r\n    \r\n    render() {\r\n       \r\n            return (\r\n                <div>\r\n\r\n                    <CourseSearch setCourseStartDateFilter={this.setStartDateRangeFilter}\r\n                        setCourseEndDateFilter={this.setEndDateRangeFilter} setResultRows={this.setResultRows} />\r\n                    <CourseTableWithPagination courses={this.state.rows} />;\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\nexport default withRouter(FilterCourseTable);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js",["213","214","215","216","217","218","219","220","221","222","223","224"],"import React from 'react';\r\n//import categories from './coursecategories.json';\r\nimport courses from './courses.json';\r\nimport enrolledcourses from './../dashboards/students/EnrolledCourses.json';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './CourseSearch.css';\r\nimport CourseRow from './CourseRow.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\n\r\nclass CourseSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.coursename = '';\r\n        this.coursecategory = '';\r\n        this.coursecredits = '';\r\n        this.state = {\r\n            startdate: '', enddate: '',\r\n            categories: [],\r\n            courses: [],\r\n            enrolledcourses: [],\r\n            enrolledcourses_sessionids:[],\r\n            \r\n        };\r\n        \r\n        this.credits = [1,2,3,4,5,6,7,8,9,10];\r\n        this.handleCourseNameChange = this.handleCourseNameChange.bind(this);\r\n        this.handleCourseCategoryChange = this.handleCourseCategoryChange.bind(this);\r\n        this.handleCourseCreditsChange = this.handleCourseCreditsChange.bind(this);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n    }\r\n    handleOnSubmit(event)\r\n    {\r\n        //alert(\"onsubmit-start\");\r\n        var rows = [];\r\n        //var enrolledcourses_sessionids = [];\r\n       // enrolledcourses.forEach((course) => {\r\n       //     enrolledcourses_sessionids.push(course.sessionId);\r\n\r\n       // });\r\n        \r\n\r\n        var courseNameFilter = this.coursename;\r\n        var courseCategoryFilter = this.coursecategory;\r\n        var courseCreditsFilter = this.coursecredits;\r\n        var courseStartDateFilter = this.state.startdate == '' ? '' : this.state.startdate;\r\n        var courseEndDateFilter = this.state.enddate == '' ? '' : this.state.enddate;\r\n       // alert(courseNameFilter)\r\n        //alert(\"onsubmit\");\r\n        this.state.courses.map((course) =>\r\n        {\r\n            //alert(course.get('sessionId'));\r\n            let coursestartdate = course.get('start_date');\r\n            let courseenddate = course.get('end_date');\r\n            const todayDate = new Date();\r\n            // console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n            // console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n            if (course.get('name').toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.get('category') !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.get('credits') != courseCreditsFilter)\r\n                return;\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.get('sessionId'))}\r\n                        id={course.get('sessionId')} course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseRow\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.get('sessionId'))}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.get('sessionId'))}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseRow\r\n                    enrolled={this.state.enrolledcourses_sessionids.includes(course.get('sessionId'))}\r\n                    id={course.get('sessionId')} course={course} />);\r\n            }\r\n\r\n\r\n        }\r\n        );\r\n       // alert(\"onsubmit-end\");\r\n\r\n        //alert(rows.length);\r\n       // this.setState({ rows: rows });\r\n        //alert(rows);\r\n        //console.log(rows);\r\n        this.props.setResultRows(rows);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n    }\r\n    handleStartDateChange(sdate)\r\n    {\r\n        this.setState({ startdate: sdate });\r\n        \r\n    }\r\n\r\n    handleEndDateChange(sdate) \r\n    {\r\n        this.setState({ enddate: sdate });\r\n        \r\n       \r\n    }\r\n     handleCourseNameChange (event) \r\n    {\r\n\r\n         this.coursename = event.target.value;\r\n         event.preventDefault();\r\n\r\n    }\r\n    handleCourseCategoryChange(event)\r\n    {\r\n        this.coursecategory = event.target.value;\r\n\r\n        \r\n        event.preventDefault();\r\n\r\n    }\r\n    handleCourseCreditsChange(event)\r\n    {\r\n        this.coursecredits = event.target.value;\r\n        event.preventDefault();\r\n    }\r\n    \r\n    \r\n    \r\n    componentDidMount() {\r\n\r\n        const profile = getUser();\r\n        var userid = profile.id;\r\n        var password = profile.password;\r\n\r\n        var local_courses = [];\r\n        axios.get(\"/api/core/category/\")\r\n            .then((res) =>\r\n            {\r\n                //console.log(res.data);\r\n                this.setState({ categories: res.data })\r\n                //console.log(this.state.categories);\r\n                }\r\n            )\r\n            .catch((err) => console.log(err));\r\n        //*************************************************************\r\n        axios.get('/api/core/myenrolledsessions/',\r\n            {\r\n                // Axios looks for the `auth` option, and, if it is set, formats a\r\n                // basic auth header for you automatically.\r\n                \r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                var enrolledids = [];\r\n                var course_enrolled_sessions_data=res1.data.results;\r\n                course_enrolled_sessions_data.forEach(enrolledsession => {\r\n                    enrolledids.push(enrolledsession.course);\r\n                })\r\n                this.setState({ enrolledcourses_sessionids: enrolledids })\r\n                console.log(this.state.enrolledcourses_sessionids);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"\")\r\n                console.log(error);\r\n            });\r\n\r\n\r\n        //****************************************************************\r\n        axios.get(\"/api/core/sessions/\")\r\n            .then(res1 => {\r\n             \r\n                const course_sessions_data = res1.data.results\r\n                console.log(course_sessions_data);\r\n                // NESTED AXIOS CALLS\r\n                course_sessions_data.forEach(coursesession => {\r\n                    //console.log(\"course:\" + coursesession.course);\r\n                    //console.log(\"tot_seats:\" + coursesession.tot_seats);\r\n                    //console.log(\"rem_seats:\" + coursesession.rem_seats);\r\n                    //console.log(\"start_date:\" + coursesession.start_date);\r\n                    //console.log(\"start_date:\" +  coursesession.end_date);\r\n                    var local_course = new Map();\r\n                    local_course.set('sessionId', coursesession.id);\r\n\r\n                    local_course.set('tot_seats',coursesession.tot_seats);\r\n                    local_course.set('rem_seats', coursesession.rem_seats);\r\n                    local_course.set('start_date', new Date(coursesession.start_date));\r\n                    local_course.set('end_date', new Date(coursesession.end_date));\r\n                    local_course.set('courseId', coursesession.course);\r\n                    axios.get(\"/api/core/courses/\" + coursesession.course + \"/\")\r\n                        .then(res2 => {\r\n                            //console.log(res2.data);\r\n                            local_course.set('credits', res2.data.credit);\r\n                            local_course.set('duration', res2.data.duration);\r\n\r\n                            local_course.set('name', res2.data.name);\r\n                            const course_category_id = res2.data.category\r\n                            //console.log(\"course name: \" + course_name);\r\n                            //console.log(\"category id:\" + course_category_id);\r\n                            \r\n                            axios.get(\"/api/core/category/\" + course_category_id + \"/\")\r\n                                .then(res3 => {\r\n                                    //console.log(res3.data);\r\n                                    const course_category = res3.data.name\r\n                                    //console.log(\"category:\" + course_category);\r\n                                    local_course.set('category', course_category);\r\n                                    //console.log(local_course);\r\n                                    local_courses.push(local_course);\r\n                                })\r\n\r\n                        })\r\n\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n                })\r\n                //console.log(local_courses);\r\n                this.setState({ courses: local_courses });\r\n                console.log(this.state.courses);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        \r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const categorynames = [];\r\n        this.state.categories.map((category) => categorynames.push(category.name));\r\n            \r\n     \r\n       \r\n        return (\r\n            <div id=\"content\">               \r\n                    <div className=\"row\">\r\n                    <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                            <div className=\"container-fluid panel-heading\"><h4>COURSES</h4></div>\r\n                            <div className=\"panel-body\">\r\n\r\n\r\n                                <Form>\r\n                                    <Form.Row >\r\n\r\n                                            <Form.Label column=\"lg\" lg={1} htmlFor=\"coursename\">Course Name:</Form.Label>\r\n                                            <Col>\r\n                                            <Form.Control className=\"d-flex justify-content-center\"  lg={3}type=\"text\" id=\"coursename\" name=\"coursename\"\r\n                                                    placeholder=\"React JS\" onBlur={this.handleCourseNameChange} />\r\n                                            </Col>    \r\n                                        \r\n                                      \r\n                                        <Col as=\"div\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursecategory\">Course Category: </Form.Label>\r\n                                        </Col>\r\n                                        <Col className=\"d-flex justify-content-center\" >\r\n\r\n                                            <Form.Control className=\"d-flex justify-content-center\" size=\"lg\"  lg={3}  id=\"coursecategory\" name=\"coursecategory\" as=\"select\" onChange={this.handleCourseCategoryChange}>\r\n                                                <option></option>\r\n                                                {categorynames.map((category) =>\r\n                                                    <option>{category}</option>\r\n                                                )}\r\n                                                  \r\n                                                </Form.Control>   \r\n                                               \r\n                                           </Col>\r\n                                           \r\n                                            <Col>\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursecredits\">Course Credits: </Form.Label>\r\n                                        </Col>\r\n                                        <Col className=\"d-flex justify-content-center\" >\r\n                                                <Form.Control className=\"d-flex justify-content-center\" size=\"lg\" lg={2} id=\"coursecredits\" name=\"coursecredits\" onChange={this.handleCourseCreditsChange} as=\"select\">\r\n                                                <option></option>\r\n                                                {this.credits.map((credit) =>\r\n                                                    <option>{credit}</option>\r\n                                                )}\r\n                                                </Form.Control>\r\n                                                \r\n                                            </Col>\r\n                                       \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col>\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursestartdate\">Course StartDate:&nbsp;&nbsp;&nbsp;&nbsp;</Form.Label>\r\n                                            <DatePicker selected={this.state.startdate} onChange={this.handleStartDateChange} name=\"coursestartdate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"courseenddate\">Course EndDate: &nbsp;&nbsp;&nbsp;&nbsp; </Form.Label>\r\n                                            <DatePicker className=\"d-flex justify-content-center\" className=\"d-flex justify-content-center\"selected={this.state.enddate} onChange={this.handleEndDateChange} name=\"courseenddate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col>\r\n                                       \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col>\r\n                                            <Button  onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\">Search</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button variant=\"secondary\" className=\"btn-class-sec  col-md-6\" type=\"cancel\">Cancel</Button>\r\n                                        </Col></Form.Row>\r\n                                </Form>\r\n\r\n                                   \r\n\r\n                            </div> </div> </div> </div>  </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\nexport default CourseSearch;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js",["225","226","227","228","229","230"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ToggleButton from '../common/ToggleButton.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import CourseDetailsPage from './CourseDetailsPage.js';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './CourseRow.css';\r\nimport ModalComponent from './../common/ModalComponent.js';\r\n\r\nclass CourseRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            remainingseats: this.props.course.get('rem_seats'),\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        };\r\n\r\n        this.onCourseLinkClick = this.onCourseLinkClick.bind(this);\r\n        this.setRemainingSeats = this.setRemainingSeats.bind(this);\r\n        this.GetFormattedDate = this.GetFormattedDate.bind(this);\r\n\r\n    }\r\n    setRemainingSeats(rem_seats) {\r\n\r\n        this.setState({ remainingseats: rem_seats });\r\n        \r\n    }\r\n    onCourseLinkClick() {\r\n        //this.props.history.push('/coursedetails');\r\n\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Course Details',\r\n            modalbody:  this.props.course.name ,\r\n\r\n        });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        //alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n        \r\n    };\r\n   \r\n\r\n GetFormattedDate(date) {\r\n\r\n     var dd = String(date.getDate()).padStart(2, '0');\r\n     var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n     var yyyy = date.getFullYear();\r\n\r\n     date = mm + '/' + dd + '/' + yyyy;\r\n     return date;\r\n}\r\n    render() {\r\n        const course = this.props.course;\r\n        console.log(course);\r\n        console.log(course.get('end_date'));\r\n        const todayDate = new Date();\r\n        var disabled = false;\r\n        var enrolled = false;\r\n        var courseEndDate = course.get('end_date');\r\n        var courseStartDate = course.get('start_date');\r\n\r\n     \r\n        //console.log(courseEndDate < todayDate);\r\n\r\n        \r\n        if (this.props.enrolled == true) {\r\n\r\n            enrolled = true;\r\n\r\n        }\r\n        \r\n         if (course.get('rem_seats') == 0 || (courseStartDate < todayDate))\r\n            disabled = true;\r\n        //console.log(\"toggleOnLabel:\" + toggleOnLabel);\r\n        return (\r\n            <tr id={this.props.id} className={disabled==true?\"table-secondary\":\"table-light\"\r\n    } disabled={disabled ? true : false}>\r\n                <td >{course.get('courseId')}</td>\r\n                <td >{course.get('sessionId')}</td>\r\n                <td >{course.get('category')}</td>\r\n                <td>\r\n\r\n                    <Button size=\"lg\" onClick={this.onCourseLinkClick}\r\n                         variant = \"link\" > { course.get('name') }</Button>\r\n                   <ModalComponent\r\n                show={this.state.modalshow}\r\n                title={this.state.modaltitle}\r\n                body={this.state.modalbody}\r\n\r\n                onClick={this.handleConfirmModalClose}\r\n                   onHide={this.handleConfirmModalClose} />\r\n              \r\n               \r\n                </td>      \r\n\r\n                <td>{this.GetFormattedDate(course.get('start_date'))}</td>\r\n                <td>{this.GetFormattedDate(course.get('end_date'))}</td>\r\n                <td>{course.get('duration')}</td>\r\n                <td>{course.get('credits')}</td>\r\n                <td>{this.state.remainingseats} </td>\r\n                <td> <ToggleButton disabled={disabled} enrolled={enrolled} \r\n                     sessionid={course.get('sessionId')} remainingseats={this.state.remainingseats} setRemainingSeats={this.setRemainingSeats} /> </td>\r\n                \r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseRow;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Header.js",[],["231","232"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js",["233","234","235","236","237"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ModalComponent from './ModalComponent.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\n\r\nclass ToggleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state = {\r\n            isUnEnrolled: true,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: '',\r\n            remainingseats: this.props.remainingseats,\r\n            currentLabel:'',\r\n        };\r\n      \r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n      \r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        //alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n    };\r\n    enrollCourse() {\r\n\r\n    }\r\n    \r\n    handleClick(event) {\r\n        console.log(\"before:\" + this.state.remainingseats);\r\n        //alert(event.target.value);\r\n        let updatesuccess = false;\r\n        const profile = getUser();\r\n        var userid = profile.id;\r\n        var password = profile.password;\r\n        var remseats = this.state.remainingseats;\r\n        var sessionid = this.props.sessionid;\r\n        var apiBaseUrl = \"http://127.0.0.1:8000/api/core/\";\r\n        var self = this;\r\n        //alert(profile.email);\r\n        //alert(profile.password);\r\n        if (this.state.isUnEnrolled) {\r\n            \r\n            //********enroll********\r\n            \r\n           // alert(\"Perform Enroll\");\r\n\r\n            var payload = {\r\n                \"enrolled_by\": userid,\r\n                \"course\": sessionid            \r\n               \r\n            }\r\n            \r\n            console.log(payload);\r\n            \r\n            axios.post(apiBaseUrl + 'enrolledsessions/', payload,\r\n                {\r\n                    // Axios looks for the `auth` option, and, if it is set, formats a\r\n                    // basic auth header for you automatically.\r\n                    auth: {\r\n                        username: profile.email,\r\n                        password: password\r\n                    }\r\n                }\r\n                )\r\n                .then(function (response) {\r\n                    console.log(response);\r\n                    if (response.status === 201) {\r\n                        //alert(\"Registration successfull.Login Again\");\r\n                        console.log(\"Enrollment successfull\");\r\n                        updatesuccess = true;\r\n                        ///////\r\n                        remseats = remseats - 1;\r\n                        console.log(\"remseats -enroll: \" + remseats);\r\n                        var payload_update = {\r\n                            \"rem_seats\": remseats\r\n\r\n                        }\r\n                        axios.put(apiBaseUrl + 'sessions/' + sessionid +'/', payload_update,\r\n                            {\r\n                                // Axios looks for the `auth` option, and, if it is set, formats a\r\n                                // basic auth header for you automatically.\r\n                                auth: {\r\n                                    username: profile.email,\r\n                                    password: password\r\n                                }\r\n                            }\r\n                        )\r\n                            .then(function (response) {\r\n                            console.log(response);\r\n                            if (response.status === 200) {\r\n                                //alert(\"Registration successfull.Login Again\");\r\n                                console.log(\"session details updated\");\r\n                                updatesuccess = true;\r\n\r\n                            }\r\n                           \r\n\r\n\r\n                        })\r\n                    }\r\n                    \r\n                   \r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"\")\r\n                    console.log(error);\r\n                });\r\n            if (updatesuccess = true) {\r\n                this.setState({ remainingseats: this.state.remainingseats - 1 }, () =>  {\r\n                    this.props.setRemainingSeats(this.state.remainingseats)\r\n                });\r\n                this.setState({\r\n                    modalshow: true,\r\n                    modaltitle: 'Enrollment',\r\n                    modalbody: 'Enrolled',\r\n                });\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            //********un-enroll********\r\n            \r\n            //alert(\"perform UnEnroll\");\r\n            var payload = {\r\n                \"enrolled_by\": userid,\r\n                \"course\": sessionid\r\n\r\n            }\r\n\r\n            console.log(payload);\r\n\r\n            axios.get(apiBaseUrl + 'enrolledsessions/' , \r\n                {\r\n                    // Axios looks for the `auth` option, and, if it is set, formats a\r\n                    // basic auth header for you automatically.\r\n                    params: {\r\n                        sessionid: this.props.sessionid,\r\n                        enrolledby: userid,\r\n                    },\r\n                    auth: {\r\n                        username: profile.email,\r\n                        password: password\r\n                    }\r\n                }\r\n            )\r\n                .then(res1 => {\r\n                    //console.log(res2.data);\r\n                    const enrolled_data = res1.data.results[0];\r\n                    const enrolledid = enrolled_data.id;\r\n                    \r\n\r\n                    axios.delete(\"/api/core/myenrolledsessions/\" + enrolledid + \"/\",\r\n                        {\r\n                            // Axios looks for the `auth` option, and, if it is set, formats a\r\n                            // basic auth header for you automatically.\r\n                            auth: {\r\n                                username: profile.email,\r\n                                password: password\r\n                            }\r\n                        })\r\n                        .then(function (response) {\r\n                            console.log(response);\r\n                            if (response.status === 204) {\r\n                                //alert(\"Registration successfull.Login Again\");\r\n                                console.log(\"un-Enrollment successfull\");\r\n                                updatesuccess = true;\r\n                                remseats = remseats + 1;\r\n                                console.log(\"remseats -uneroll: \" + remseats);\r\n                                var payload_update = {\r\n                                    \"rem_seats\": remseats\r\n\r\n                                }\r\n                                axios.put(apiBaseUrl + 'sessions/' + sessionid + '/', payload_update,\r\n                                    {\r\n                                        // Axios looks for the `auth` option, and, if it is set, formats a\r\n                                        // basic auth header for you automatically.\r\n                                        auth: {\r\n                                            username: profile.email,\r\n                                            password: password\r\n                                        }\r\n                                    }\r\n                                )\r\n                                    .then(function (response) {\r\n                                        console.log(response);\r\n                                        if (response.status === 201) {\r\n                                            //alert(\"Registration successfull.Login Again\");\r\n                                            console.log(\"session details updated\");\r\n                                            updatesuccess = true;\r\n\r\n                                        }\r\n                                        else if (response.data.code === 204) {\r\n                                            console.log(\"invalid data\");\r\n                                            alert(\"invalid data\")\r\n                                        }\r\n\r\n\r\n                                    })\r\n                            }\r\n                            \r\n\r\n                        })\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"\")\r\n                    console.log(error);\r\n                });\r\n            \r\n            if (updatesuccess = true) {\r\n                this.props.setRemainingSeats(this.props.remainingseats + 1);\r\n                this.setState({\r\n                    modalshow: true,\r\n                    modaltitle: 'Enrollment',\r\n                    modalbody: 'Un-Enrolled',\r\n\r\n                });\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            \r\n        }\r\n        this.setState(state => ({\r\n            isUnEnrolled: !state.isUnEnrolled\r\n\r\n        }));\r\n        console.log(\"After:\" + this.props.remainingseats);\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if (this.props.enrolled && this.props.disabled) //enrolled & course is inprogress or completed- label=enrolled; disabled=true\r\n        {\r\n            this.setState({ isUnEnrolled:false,currentLabel: 'Enrolled' });\r\n           \r\n        }\r\n        else if (this.props.disabled)\r\n            this.setState({ isUnEnrolled:true,currentLabel:'Enroll' }); //not enrolled & course is inprogress or completed -label=enroll; disabled=true\r\n        else if (this.props.enrolled) \r\n            this.setState({ isUnEnrolled:false,currentLabel:\"UnEnroll\" }); //enrolled & course not started; label - en-enroll; disabled=false; can be un-enrolled\r\n\r\n    }\r\n    render() {\r\n        let button = null;\r\n        if (this.props.enrolled && this.props.disabled)            \r\n                button = <div> <button type=\"button\" onClick={this.handleClick} className=\"btn btn-secondary btn-block\" disabled>\r\n                    {this.state.currentLabel}</button> </div>\r\n        else if (this.props.disabled)\r\n        \r\n            \r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className=\"btn btn-secondary btn-block\" disabled>\r\n                {this.state.currentLabel}</button> </div>\r\n        \r\n        else if (this.props.enrolled) \r\n\r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className=\"btn btn-success btn-block\" >\r\n                {this.state.isUnEnrolled ? \"Enroll\" : \"UnEnroll\"}</button>\r\n                <ModalComponent\r\n                    show={this.state.modalshow}\r\n                    title={this.state.modaltitle}\r\n                    body={this.state.modalbody}\r\n\r\n                    onClick={this.handleConfirmModalClose}\r\n                    onHide={this.handleConfirmModalClose} />\r\n            </div>\r\n        \r\n        else {\r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className={this.state.isUnEnrolled ? \"btn btn-primary btn-block\" : \"btn btn-success btn-block\"} >\r\n                {this.state.isUnEnrolled ? \"Enroll\" : \"UnEnroll\"}</button>\r\n            <ModalComponent\r\n                show={this.state.modalshow}\r\n                title={this.state.modaltitle}\r\n                body={this.state.modalbody}\r\n\r\n                onClick={this.handleConfirmModalClose}\r\n                   onHide={this.handleConfirmModalClose} />\r\n               </div>\r\n        }\r\n\r\n        return (\r\n            \r\n              \r\n            button\r\n\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ToggleButton;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseDetailsPage.js",["238"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass CourseDetailsPage extends React.Component\r\n{\r\n    render() {\r\n        return\r\n        (\r\n            <div>this.props.course.name</div>\r\n            );\r\n    }\r\n}\r\nexport default CourseDetailsPage;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js",["239","240"],"import React from 'react';\r\nimport ProfileS from './ProfileS.js';\r\nimport EnrolledCourseTable from './EnrolledCourseTable.js';\r\nimport { getUser } from './../../Common.js';\r\nimport axios from \"axios\";\r\nclass DashBoardS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            tot_credits: 0,\r\n            enrolled_courses: [],\r\n        }\r\n        this.getData = this.getData.bind(this);\r\n\r\n       \r\n    }\r\n     getData() {\r\n        var local_courses = [];\r\n        const profile = getUser();\r\n        var userid = profile.id\r\n        //console.log(\"userid:\" + userid);\r\n       // axios.get(\"/api/core/enrolledsessions/?enrolledby=\" + userid)\r\n         axios.get('/api/core/myenrolledsessions/',\r\n             {\r\n                 // Axios looks for the `auth` option, and, if it is set, formats a\r\n                 // basic auth header for you automatically.\r\n\r\n                 auth: {\r\n                     username: profile.email,\r\n                     password: profile.password\r\n                 }\r\n             }\r\n         )\r\n            .then(res1 => {\r\n                // just grab the first 5 links\r\n                const enrolled_course_sessions_data = res1.data.results\r\n                //console.log(course_sessions_data);\r\n                // NESTED AXIOS CALLS\r\n                enrolled_course_sessions_data.forEach(enrolledsession => {\r\n                    //console.log(\"course:\" + coursesession.course);\r\n                    //console.log(\"tot_seats:\" + coursesession.tot_seats);\r\n                    //console.log(\"rem_seats:\" + coursesession.rem_seats);\r\n                    //console.log(\"start_date:\" + coursesession.start_date);\r\n                    //console.log(\"start_date:\" +  coursesession.end_date);\r\n                    var local_course = new Map();\r\n                    axios.get(\"/api/core/sessions/?id=\" + enrolledsession.course)\r\n                        .then(res2 => {\r\n                            //console.log(res2.data);\r\n                            const coursesession = res2.data.results[0];\r\n                            const courseid = coursesession.course;\r\n                            //console.log(\"courseid:\" + courseid);\r\n                            local_course.set('sessionId', coursesession.id);\r\n                            local_course.set('start_date', new Date(coursesession.start_date));\r\n                            local_course.set('end_date', new Date(coursesession.end_date));\r\n                            local_course.set('courseId', courseid);\r\n                            var todayDate = new Date();\r\n                            if (local_course.get('end_date') < todayDate) //end date in past\r\n                                local_course.set('status', 'Completed');\r\n                            else if (local_course.get('start_date') < todayDate) //start date in past\r\n                                local_course.set('status', 'In Progress');\r\n                            else\r\n                                local_course.set('status', 'Not Started');\r\n                            axios.get(\"/api/core/courses/\" + courseid + \"/\")\r\n                                .then(res3 => {\r\n                                    const course = res3.data;\r\n                                    const course_category_id = course.category\r\n                                    local_course.set('credits', course.credit);\r\n                                    local_course.set('duration', course.duration);\r\n                                    local_course.set('name', course.name);\r\n                                    axios.get(\"/api/core/category/\" + course_category_id + \"/\")\r\n                                        .then(res4 => {\r\n                                            const course_category = res4.data.name\r\n                                            local_course.set('category', course_category);\r\n                                            local_courses.push(local_course);\r\n                                            console.log(local_courses);\r\n                                            this.setState({ enrolled_courses: local_courses}, () => {\r\n                                                console.log(this.state.enrolled_courses)\r\n                                            });\r\n\r\n                                            var totcredits = 0;\r\n                                            this.state.enrolled_courses.map((course) => {\r\n\r\n                                                totcredits = totcredits + course.get('credits');\r\n                                            });\r\n                                            this.setState({ tot_credits: totcredits }, () => {\r\n                                                console.log(this.state.tot_credits)\r\n                                            });\r\n                                        })\r\n                                })\r\n\r\n                        })\r\n\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n                })\r\n         \r\n                \r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    componentDidMount()\r\n    {\r\n\r\n        \r\n       \r\n\r\n            this.getData();\r\n        \r\n              \r\n      \r\n       \r\n\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileS tot_credits={this.state.tot_credits} />\r\n                <EnrolledCourseTable enrolled_courses={this.state.enrolled_courses}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  DashBoardS;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js",["241","242"],"import React from 'react';\r\nimport profile from './profile.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { getUser } from './../../Common.js';\r\nimport './ProfileS.css';\r\nclass ProfileS extends React.Component\r\n{\r\n   \r\n\r\n    render() {\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        //const email = profile.email;\r\n        //const name = fname + ' ' + lname;\r\n        //const phonenum = profile.phoneNumbers[0].number;\r\n        const profile = getUser();\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        const email = profile.email;\r\n        const name = profile.name;\r\n        const phonenum = profile.phonenum.substring( 0, 3) + \"- \" + profile.phonenum.substring( 3, 6) + \"- \" + profile.phonenum.substring( 6);\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Student Profile</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <Form>\r\n                                \r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"name\">\r\n                                            <Form.Label column=\"lg\">Student Name</Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  font-size=\"xx-large\" type=\"text\" value={name}  />\r\n                                            </Col>\r\n                                             </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"totcredits\">\r\n                                                <Form.Label column=\"lg\">\r\n                                                    Total Credit(s)\r\n                                                </Form.Label>\r\n                                                <Col>\r\n                                                <Form.Control className=\"profile-data\" type=\"text\"  placeholder=\"\" value={this.props.tot_credits} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"email\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Email\r\n                                            </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  value={email}  type=\"email\" placeholder=\"Email\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"phonenum\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Phone Number\r\n                                                </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  type=\"text\"   size=\"lg\" value={phonenum} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                   \r\n                                </Row>\r\n                               \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n     }\r\n}\r\n\r\n\r\nexport default  ProfileS;\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js",["243","244","245"],"import React from 'react';\r\n//import enrolledCourses from './EnrolledCourses.json';\r\n\r\nimport EnrolledCourseRow from './EnrolledCourseRow.js';\r\nimport './EnrolledCourseTable.css';\r\n\r\nclass EnrolledCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n     \r\n       \r\n    }\r\n    \r\n    render() {\r\n        \r\n        const rows = [];\r\n        //\r\n        console.log('rows.length:' + this.props.enrolled_courses.length);\r\n\r\n        this.props.enrolled_courses.map((course) => {\r\n            console.log(course);\r\n            rows.push(<EnrolledCourseRow course={course} />);\r\n        });\r\n        console.log('rows.length:' + rows.length);\r\n        var recCount = rows.length;\r\n        return (\r\n           \r\n                    <div className=\"row\">\r\n                        <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"container-fluid panel-heading\"><h4>Enrolled Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">StartDate</th>\r\n                                                <th scope=\"col\">EndDate</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default EnrolledCourseTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\CourseTablePagination.js",["246"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\AppGuest.js",["247"],"import React from 'react';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport './AppGuest.css';\r\nimport Login from './components/Login.js';\r\nimport Registration from \"./components/Registration\";\r\nimport AppUser from \"./AppUser.js\";\r\n//import { getUserAuthenticationStatus } from \"./components/Common.js\";\r\n\r\n\r\n\r\n//import Header from './components/common/Header.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isAuthenticated: false }\r\n        this.setUserAuthenticationStatus = this.setUserAuthenticationStatus.bind(this);\r\n    }\r\n    setUserAuthenticationStatus(value) {\r\n        this.setState({ isAuthenticated: value });\r\n    }\r\n    render() {\r\n\r\n       // var isAuthenticated = getUserAuthenticationStatus();\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className='App-header title'>Learning Management System </h1>                \r\n                \r\n                <div className='App-body'>\r\n                    <BrowserRouter>\r\n                        <switch>\r\n                            <Route path=\"/\" exact component={() => <Login setUserAuthenticationStatus={this.setUserAuthenticationStatus}/>} />                    \r\n                            <Route path=\"/registration\" exact component={() => <Registration setUserAuthenticationStatus={this.setUserAuthenticationStatus}/>} />                           \r\n                           \r\n                        </switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n               \r\n           \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppUser.js",["248"],"import React from 'react';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport CourseDetailsPage from './components/coursepage/CourseDetailsPage.js';\r\nimport AppGuest from './AppGuest.js';\r\nimport './AppUser.css';\r\n//import { getUserAuthenticationStatus } from \"./components/Common.js\";\r\n\r\nimport DashBoardS from './components/dashboards/students/DashBoardS.js';\r\nimport FilterCourseTable from './components/coursepage/FilterCourseTable.js';\r\n\r\n//import Header from './components/common/Header.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nclass AppUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n   \r\n    render() {\r\n\r\n       // var isAuthenticated = getUserAuthenticationStatus();\r\n       \r\n        return (\r\n            <div>\r\n                     \r\n                <nav className=\"site-nav\">\r\n                    <ul className=\"mainnav\" >\r\n                        \r\n                        <li ><a href=\"/dashboardS\">DashBoard</a></li>\r\n                        <li ><a href=\"/course\">Courses</a></li>\r\n                        <li ><a href=\"/aboutus\">About Us</a></li>\r\n                        <li ><a href=\"/logout\">Log Out</a></li>\r\n                    </ul>\r\n                </nav>\r\n                <div className='App-body'>\r\n                    <BrowserRouter>\r\n                        <switch>\r\n                            <Route path=\"/\" exact component={() => <DashBoardS />} />\r\n                            <Route path=\"/dashboardS\" exact component={() => <DashBoardS />} />\r\n                            <Route path=\"/course\" exact component={() => <FilterCourseTable />} />\r\n                            <Route path=\"/logout\" exact component={() => <AppGuest />}/>\r\n                            <Route path=\"/coursedetails\" exact component={() => <CourseDetailsPage />} />\r\n                        </switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n               \r\n           \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AppUser;\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\App.js",["249","250"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseEnrollConfirmModel.js",["251","252","253","254","255"],"\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport Button from 'react-bootstrap/Button';\r\nclass CourseEnrollConfirmModel extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n    handleClick(event)\r\n    {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    handleClose(event) {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal.Dialog>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Modal body text goes here.</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\">Close</Button>\r\n                    <Button variant=\"primary\">Save changes</Button>\r\n                </Modal.Footer>\r\n            </Modal.Dialog>\r\n        );\r\n    }\r\n}\r\nexport default CourseEnrollConfirmModel;",["256","257"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js",["258"],"import React from 'react';\r\n\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport DashboardRoute from './DashboardLayout';\r\n\r\nimport Registration from \"./components/Registration\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Contact from './components/common/Contact.js';\r\n//import { getUserAuthenticationStatus } from \"./components/Common.js\";\r\nimport DashBoardF from './components/dashboards/faculty/DashBoardF.js';\r\nimport DashBoardS from './components/dashboards/students/DashBoardS.js';\r\nimport FilterCourseTable from './components/coursepage/FilterCourseTable.js';\r\nimport HomeLayoutRoute from './HomeLayout.js';\r\nimport RegistrationLayoutRoute from './RegistrationLayout.js';\r\nimport HomePage from './components/HomePage.js';\r\nclass AppMain extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        // <LoginLayoutRoute path=\"/login\" component={Login} />\r\n        return (\r\n       \r\n            <BrowserRouter>\r\n                <switch>\r\n                  <Route exact path=\"/\">\r\n                        <Redirect to=\"/login\" />\r\n                    </Route>\r\n                    <HomeLayoutRoute path=\"/login\" component={HomePage} />\r\n                    <RegistrationLayoutRoute path=\"/registration\" component={Registration} />\r\n                    <DashboardRoute path=\"/dashboardF\" component={DashBoardF} />\r\n                    <DashboardRoute path=\"/dashboardS\" component={DashBoardS} />\r\n                    <DashboardRoute path=\"/course\" component={FilterCourseTable} />\r\n                    <HomeLayoutRoute path=\"/logout\" component={HomePage} />\r\n                    <DashboardRoute path=\"/aboutus\" component={Contact} />\r\n\r\n\r\n                </switch>\r\n            </BrowserRouter>    \r\n                );\r\n                }\r\n\r\n                }\r\nexport default AppMain;","E:\\bits\\code samples\\assignments\\lms-app\\src\\LoginLayout.js",["259"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst LoginLayout = ({ children }) => (\r\n    <div className=\"container\">\r\n        <h1 className='App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n        \r\n        <div className='App-body'>\r\n\r\n        \r\n            {children}\r\n            </div>\r\n    </div>\r\n);\r\n\r\nconst LoginLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <LoginLayout>\r\n                <Component {...matchProps} />\r\n            </LoginLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default LoginLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js",["260","261"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './DashboardLayout.css'\r\nimport { getUser } from './components/Common.js';\r\nconst DashboardLayout = ({ children, ...rest }) => {\r\n    const profile = getUser();\r\n    //const fname = profile.firstName;\r\n    //const lname = profile.lastName;\r\n    const usertype = profile.type;\r\n   \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <h1 className='App-header title'>&nbsp;&nbsp; &nbsp;&nbsp;  Learning Management System </h1>   \r\n\r\n                <nav className=\"site-nav\">\r\n                    <ul className=\"mainnav\" >\r\n\r\n                    {\r\n                        usertype == 'student' ?\r\n                        <li ><a href=\"/dashboardS\">DashBoard</a></li>\r\n                        :\r\n                            <li ><a href=\"/dashboardF\">DashBoard</a></li>\r\n                    }\r\n                        <li ><a href=\"/course\">Courses</a></li>\r\n                      \r\n                        <li ><a href=\"/logout\">Log Out</a></li>\r\n\r\n                    </ul>\r\n                </nav>\r\n\r\n            <div className=\"main\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DashboardLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <DashboardLayout>\r\n                <Component {...matchProps} />\r\n            </DashboardLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default DashboardLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js",["262","263"],"import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\n\nclass Contact extends React.Component {\n\trender() {\n  \treturn (\n    \t<div class=\"container\">\n        <h2>Contact us</h2>\n        <p>Write to us at \n        our <a href=\"#\">Email</a>.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js",["264"],"import React from 'react';\r\nimport assignedCourses from './AssingedCourses.json';\r\nimport './AssignedCourseTable.css';\r\nimport AssignedCourseRow from './AssignedCourseRow.js';\r\nclass AssignedCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.tot_classes = 0;\r\n        \r\n        assignedCourses.forEach((course) => {\r\n            \r\n            this.tot_classes = this.tot_classes + 1;\r\n        });\r\n        this.props.setTotalClasses(this.tot_classes);\r\n    }\r\n    render() {\r\n        const rows = [];\r\n        assignedCourses.forEach((course) => {\r\n            rows.push(<AssignedCourseRow course={course} />);\r\n            \r\n        });\r\n        var recCount = rows.length;\r\n        return (\r\n           \r\n                    <div className=\"row\">\r\n                        <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"container-fluid panel-heading\"><h4>Assigned Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">StartDate</th>\r\n                                                <th scope=\"col\">EndDate</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default AssignedCourseTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js",["265","266","267","268","269","270","271","272","273"],"import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { setUserSession } from './Common';\nimport MyCarousel from './common/Carousel.js';\nimport { FormErrors } from './FormErrors';\nimport axios from 'axios';\nimport { setUserAuthenticationStatus } from './Common';\nimport ModalComponent from './common/ModalComponent.js';\nimport { getUserAuthenticationStatus } from \"./Common.js\";\nimport Button from 'react-bootstrap/Button';\n\nimport './HomePage.css';\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            email: '',\n            password: '',\n            UserType: 'student',\n            formErrors: { credentials: '', email: '', password: '' },\n            credentialsValid: true,\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n            modalshow: false,\n            modaltitle: '',\n            modalbody: ''\n        }\n    }\n\n    handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({ [name]: value });\n\n        //    () => { this.validateField(name, value) });\n    }\n\n    onValueChange = (e) => {\n        this.setState({\n            UserType: e.target.value\n        })\n    }\n\n    \n\n    \n\n    errorClass(error) {\n        return (error.length === 0 ? '' : 'has-error');\n    }\n\n    handleClick = (e) => {\n        this.props.history.push('/registration');\n        e.preventDefault();\n    }\n    handleSubmit = (e) => {\n\n        //clean api\n        let self = this;\n        let fieldValidationErrors = this.state.formErrors;\n        fieldValidationErrors.credentials = '';\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            credentialsValid: true\r\n        },() => {\r\n                console.log(this.state.credentialsValid);\r\n                this.validateField();\n               \n                \n            });\n           \n        if (this.state.formValid == true)\n        {\n            //alert(\"before api call\");\n            var apiBaseUrl = \"http://localhost:8000/api/authentication/\";\n            let loginstatus = false;\n            var payload = {\n                \"email\": this.state.email,\n                \"password\": this.state.password,\n                \"role\": this.state.UserType\n            }\n            //var payload = JSONParser().parse(data)\n\n            var pwd = this.state.password;\n            console.log(\"login submit\");\n            console.log(payload);\n            axios.post(apiBaseUrl + 'login/',\n                payload\r\n            )\n                .then(function (response) {\n                    //alert(response.status);\n                    if (response.status === 200) {\n                       // alert(\"login successful\")\n                        console.log(\"Login successfull\");\n\n                        //this.setState({ users: response.data });\n                        console.log(\"pwd:\" + pwd);\n                        setUserSession(response.data[0].id, response.data[0].name, pwd, response.data[0].dob, payload.role,\n                            response.data[0].city, response.data[0].email, response.data[0].phone);\n                        console.log(\"status: \" + response.status);\n                        loginstatus = true;\n\n\n                    }\n                    else if (response.status == 204) {\n                       // alert(\"fail\")\n                        loginstatus = false;\n                        //this.setState({ formErrors: \"bad credentials\" });\n                        //console.log(response.message);\n                        //alert(response.message)\n                    }\n                    else {\n                        console.log(response.status);\n\n                    }\n                })\n                .then(() => {\n                    console.log(\"loginstatus:\" + loginstatus);\n\n                    if (loginstatus == false) {\n                        //alert(\"insdie login failue\");\n                        console.log('inside login failue');\n                        let fieldValidationErrors = this.state.formErrors;\n                        fieldValidationErrors.credentials = ' mismatch';\n                        this.setState({\n                            credentialsValid: false,\n                            formErrors: fieldValidationErrors\n                        }, this.validateForm);\n                        console.log(this.state.formErrors);\r\n\n                    }\n                    else {\n                        console.log('inside login success');\n                        //console.log(self.state.formErrors);\r\n                        this.showModel();\n                            //.then(() => {\n\n                            //    if (payload.role === \"student\") {\n                            //        self.props.history.push('/dashboardS');\n                            //    }\n                            //    else\n                            //        if (payload.role === \"faculty\") {\n                            //            self.props.history.push('/dashboardF');\n                            //        }\n\n                            //});\r\n                    }\n\n\n\n                });\n\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\r\n            e.preventDefault();\n            e.stopPropagation();\r\n        }\r\n            \r\n        }\n\n    showModel = () => {\n        this.setState({\n            modalshow: true,\n            modaltitle: 'Login',\n            modalbody: 'Login Successful !!!',\n\n        })\r\n    }\n    handleConfirmModalClose = (fromModal) => {\n        //alert(fromModal.msg);\n\n        this.setState({\n            modalshow: false\n        });\n       // alert(\"modal close\");\n        if (this.state.UserType == 'student')\n            this.props.history.push('/dashboardS');\n        else\n            this.props.history.push('/dashboardF');\n    };\n    validateField() {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n        //let credentialsValid = this.state.credentialsValid;\n\n        emailValid = this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        passwordValid = this.state.password.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        //fieldValidationErrors.credentials = credentialsValid ? '' : 'mismatch';\n        this.setState({\n            formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n            //credentialsValid: credentialsValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n\n    }\n    validateForm() {\n        this.setState({ formValid: this.state.credentialsValid && this.state.emailValid && this.state.passwordValid }, () => { console.log(this.state.formValid) });\n    }\n    render() {\n        return (\n                            \n                <div className='App-body'>\n            <div className=\"loginContainer\">\n                <div className=\"login-menu\">\n                    <form className=\"demoForm\" onSubmit={this.handleSubmit}>\n                        <div >\n\n                           \n                            <input type=\"radio\"  value=\"faculty\" checked={this.state.UserType === \"faculty\"}\n                                onChange={this.onValueChange} />\n                            <label htmlFor=\"Faculty\">Faculty</label>\n\n                            <input type=\"radio\"   value=\"student\"\n                                checked={this.state.UserType === \"student\"}\n                                onChange={this.onValueChange} />\n                            <label htmlFor=\"Student\">Student</label>\n                         </div>\n\n\n                        <div >\n                            <input type=\"email\" required name=\"email\"\n                                placeholder=\"Email\"\n                                value={this.state.email}\n                                onChange={this.handleUserInput} />\n                        </div>\n\n                        <div >\n                            <input type=\"password\" required name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleUserInput} />\n                        </div>\n\n                        <Button onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\">Login</Button>\n                        \n                       \n                        \n                        <div >\n                            <label>   New User?  <a href='#' onClick={this.handleClick}>Register Now </a> </label>\n                           \n                           \n                        </div>\n                            {!this.state.formValid ?\n                                <div className='error-message' >\n                                    <FormErrors formErrors={this.state.formErrors} />\n                                </div> :\n                                <ModalComponent\n                                    show={this.state.modalshow}\n                                    title={this.state.modaltitle}\n                                    body={this.state.modalbody}\n                                    onClick={this.handleConfirmModalClose}\n                                    onHide={this.handleConfirmModalClose} />\n                            }\n\n                    </form>\n                </div>\n\n               \n                    </div>\n</div>\n          \n        )\n    }\n\n}\nexport default withRouter(HomePage);\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js",["274"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MyCarousel from './components/common/Carousel.js';\r\nimport './HomeLayout.css';\r\n\r\nconst HomeLayout = ({ children }) => (\r\n    <div className=\"container\">\r\n        <h1 className='App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        <div className='carousel'>\r\n            <MyCarousel />\r\n        </div>\r\n\r\n            {children}\r\n        \r\n    </div>\r\n);\r\n\r\nconst HomeLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <HomeLayout>\r\n                <Component {...matchProps} />\r\n            </HomeLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default HomeLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js",["275"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './RegistrationLayout.css';\r\nconst RegistrationLayout = ({ children }) => (\r\n    <div className=\"Reg-container\">\r\n        <h1 className='Reg-App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        \r\n\r\n            {children}\r\n      \r\n    </div>\r\n);\r\n\r\nconst RegistrationLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <RegistrationLayout>\r\n                <Component {...matchProps} />\r\n            </RegistrationLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default RegistrationLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js",["276"],"\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport React, { Component } from 'react';\n\n\nfunction MyCarousel() {\n    return (\n           \n            <Carousel showThumbs={false} infiniteLoop={true} showIndicators={false} showArrows={true} autoPlay={true}>\n                <div>\n                    <img src='./img/1.jpg' alt=\"img1\" />\n\n                </div>\n                <div>\n                    <img src='./img/2.jpg' alt=\"img2\" />\n                </div>\n                <div>\n                    <img src='./img/3.jpg' alt=\"img3\" />\n                </div>\n              \n\n            </Carousel>\n        \n    );\n\n}\n\nexport default MyCarousel;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js",["277","278","279","280","281","282"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseRow from './CourseRow.js';\r\nimport courses from './courses.json';\r\nimport enrolledcourses from './../dashboards/students/EnrolledCourses.json';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\nclass CourseFilter extends React.Component\r\n{\r\n    render() {\r\n        var rows = [];\r\n        var enrolledcourses_sessionids = [];\r\n        enrolledcourses.forEach((course) => {\r\n            enrolledcourses_sessionids.push(course.sessionId);\r\n\r\n        });\r\n\r\n        var courseNameFilter = this.props.courseNameFilter;\r\n        var courseCategoryFilter = this.props.courseCategoryFilter;\r\n        var courseCreditsFilter = this.props.courseCreditsFilter;\r\n        var courseStartDateFilter = this.props.courseStartDateFilter == '' ? '' : this.props.courseStartDateFilter;\r\n        var courseEndDateFilter = this.props.courseEndDateFilter == '' ? '' : this.props.courseEndDateFilter;\r\n\r\n        /* console.log(\"courseNameFilter: \" + courseNameFilter);\r\n         console.log(\"courseCategoryFilter: \" + courseCategoryFilter);\r\n         console.log(\"courseCreditsFilter: \" + courseCreditsFilter);\r\n         console.log(\"courseStartDateFilter: \" + courseStartDateFilter);\r\n         console.log(\"courseEndDateFilter: \" + courseEndDateFilter);\r\n         console.log(enrolledcourses_sessionids);*/\r\n        courses.forEach((course) => {\r\n            //console.log(course.sessionId +\"=\" + enrolledcourses_sessionids.includes(course.sessionId));\r\n            let coursestartdate = new Date(course.start_date);\r\n            let courseenddate = new Date(course.end_date);\r\n\r\n            // console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n            // console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n            if (course.name.toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.category !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.credits != courseCreditsFilter)\r\n                return;\r\n\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                    id={course.sessionId} course={course} />);\r\n            }\r\n\r\n\r\n        });\r\n\r\n        var recCount = rows.length;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <h2> {recCount} course(s) found </h2>\r\n                            {recCount == 0 ?\r\n                                null :\r\n                                       <CourseTableWithPagination courses={rows} />\r\n                                \r\n                            }\r\n                        </div>\r\n                    </div></div></div>\r\n        );\r\n    }\r\n}\r\nexport default CourseFilter;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js",["283","284","285","286","287","288","289","290","291","292","293"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nclass CourseTableWithPagination extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n           \r\n            currentPage: 1,\r\n            rowsPerPage: 10,\r\n            upperPageBound: 3,\r\n            lowerPageBound: 0,\r\n            isPrevBtnActive: 'disabled',\r\n            isNextBtnActive: '',\r\n            pageBound: 3\r\n        };\r\n       \r\n            //console.log(this.props.courses);\r\n       \r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.btnDecrementClick = this.btnDecrementClick.bind(this);\r\n        this.btnIncrementClick = this.btnIncrementClick.bind(this);\r\n        this.btnNextClick = this.btnNextClick.bind(this);\r\n        this.btnPrevClick = this.btnPrevClick.bind(this);\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.setPrevAndNextBtnClass = this.setPrevAndNextBtnClass.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.courses.length != this.props.courses.length) {\r\n            this.setState({\r\n\r\n\r\n                currentPage: 1,\r\n                rowsPerPage: 10,\r\n                upperPageBound: 3,\r\n                lowerPageBound: 0,\r\n                isPrevBtnActive: 'disabled',\r\n                isNextBtnActive: '',\r\n                pageBound: 3\r\n            });\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n        \r\n            //this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n        else {\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n           // this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n    }\r\n    handleClick(event) {\r\n        let listid = Number(event.target.id);\r\n        this.setState({\r\n            currentPage: listid\r\n        });\r\n        $(\"ul li.active\").removeClass('active');\r\n        $('ul li#' + listid).addClass('active');\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    setPrevAndNextBtnClass(listid) {\r\n       // console.log(\"listid: \" + listid);\r\n        let totalPage = Math.ceil(this.props.courses.length / this.state.rowsPerPage);\r\n        this.setState({ isNextBtnActive: 'disabled' });\r\n        this.setState({ isPrevBtnActive: 'disabled' });\r\n        //console.log('totalPage > 1 + ' + (totalPage > 1));\r\n        if (totalPage === listid && totalPage > 1) {\r\n            this.setState({ isPrevBtnActive: '' });\r\n          //  console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (listid === 1 && totalPage > 1) {\r\n\r\n            this.setState({ isNextBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (totalPage > 1) {\r\n            this.setState({ isNextBtnActive: '' });\r\n            this.setState({ isPrevBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n\r\n        }\r\n    }\r\n    btnIncrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        let listid = this.state.upperPageBound + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnDecrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        let listid = this.state.upperPageBound - this.state.pageBound;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnPrevClick() {\r\n        if ((this.state.currentPage - 1) % this.state.pageBound === 0) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage - 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnNextClick() {\r\n        if ((this.state.currentPage + 1) > this.state.upperPageBound) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    render() {\r\n        if (this.props.courses == null)\r\n            return null;\r\n        var recCount =  this.props.courses.length;\r\n        var {  currentPage, rowsPerPage, upperPageBound, lowerPageBound, isPrevBtnActive, isNextBtnActive } = this.state;\r\n        // Logic for displaying current rowss\r\n        const indexOfLastRow = currentPage * rowsPerPage;\r\n        const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n        const currentRow = this.props.courses.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n        const renderRows = currentRow.map((rows) => {\r\n            return rows;\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.courses.length / rowsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            if (number === 1 && currentPage === 1) {\r\n                return (\r\n                    <li key={number} className='active' id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n            else if ((number < upperPageBound + 1) && number > lowerPageBound) {\r\n                return (\r\n                    <li key={number} id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n        });\r\n        let pageIncrementBtn = null;\r\n        if (pageNumbers.length > upperPageBound) {\r\n            pageIncrementBtn = <li className=''><a href='#' onClick={this.btnIncrementClick}> &hellip; </a></li>\r\n        }\r\n        let pageDecrementBtn = null;\r\n        if (lowerPageBound >= 1) {\r\n            pageDecrementBtn = <li className=''><a href='#' onClick={this.btnDecrementClick}> &hellip; </a></li>\r\n        }\r\n        let renderPrevBtn = null;\r\n        if (isPrevBtnActive == 'disabled') {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><span id=\"btnPrev\"> Prev </span></li>\r\n        }\r\n        else {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><a href='#' id=\"btnPrev\" onClick={this.btnPrevClick}> Prev </a></li>\r\n        }\r\n        let renderNextBtn = null;\r\n        if (isNextBtnActive == 'disabled') {\r\n            renderNextBtn = <li className={isNextBtnActive}><span id=\"btnNext\"> Next </span></li>\r\n        }\r\n        else {\r\n            renderNextBtn = <li className={isNextBtnActive}><a href='#' id=\"btnNext\" onClick={this.btnNextClick}> Next </a></li>\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                    <div className=\"col-lg-7 text-right\">\r\n                                    <ul id=\"page-numbers\" className=\"pagination\">\r\n                                            {renderPrevBtn}\r\n                                            {pageDecrementBtn}\r\n                                            {renderPageNumbers}\r\n                                            {pageIncrementBtn}\r\n                                            {renderNextBtn}\r\n                                        </ul>\r\n                                        </div>\r\n                                        </div>\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr id='courserow' className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Session Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">End Date</th>\r\n                                                <th scope=\"col\">Duration (days)</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Remaining Seats</th>\r\n                                                <th scope=\"col\">Enroll/Cancel</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {renderRows}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithPagination;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilterPagination.js",["294","295","296","297","298","299","300"],{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"301","replacedBy":"305"},{"ruleId":"303","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":9,"column":10,"nodeType":"309","messageId":"310","endLine":9,"endColumn":37},{"ruleId":"311","severity":1,"message":"312","line":92,"column":34,"nodeType":"313","messageId":"314","endLine":92,"endColumn":36},{"ruleId":"311","severity":1,"message":"312","line":120,"column":33,"nodeType":"313","messageId":"314","endLine":120,"endColumn":35},{"ruleId":"301","replacedBy":"315"},{"ruleId":"303","replacedBy":"316"},{"ruleId":"311","severity":1,"message":"312","line":132,"column":41,"nodeType":"313","messageId":"314","endLine":132,"endColumn":43},{"ruleId":"317","severity":1,"message":"318","line":243,"column":87,"nodeType":"319","endLine":243,"endColumn":130},{"ruleId":"307","severity":1,"message":"320","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":13},{"ruleId":"307","severity":1,"message":"321","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":13},{"ruleId":"307","severity":1,"message":"322","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":20},{"ruleId":"307","severity":1,"message":"323","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":15},{"ruleId":"307","severity":1,"message":"324","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":23},{"ruleId":"311","severity":1,"message":"312","line":53,"column":58,"nodeType":"313","messageId":"314","endLine":53,"endColumn":60},{"ruleId":"311","severity":1,"message":"312","line":54,"column":54,"nodeType":"313","messageId":"314","endLine":54,"endColumn":56},{"ruleId":"325","severity":1,"message":"326","line":57,"column":41,"nodeType":"327","messageId":"328","endLine":57,"endColumn":43},{"ruleId":"307","severity":1,"message":"329","line":62,"column":19,"nodeType":"309","messageId":"310","endLine":62,"endColumn":28},{"ruleId":"325","severity":1,"message":"330","line":66,"column":17,"nodeType":"331","messageId":"332","endLine":66,"endColumn":24},{"ruleId":"325","severity":1,"message":"330","line":68,"column":17,"nodeType":"331","messageId":"332","endLine":68,"endColumn":24},{"ruleId":"311","severity":1,"message":"333","line":70,"column":69,"nodeType":"313","messageId":"314","endLine":70,"endColumn":71},{"ruleId":"325","severity":1,"message":"330","line":71,"column":17,"nodeType":"331","messageId":"332","endLine":71,"endColumn":24},{"ruleId":"307","severity":1,"message":"334","line":154,"column":13,"nodeType":"309","messageId":"310","endLine":154,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":315,"column":99,"nodeType":"337","endLine":315,"endColumn":140},{"ruleId":"307","severity":1,"message":"338","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":18},{"ruleId":"307","severity":1,"message":"339","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":13},{"ruleId":"307","severity":1,"message":"340","line":68,"column":13,"nodeType":"309","messageId":"310","endLine":68,"endColumn":26},{"ruleId":"311","severity":1,"message":"312","line":75,"column":33,"nodeType":"313","messageId":"314","endLine":75,"endColumn":35},{"ruleId":"311","severity":1,"message":"312","line":81,"column":38,"nodeType":"313","messageId":"314","endLine":81,"endColumn":40},{"ruleId":"311","severity":1,"message":"312","line":85,"column":55,"nodeType":"313","messageId":"314","endLine":85,"endColumn":57},{"ruleId":"301","replacedBy":"341"},{"ruleId":"303","replacedBy":"342"},{"ruleId":"307","severity":1,"message":"343","line":45,"column":13,"nodeType":"309","messageId":"310","endLine":45,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":116,"column":17,"nodeType":"346","messageId":"347","endLine":116,"endColumn":37},{"ruleId":"348","severity":1,"message":"349","line":133,"column":17,"nodeType":"309","messageId":"350","endLine":133,"endColumn":24},{"ruleId":"344","severity":1,"message":"345","line":218,"column":17,"nodeType":"346","messageId":"347","endLine":218,"endColumn":37},{"ruleId":"307","severity":1,"message":"351","line":218,"column":17,"nodeType":"309","messageId":"310","endLine":218,"endColumn":30},{"ruleId":"352","severity":1,"message":"353","line":8,"column":9,"nodeType":"354","messageId":"355","endLine":10,"endColumn":15},{"ruleId":"307","severity":1,"message":"334","line":20,"column":13,"nodeType":"309","messageId":"310","endLine":20,"endColumn":19},{"ruleId":"325","severity":1,"message":"330","line":81,"column":86,"nodeType":"327","messageId":"356","endLine":81,"endColumn":88},{"ruleId":"307","severity":1,"message":"357","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":15},{"ruleId":"307","severity":1,"message":"358","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":8,"column":5,"nodeType":"361","messageId":"362","endLine":13,"endColumn":6},{"ruleId":"325","severity":1,"message":"330","line":21,"column":50,"nodeType":"327","messageId":"356","endLine":21,"endColumn":52},{"ruleId":"311","severity":1,"message":"312","line":35,"column":42,"nodeType":"313","messageId":"314","endLine":35,"endColumn":44},{"ruleId":"359","severity":1,"message":"360","line":72,"column":5,"nodeType":"361","messageId":"362","endLine":74,"endColumn":6},{"ruleId":"307","severity":1,"message":"363","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":15},{"ruleId":"359","severity":1,"message":"360","line":14,"column":5,"nodeType":"361","messageId":"362","endLine":17,"endColumn":6},{"ruleId":"307","severity":1,"message":"364","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":32},{"ruleId":"307","severity":1,"message":"365","line":26,"column":13,"nodeType":"309","messageId":"310","endLine":26,"endColumn":28},{"ruleId":"307","severity":1,"message":"366","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":19},{"ruleId":"307","severity":1,"message":"367","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":17},{"ruleId":"307","severity":1,"message":"368","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":18},{"ruleId":"307","severity":1,"message":"369","line":8,"column":8,"nodeType":"309","messageId":"310","endLine":8,"endColumn":19},{"ruleId":"307","severity":1,"message":"370","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":19},{"ruleId":"301","replacedBy":"371"},{"ruleId":"303","replacedBy":"372"},{"ruleId":"359","severity":1,"message":"360","line":18,"column":5,"nodeType":"361","messageId":"362","endLine":21,"endColumn":6},{"ruleId":"307","severity":1,"message":"373","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":26},{"ruleId":"307","severity":1,"message":"373","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":26},{"ruleId":"311","severity":1,"message":"312","line":20,"column":34,"nodeType":"313","messageId":"314","endLine":20,"endColumn":36},{"ruleId":"307","severity":1,"message":"374","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":11,"column":13,"nodeType":"319","endLine":11,"endColumn":25},{"ruleId":"311","severity":1,"message":"312","line":32,"column":42,"nodeType":"313","messageId":"314","endLine":32,"endColumn":44},{"ruleId":"307","severity":1,"message":"375","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":18},{"ruleId":"307","severity":1,"message":"376","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":37},{"ruleId":"307","severity":1,"message":"308","line":9,"column":10,"nodeType":"309","messageId":"310","endLine":9,"endColumn":37},{"ruleId":"307","severity":1,"message":"343","line":61,"column":13,"nodeType":"309","messageId":"310","endLine":61,"endColumn":17},{"ruleId":"311","severity":1,"message":"312","line":74,"column":34,"nodeType":"313","messageId":"314","endLine":74,"endColumn":36},{"ruleId":"311","severity":1,"message":"312","line":107,"column":46,"nodeType":"313","messageId":"314","endLine":107,"endColumn":48},{"ruleId":"311","severity":1,"message":"312","line":122,"column":37,"nodeType":"313","messageId":"314","endLine":122,"endColumn":39},{"ruleId":"311","severity":1,"message":"312","line":179,"column":33,"nodeType":"313","messageId":"314","endLine":179,"endColumn":35},{"ruleId":"317","severity":1,"message":"318","line":246,"column":50,"nodeType":"319","endLine":246,"endColumn":89},{"ruleId":"307","severity":1,"message":"373","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":26},{"ruleId":"307","severity":1,"message":"373","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":26},{"ruleId":"307","severity":1,"message":"373","line":4,"column":17,"nodeType":"309","messageId":"310","endLine":4,"endColumn":26},{"ruleId":"307","severity":1,"message":"377","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":13},{"ruleId":"307","severity":1,"message":"378","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":19},{"ruleId":"311","severity":1,"message":"312","line":22,"column":70,"nodeType":"313","messageId":"314","endLine":22,"endColumn":72},{"ruleId":"311","severity":1,"message":"312","line":23,"column":66,"nodeType":"313","messageId":"314","endLine":23,"endColumn":68},{"ruleId":"311","severity":1,"message":"333","line":43,"column":62,"nodeType":"313","messageId":"314","endLine":43,"endColumn":64},{"ruleId":"311","severity":1,"message":"312","line":84,"column":39,"nodeType":"313","messageId":"314","endLine":84,"endColumn":41},{"ruleId":"311","severity":1,"message":"333","line":30,"column":38,"nodeType":"313","messageId":"314","endLine":30,"endColumn":40},{"ruleId":"325","severity":1,"message":"326","line":140,"column":58,"nodeType":"327","messageId":"328","endLine":140,"endColumn":60},{"ruleId":"317","severity":1,"message":"318","line":143,"column":69,"nodeType":"319","endLine":143,"endColumn":120},{"ruleId":"317","severity":1,"message":"318","line":148,"column":50,"nodeType":"319","endLine":148,"endColumn":101},{"ruleId":"317","severity":1,"message":"318","line":154,"column":49,"nodeType":"319","endLine":154,"endColumn":94},{"ruleId":"317","severity":1,"message":"318","line":158,"column":49,"nodeType":"319","endLine":158,"endColumn":94},{"ruleId":"311","severity":1,"message":"312","line":161,"column":29,"nodeType":"313","messageId":"314","endLine":161,"endColumn":31},{"ruleId":"317","severity":1,"message":"318","line":165,"column":61,"nodeType":"319","endLine":165,"endColumn":114},{"ruleId":"311","severity":1,"message":"312","line":168,"column":29,"nodeType":"313","messageId":"314","endLine":168,"endColumn":31},{"ruleId":"317","severity":1,"message":"318","line":172,"column":61,"nodeType":"319","endLine":172,"endColumn":114},{"ruleId":"311","severity":1,"message":"312","line":181,"column":39,"nodeType":"313","messageId":"314","endLine":181,"endColumn":41},{"ruleId":"307","severity":1,"message":"379","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":17},{"ruleId":"307","severity":1,"message":"323","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":15},{"ruleId":"307","severity":1,"message":"324","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":23},{"ruleId":"307","severity":1,"message":"377","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":13},{"ruleId":"307","severity":1,"message":"378","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":19},{"ruleId":"307","severity":1,"message":"322","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":20},{"ruleId":"311","severity":1,"message":"312","line":30,"column":39,"nodeType":"313","messageId":"314","endLine":30,"endColumn":41},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],["380"],["381"],"no-unused-vars","'getUserAuthenticationStatus' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["380"],["381"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Alert' is defined but never used.","'Badge' is defined but never used.","'CourseFilter' is defined but never used.","'courses' is defined but never used.","'enrolledcourses' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'todayDate' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Expected '!==' and instead saw '!='.","'userid' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Modal' is defined but never used.","'courseEndDate' is assigned a value but never used.",["380"],["381"],"'self' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'payload' is already defined.","redeclared","'updatesuccess' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","expectedInside","'profile' is defined but never used.","'Container' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'AppUser' is defined but never used.","'CourseEnrollConfirmModel' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalTitle' is defined but never used.","'ModalHeader' is defined but never used.","'ModalDialog' is defined but never used.",["380"],["381"],"'Component' is defined but never used.","'Button' is defined but never used.","'MyCarousel' is defined but never used.","'setUserAuthenticationStatus' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'CourseRow' is defined but never used.","no-global-assign","no-unsafe-negation"]