[{"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js":"1","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js":"2","E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js":"3","E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js":"4","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js":"5","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js":"6","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js":"7","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js":"8","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleTable.js":"9","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsPage.js":"10","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js":"11","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js":"12","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js":"13","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js":"14","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js":"15","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js":"16","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js":"17","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPagination.js":"18","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js":"19","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js":"20","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleRow.js":"21","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js":"22","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsFilter.js":"23","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsTable.js":"24","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentRow.js":"25","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js":"26","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js":"27","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js":"28","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js":"29","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js":"30","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js":"31","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js":"32","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js":"33","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js":"34","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPaginationWithCard.js":"35","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseCard.js":"36","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseCard.js":"37","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\TopicTable.js":"38","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\TopicRow.js":"39","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\AddTopic.js":"40","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\AddNewTopic.js":"41","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\AddModule.js":"42","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\AddNewModule.js":"43"},{"size":520,"mtime":1612282672954,"results":"44","hashOfConfig":"45"},{"size":2319,"mtime":1615389173362,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":775,"mtime":1612622536386,"results":"48","hashOfConfig":"45"},{"size":698,"mtime":1612620672004,"results":"49","hashOfConfig":"45"},{"size":8978,"mtime":1615098081776,"results":"50","hashOfConfig":"45"},{"size":320,"mtime":1612284868747,"results":"51","hashOfConfig":"45"},{"size":1814,"mtime":1615292150508,"results":"52","hashOfConfig":"45"},{"size":7999,"mtime":1615469417272,"results":"53","hashOfConfig":"45"},{"size":2730,"mtime":1615380031927,"results":"54","hashOfConfig":"45"},{"size":1677,"mtime":1615103201810,"results":"55","hashOfConfig":"45"},{"size":2271,"mtime":1615291070006,"results":"56","hashOfConfig":"45"},{"size":1957,"mtime":1615305267809,"results":"57","hashOfConfig":"45"},{"size":14115,"mtime":1615058842796,"results":"58","hashOfConfig":"45"},{"size":746,"mtime":1612621617502,"results":"59","hashOfConfig":"45"},{"size":1745,"mtime":1614722232428,"results":"60","hashOfConfig":"45"},{"size":998,"mtime":1612610963735,"results":"61","hashOfConfig":"45"},{"size":2649,"mtime":1615045882607,"results":"62","hashOfConfig":"45"},{"size":12603,"mtime":1615384770382,"results":"63","hashOfConfig":"45"},{"size":10488,"mtime":1615005902482,"results":"64","hashOfConfig":"45"},{"size":1122,"mtime":1615390102400,"results":"65","hashOfConfig":"45"},{"size":4795,"mtime":1612638179193,"results":"66","hashOfConfig":"45"},{"size":2590,"mtime":1615379996702,"results":"67","hashOfConfig":"45"},{"size":4972,"mtime":1615382098666,"results":"68","hashOfConfig":"45"},{"size":612,"mtime":1615116519058,"results":"69","hashOfConfig":"45"},{"size":3932,"mtime":1615103067585,"results":"70","hashOfConfig":"45"},{"size":2617,"mtime":1615103126109,"results":"71","hashOfConfig":"45"},{"size":4385,"mtime":1612630245912,"results":"72","hashOfConfig":"45"},{"size":2110,"mtime":1615310542409,"results":"73","hashOfConfig":"45"},{"size":831,"mtime":1612622834226,"results":"74","hashOfConfig":"45"},{"size":3936,"mtime":1615291549843,"results":"75","hashOfConfig":"45"},{"size":2303,"mtime":1615382986585,"results":"76","hashOfConfig":"45"},{"size":1485,"mtime":1615050437904,"results":"77","hashOfConfig":"45"},{"size":10145,"mtime":1615302180176,"results":"78","hashOfConfig":"45"},{"size":2245,"mtime":1615296140558,"results":"79","hashOfConfig":"45"},{"size":4317,"mtime":1615388732957,"results":"80","hashOfConfig":"45"},{"size":2075,"mtime":1615310142349,"results":"81","hashOfConfig":"45"},{"size":6930,"mtime":1615461684897,"results":"82","hashOfConfig":"45"},{"size":773,"mtime":1615389567392,"results":"83","hashOfConfig":"45"},{"size":6490,"mtime":1615456076045,"results":"84","hashOfConfig":"45"},{"size":1749,"mtime":1615454018508,"results":"85","hashOfConfig":"45"},{"size":6753,"mtime":1615468917447,"results":"86","hashOfConfig":"45"},{"size":2160,"mtime":1615466012077,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1350ey3",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js",[],["202","203"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js",["204"],"import React from 'react';\r\n\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport DashboardRoute from './DashboardLayout';\r\n\r\nimport Registration from \"./components/Registration\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Contact from './components/common/Contact.js';\r\n//import { getUserAuthenticationStatus } from \"./components/Common.js\";\r\nimport DashBoardF from './components/dashboards/faculty/DashBoardF.js';\r\nimport DashBoardS from './components/dashboards/students/DashBoardS.js';\r\nimport FilterCourseTable from './components/coursepage/FilterCourseTable.js';\r\nimport HomeLayoutRoute from './HomeLayout.js';\r\nimport RegistrationLayoutRoute from './RegistrationLayout.js';\r\nimport HomePage from './components/HomePage.js';\r\nimport ModuleTable from './components/modules/moduleTable.js';\r\nimport TopicTable from './components/topics/TopicTable.js';\r\nimport StudentsPage from './components/students/StudentsPage.js';\r\nclass AppMain extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        // <LoginLayoutRoute path=\"/login\" component={Login} />\r\n        return (\r\n       \r\n            <BrowserRouter>\r\n                <switch>\r\n                  <Route exact path=\"/\">\r\n                        <Redirect to=\"/login\" />\r\n                    </Route>\r\n                    <HomeLayoutRoute path=\"/login\" component={HomePage} />\r\n                    <RegistrationLayoutRoute path=\"/registration\" component={Registration} />\r\n                    <DashboardRoute path=\"/dashboardF\" component={DashBoardF} />\r\n                    <DashboardRoute path=\"/dashboardS\" component={DashBoardS} />\r\n                    <DashboardRoute path=\"/course\" component={FilterCourseTable} />\r\n                    <HomeLayoutRoute path=\"/logout\" component={HomePage} />\r\n                    <DashboardRoute path=\"/aboutus\" component={Contact} />\r\n                    <DashboardRoute path=\"/modules\" component={ModuleTable} />\r\n                    <DashboardRoute path=\"/topics\" component={TopicTable} />\r\n\r\n                    <DashboardRoute path=\"/students\" component={StudentsPage} />\r\n                    \r\n\r\n\r\n                </switch>\r\n            </BrowserRouter>    \r\n                );\r\n                }\r\n\r\n                }\r\nexport default AppMain;","E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js",["205"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MyCarousel from './components/common/Carousel.js';\r\nimport './HomeLayout.css';\r\n\r\nconst HomeLayout = ({ children }) => (\r\n    <div className=\"container\">\r\n        <h1 className='App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        <div className='carousel'>\r\n            <MyCarousel />\r\n        </div>\r\n\r\n            {children}\r\n        \r\n    </div>\r\n);\r\n\r\nconst HomeLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <HomeLayout>\r\n                <Component {...matchProps} />\r\n            </HomeLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default HomeLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js",["206"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './RegistrationLayout.css';\r\nconst RegistrationLayout = ({ children }) => (\r\n    <div className=\"Reg-container\">\r\n        <h1 className='Reg-App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        \r\n\r\n            {children}\r\n      \r\n    </div>\r\n);\r\n\r\nconst RegistrationLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <RegistrationLayout>\r\n                <Component {...matchProps} />\r\n            </RegistrationLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default RegistrationLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js",["207","208","209","210","211","212","213","214"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setUserSession } from './Common';\r\n\r\nimport { FormErrors } from './FormErrors';\r\nimport axios from 'axios';\r\nimport { setUserAuthenticationStatus } from './Common';\r\nimport ModalComponent from './common/ModalComponent.js';\r\nimport { getUserAuthenticationStatus } from \"./Common.js\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport './HomePage.css';\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            email: '',\r\n            password: '',\r\n            UserType: 'student',\r\n            formErrors: { credentials: '', email: '', password: '' },\r\n            credentialsValid: true,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        }\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n   \r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            UserType: e.target.value\r\n        })\r\n    }\r\n\r\n    \r\n    errorClass(error) {\r\n        return (error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.props.history.push('/registration');\r\n        e.preventDefault();\r\n    }\r\n    handleSubmit = (e) => {\r\n\r\n        //clean api\r\n        let self = this;\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        fieldValidationErrors.credentials = '';\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            credentialsValid: true\r\n        },() => {\r\n                console.log(this.state.credentialsValid);\r\n                this.validateField();\r\n               \r\n                \r\n            });\r\n           \r\n        if (this.state.formValid == true)\r\n        {\r\n            var apiBaseUrl = \"http://localhost:8000/api/authentication/\";\r\n            let loginstatus = false;\r\n            var payload = {\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password,\r\n                \"role\": this.state.UserType\r\n            }\r\n\r\n            var pwd = this.state.password;\r\n            console.log(\"login submit\");\r\n            console.log(payload);\r\n            axios.post(apiBaseUrl + 'login/',\r\n                payload\r\n            )\r\n                .then(function (response) {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Login successfull\");\r\n\r\n                        console.log(\"pwd:\" + pwd);\r\n                        console.log(response);\r\n                        console.log(response.data[0]);\r\n                        setUserSession(response.data[0].id, response.data[0].name, pwd, response.data[0].dob, payload.role,\r\n                            response.data[0].city, response.data[0].email, response.data[0].phone);\r\n                        console.log(\"status: \" + response.status);\r\n                        loginstatus = true;\r\n\r\n\r\n                    }\r\n                    else if (response.status == 204)\r\n                    {\r\n                       \r\n                        loginstatus = false;\r\n                 \r\n                    }\r\n                    else {\r\n                        console.log(response.status);\r\n\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    console.log(\"loginstatus:\" + loginstatus);\r\n\r\n                    if (loginstatus == false) {\r\n                        console.log('inside login failue');\r\n                        let fieldValidationErrors = this.state.formErrors;\r\n                        fieldValidationErrors.credentials = ' mismatch';\r\n                        this.setState({\r\n                            credentialsValid: false,\r\n                            formErrors: fieldValidationErrors\r\n                        }, this.validateForm);\r\n                        console.log(this.state.formErrors);\r\n\r\n                    }\r\n                    else {\r\n                        console.log('inside login success');\r\n                        this.showModel();\r\n           \r\n                    }\r\n\r\n\r\n\r\n                });\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n            \r\n        }\r\n\r\n    showModel = () => {\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Login',\r\n            modalbody: 'Login Successful !!!',\r\n\r\n        })\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n       \r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n       \r\n        if (this.state.UserType == 'student')\r\n            this.props.history.push('/dashboardS');\r\n        else\r\n            this.props.history.push('/dashboardF');\r\n    };\r\n    validateField() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        //let credentialsValid = this.state.credentialsValid;\r\n\r\n        emailValid = this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\r\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n        passwordValid = this.state.password.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\r\n        //fieldValidationErrors.credentials = credentialsValid ? '' : 'mismatch';\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            //credentialsValid: credentialsValid,\r\n            passwordValid: passwordValid\r\n        }, this.validateForm);\r\n\r\n    }\r\n    validateForm() {\r\n        this.setState({ formValid: this.state.credentialsValid && this.state.emailValid && this.state.passwordValid }, () => { console.log(this.state.formValid) });\r\n    }\r\n    render() {\r\n        return (\r\n                            \r\n                <div className='App-body'>\r\n            <div className=\"loginContainer\">\r\n                <div className=\"login-menu\">\r\n                    <form className=\"demoForm\" onSubmit={this.handleSubmit}>\r\n                        <div >\r\n\r\n                           \r\n                            <input type=\"radio\"  value=\"faculty\" checked={this.state.UserType === \"faculty\"}\r\n                                onChange={this.onValueChange} />\r\n                            <label htmlFor=\"Faculty\">Faculty</label>\r\n\r\n                            <input type=\"radio\"   value=\"student\"\r\n                                checked={this.state.UserType === \"student\"}\r\n                                onChange={this.onValueChange} />\r\n                            <label htmlFor=\"Student\">Student</label>\r\n                         </div>\r\n\r\n\r\n                        <div >\r\n                            <input type=\"email\" required name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleUserInput} />\r\n                        </div>\r\n\r\n                        <div >\r\n                            <input type=\"password\" required name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleUserInput} />\r\n                        </div>\r\n\r\n                        <Button onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\">Login</Button>\r\n                        \r\n                       \r\n                        \r\n                        <div >\r\n                            <label>   New User?  <a href='#' onClick={this.handleClick}>Register Now </a> </label>\r\n                           \r\n                           \r\n                        </div>\r\n                            {!this.state.formValid ?\r\n                                <div className='error-message' >\r\n                                    <FormErrors formErrors={this.state.formErrors} />\r\n                                </div> :\r\n                                <ModalComponent\r\n                                    show={this.state.modalshow}\r\n                                    title={this.state.modaltitle}\r\n                                    body={this.state.modalbody}\r\n                                    onClick={this.handleConfirmModalClose}\r\n                                    onHide={this.handleConfirmModalClose} />\r\n                            }\r\n\r\n                    </form>\r\n                </div>\r\n\r\n               \r\n                    </div>\r\n</div>\r\n          \r\n        )\r\n    }\r\n\r\n}\r\nexport default withRouter(HomePage);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js",["215","216"],"import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\n\nclass Contact extends React.Component {\n\trender() {\n  \treturn (\n    \t<div class=\"container\">\n        <h2>Contact us</h2>\n        <p>Write to us at \n        our <a href=\"#\">Email</a>.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js",["217","218","219"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseSearch from './CourseSearch.js';\r\nimport CourseFilter from './CourseFilter.js';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\nimport CourseTableWithoutPagination from './CourseTableWithoutPagination.js';\r\nimport CourseTableWithoutPaginationWithCard from './CourseTableWithoutPaginationWithCard.js';\r\nclass FilterCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { rows:[], startdate: '', enddate: ''}\r\n        this.setStartDateRangeFilter = this.setStartDateRangeFilter.bind(this);\r\n        this.setEndDateRangeFilter = this.setEndDateRangeFilter.bind(this);\r\n        this.setResultRows = this.setResultRows.bind(this);\r\n    }\r\n  \r\n    setResultRows(r) {\r\n        this.setState({ rows: r }, () => {\r\n            console.log(\"setResultRows =\" + this.state.rows.length);\r\n     //       alert(\"setResultRows: \" + this.state.rows.length);\r\n\r\n        });\r\n    }\r\n    setStartDateRangeFilter(sdate) {\r\n        this.setState({ startdate: sdate });\r\n        //alert(\"startdate: \" + sdate);\r\n    }\r\n    setEndDateRangeFilter( edate) {\r\n        this.setState({ enddate: edate });\r\n        //alert(\"enddate: \" + edate);\r\n    }\r\n    \r\n    render() {\r\n       \r\n            return (\r\n                <div>\r\n\r\n                    <CourseSearch setCourseStartDateFilter={this.setStartDateRangeFilter}\r\n                        setCourseEndDateFilter={this.setEndDateRangeFilter} setResultRows={this.setResultRows} />\r\n                    <CourseTableWithoutPaginationWithCard rows={this.state.rows} />;\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\nexport default withRouter(FilterCourseTable);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleTable.js",["220","221","222","223","224"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsPage.js",["225","226"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport StudentsFilter from './StudentsFilter.js';\r\nimport StudentsTable from './StudentsTable.js';\r\nimport StudentRow from './StudentRow.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\nclass StudentsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.students = [];\r\n        this.state = {\r\n            rows:[],\r\n       \r\n            sessionid: null,\r\n            sessions: new Map(),\r\n            students:[],\r\n\t\t}\r\n        this.setCourseSession = this.setCourseSession.bind(this);\r\n       \r\n        this.getData();\r\n\r\n    }\r\n    getData () {\r\n\r\n        const profile = getUser();\r\n        var password = profile.password;\r\n        //alert(\"componentDidMount\");\r\n        var local_sessions = new Map();\r\n        axios.get('/api/core/mysessions/',\r\n            {\r\n\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                //alert(\"inside response\");\r\n                console.log(res1.data.results);\r\n                var mysessions_data = res1.data.results;\r\n                console.log(mysessions_data);\r\n                mysessions_data.forEach(session => {\r\n                    local_sessions.set( \"Course Name: \" + session.coursename +\r\n                        \"; Start Date: \" + session.start_date + \"; End Date: \" + session.end_date, session.id);\r\n\r\n                })\r\n                console.log(local_sessions);\r\n                this.setState({ sessions: local_sessions }, () => {\r\n                    console.log(this.state.sessions)\r\n                });\r\n\r\n            })\r\n\r\n            .catch(err =>\r\n               {//alert(err);\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n    componentDidMount()\r\n     {\r\n\r\n     \r\n           \r\n    }\r\n   componentDidUpdate(prevState) {\r\n       if (this.state.sessionid != prevState.sessionid) {\r\n           //alert(\"not same\");\r\n           //this.fetchStudents();\r\n       }\r\n    }\r\n    setCourseSession(sid) {\r\n        this.setState({ sessionid: sid }, () => {\r\n            console.log(this.state.sessionid);\r\n            //this.fetchStudents();\r\n        });\r\n        \r\n        \r\n    }\r\n     \r\n\r\n    render() {\r\n      \r\n        return (\r\n           \r\n            <div>\r\n\r\n                <StudentsFilter sessions={this.state.sessions}\r\n                        setCourseSession={this.setCourseSession}  />\r\n                <StudentsTable sessionid={this.state.sessionid} />;\r\n            </div>\r\n       \r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(StudentsPage);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js",["227","228"],"import React from 'react';\r\nimport ProfileS from './ProfileS.js';\r\nimport EnrolledCourseTable from './EnrolledCourseTable.js';\r\nimport { getUser } from './../../Common.js';\r\nimport axios from \"axios\";\r\nclass DashBoardS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            tot_credits: 0,\r\n            enrolled_courses: [],\r\n        }\r\n        this.getData = this.getData.bind(this);\r\n\r\n       \r\n    }\r\n     getData() {\r\n        var local_courses = [];\r\n        const profile = getUser();\r\n        var userid = profile.id\r\n        //console.log(\"userid:\" + userid);\r\n       // axios.get(\"/api/core/enrolledsessions/?enrolledby=\" + userid)\r\n         axios.get('/api/core/myenrolledsessions/',\r\n             {\r\n                 // Axios looks for the `auth` option, and, if it is set, formats a\r\n                 // basic auth header for you automatically.\r\n\r\n                 auth: {\r\n                     username: profile.email,\r\n                     password: profile.password\r\n                 }\r\n             }\r\n         )\r\n            .then(res1 => {\r\n                // just grab the first 5 links\r\n                const enrolled_course_sessions_data = res1.data.results\r\n                this.setState({ enrolled_courses: enrolled_course_sessions_data }, () => {\r\n                    console.log(this.state.enrolled_courses)\r\n                    var totcredits = 0;\r\n                    this.state.enrolled_courses.forEach((course) => {\r\n\r\n                        totcredits = totcredits + course.credit;\r\n                    });\r\n                    this.setState({ tot_credits: totcredits }, () => {\r\n                        console.log(this.state.tot_credits)\r\n                    });\r\n                });\r\n                \r\n                \r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    componentDidMount()\r\n    {\r\n          this.getData();\r\n       }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileS tot_credits={this.state.tot_credits} />\r\n                <EnrolledCourseTable enrolled_courses={this.state.enrolled_courses}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  DashBoardS;","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js",["229","230","231"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './DashboardLayout.css'\r\nimport { getUser } from './components/Common.js';\r\nconst DashboardLayout = ({ children, ...rest }) => {\r\n    const profile = getUser();\r\n\r\n    const usertype = profile.type;\r\n   \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            \r\n            <h1 className='App-header title '>&nbsp;&nbsp; &nbsp;&nbsp;  Learning Management System </h1>   \r\n            \r\n      \r\n            <nav className=\"site-nav\">\r\n               \r\n                    <ul className=\"mainnav\" >\r\n\r\n                    {\r\n                        usertype == 'student' ?\r\n                            <li ><a href=\"/dashboardS\"><span className=\"glyphicon glyphicon-user\"></span></a></li>\r\n                        :\r\n                            <li ><a href=\"/dashboardF\"><span className=\"glyphicon glyphicon-user\"></span></a></li>\r\n                    }\r\n                    {\r\n                        usertype == 'student' ?\r\n                            <li ><a href=\"/course\"><span className=\"glyphicon glyphicon-th-list\"/></a></li>\r\n                            :\r\n                            <li> <a href=\"/students\"><span className=\"glyphicon glyphicon-th-list\"/></a></li>\r\n                            \r\n                    }   \r\n                      \r\n                    <li > <a href=\"/logout\"> <span className=\"glyphicon glyphicon-log-out\"></span> </a></li>\r\n\r\n                    </ul>\r\n                   \r\n                </nav>\r\n             \r\n            <div className=\"main\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DashboardLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <DashboardLayout>\r\n                <Component {...matchProps} />\r\n            </DashboardLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default DashboardLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js",["232","233","234"],"import React from 'react';\r\n\r\nimport { FormErrors } from './FormErrors';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setUserSession } from './Common.js';\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport ModalComponent from './common/ModalComponent.js';\r\n\r\n//import { setUserAuthenticationStatus } from './Common.js';\r\nimport Container from 'react-bootstrap/Container'\r\n//import { getUserAuthenticationStatus } from \"./Common.js\";\r\nimport './Registration.css';\r\nclass Registration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            dob:'',\r\n            email: '',\r\n            password: '',\r\n            address: '',\r\n            city: '',\r\n            pin: '',\r\n            phone: '',\r\n            role: 'student',\r\n            \r\n\r\n            formErrors: { email: '', password: '', phonevalid: '' },\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            phonevalid: false,\r\n            formValid: false,\r\n            regsuccess:false,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n\r\n        }\r\n        this.handleDOBChange = this.handleDOBChange.bind(this);\r\n        this.handleSignClick = this.handleSignClick.bind(this);\r\n        this.GetFormattedDate = this.handleSignClick.bind(this);\r\n    }\r\n    GetFormattedDate(date)\r\n    {\r\n        alert(date);\r\n        console.log(date);\r\n        var dd = String(date.getDate()).padStart(2, '0');\r\n        var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = date.getFullYear();\r\n\r\n        date = yyyy + '-' + mm + '-' + dd;\r\n        alert(date);\r\n        console.log(date);\r\n        return date;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            role: e.target.value\r\n        })\r\n    }\r\n    handleSignClick(e) {\r\n        this.props.history.push('/login');\r\n        //e.preventDefault();\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        console.log(\"validateField\");\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let phonevalid = this.state.phonevalid;\r\n        switch (fieldName) {\r\n            case 'email':\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\r\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            case 'password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            case 'phone':\r\n                phonevalid = value.match(/^[0-9]{10}$/i);\r\n                fieldValidationErrors.phone = phonevalid ? '' : 'is not valid';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            passwordValid: passwordValid,\r\n            phonevalid: phonevalid\r\n        }, this.validateForm);\r\n        console.log(\"formValid\" + this.state.formValid)\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({ formValid: this.state.emailValid && this.state.passwordValid && this.state.phonevalid });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n    showModel = () => {\r\n        console.log(\"inside showmodel\");\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Registration',\r\n            modalbody: 'Registration Successful !!!',\r\n\r\n        }, () => { console.log(this.state.modalshow) })\r\n    }\r\n    handleSubmit = (e) => {\r\n        var apiBaseUrl = \"http://127.0.0.1:8000/api/authentication/\";\r\n        var self = this;\r\n        \r\n        var user = {\r\n            \"name\": this.state.name,\r\n            \"dob\": this.GetFormattedDate(this.state.dob),\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"phone\": this.state.phone,\r\n            \"address\": this.state.address,\r\n            \"city\": this.state.city,\r\n            \"role\": this.state.role.toLowerCase(),\r\n            \"pin\": this.state.pincode,\r\n        }\r\n        var addr = this.state.address + ' ' + this.state.city + ' ' + this.state.pin;\r\n        console.log(user);   \r\n        setUserSession(1, this.state.name, this.state.password, this.state.dob,\r\n            this.state.role, addr, this.state.email, this.state.phone);\r\n        var registionsuccess = false;\r\n        axios.post(apiBaseUrl + 'registration/', user)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status === 201) {\r\n                    //alert(\"Registration successfull.Login Again\");\r\n                    console.log(\"Registration successfull....\");\r\n                    registionsuccess = true;\r\n\r\n\r\n                }\r\n                else if (response.data.code === 204) {\r\n                    console.log(\"invalid data\");\r\n                    alert(\"invalid data\")\r\n                }\r\n                else {\r\n                    console.log(\"User  exists\");\r\n                    alert(\"User  exist\");\r\n                }\r\n\r\n            })\r\n            .then(() => {\r\n                console.log(registionsuccess);\r\n                if (registionsuccess) {\r\n                    console.log(\"inside\");\r\n                  //  this.setState({ regsuccess: true }, () => {\r\n                  //      console.log('befor model')\r\n                   // });\r\n                     //   this.showModel()\r\n                    alert(\"Registration Successful\");\r\n                    if (this.state.role === \"student\") {\r\n                                   this.props.history.push('/dashboardS');\r\n                                }\r\n                               else\r\n                                  {\r\n                                       this.props.history.push('/dashboardF');\r\n                                   }\r\n                      \r\n                   \r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"\")\r\n                console.log(error);\r\n            });\r\n        \r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n               \r\n       \r\n\r\n    }\r\n    handleDOBChange(dob) {\r\n        \r\n        this.setState({ dob: dob });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n         alert(\"modal close\");\r\n        if (this.state.UserType == 'student')\r\n            this.props.history.push('/dashboardS');\r\n        else\r\n            this.props.history.push('/dashboardF');\r\n    };\r\n    render() {\r\n        return (\r\n               \r\n                 \r\n            <Container fluid>\r\n                <div className=\" decor_bg\" >\r\n                         <div className=\"row\">\r\n                             <div className=\"container-fluid col-md-6\">\r\n                                 <div className=\"panel panel-primary\">\r\n                                     <div className=\"panel-heading\"><h4>SIGN UP</h4></div>\r\n                                     <div className=\"panel-body\">\r\n                                         <form  onSubmit={this.handleSubmit}>\r\n                                        \r\n                                             <div className=\"form-group\">\r\n                                                 \r\n                                                 <input type=\"radio\" value=\"faculty\" checked={this.state.role === \"faculty\"}\r\n                                                     onChange={this.handleChange} />\r\n                                                 <label htmlFor=\"Faculty\">Faculty</label>\r\n\r\n                                                 <input type=\"radio\" value=\"student\" checked={this.state.role === \"student\"}\r\n                                                     onChange={this.handleChange} />\r\n                                                 <label htmlFor=\"Student\">Student</label>\r\n                                                \r\n                                        </div>\r\n                                        \r\n                                             <div className=\"form-group\">\r\n                                            \r\n                                            <input\r\n                                                     type=\"text\" className=\"form-control\" placeholder=\"Enter your name *\" name=\"name\" id=\"name\"\r\n                                                value={this.state.name} onChange={this.handleUserInput} required />\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <DatePicker required className=\"d-flex justify-content-center\" placeholderText=\"Enter Date of Birth *\" selected={this.state.dob} onChange={this.handleDOBChange} name=\"dob\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </div>\r\n                                             <div className=\"form-group\">\r\n                                           \r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter email *\" id='email' name=\"email\" value={this.state.email}\r\n                                                onChange={this.handleUserInput} required />\r\n                                            \r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password *\" name=\"password\" value={this.state.password}\r\n                                                onChange={this.handleUserInput} required\r\n                                                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\" />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address\" name=\"address\" value={this.state.address}\r\n                                                     onChange={this.handleUserInput} />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter City *\" name=\"city\" value={this.state.city}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Pincode *\" name=\"pincode\" value={this.state.pincode}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Phonenumber * \" name=\"phone\" value={this.state.phone}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                            </div>\r\n                                            \r\n                                        <div className=\"form-group\">\r\n                                                \r\n                                                    <button type='submit' value='Submit' class=\"btn btn-class btn-primary btn-lg col-md-4\" disabled={!this.state.formValid}> Submit </button>\r\n                                            <button type='cancel' value='Cancel' class=\"btn  btn-class-sec btn-secondary btn-lg col-md-offset-2 col-md-4\"> Cancel </button>\r\n                                                   \r\n                                        </div>\r\n                                    \r\n                                          \r\n                                        {!this.state.regsuccess ?\r\n                                            <div className='error-message' >\r\n                                                <FormErrors formErrors={this.state.formErrors} />\r\n                                            </div>\r\n                                            :\r\n                                            <ModalComponent\r\n                                                show={this.state.modalshow}\r\n                                                title={this.state.modaltitle}\r\n                                                body={this.state.modalbody}\r\n                                                onClick={this.handleConfirmModalClose}\r\n                                                onHide={this.handleConfirmModalClose} />\r\n                                            }\r\n                       \r\n                                    </form>\r\n\r\n                                    <label className='label-style'>Regiestered User?  <a href='#' onClick={this.handleSignClick}>Sign in </a> </label>\r\n\r\n\r\n                            </div></div></div></div></div>\r\n            </Container>\r\n\r\n            );\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default (withRouter(Registration));\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js",["235"],"\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport React, { Component } from 'react';\n\n\nfunction MyCarousel() {\n    return (\n           \n            <Carousel showThumbs={false} infiniteLoop={true} showIndicators={false} showArrows={true} autoPlay={true}>\n                <div>\n                    <img src='./img/1.jpg' alt=\"img1\" />\n\n                </div>\n                <div>\n                    <img src='./img/2.jpg' alt=\"img2\" />\n                </div>\n                <div>\n                    <img src='./img/3.jpg' alt=\"img3\" />\n                </div>\n              \n\n            </Carousel>\n        \n    );\n\n}\n\nexport default MyCarousel;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPagination.js",["236","237","238"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nclass CourseTableWithoutPagination extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        var recCount = this.props.rows.length;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                \r\n                                        </div>\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr id='courserow' className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Session Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">End Date</th>\r\n                                                <th scope=\"col\">Duration (days)</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Remaining Seats</th>\r\n                                                <th scope=\"col\">Enroll/Cancel</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.props.rows}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithoutPagination;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js",["239","240","241","242","243","244"],"import axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { getUser } from './../Common.js';\r\nimport CourseRow from './CourseRow.js';\r\n//import categories from './coursecategories.json';\r\nimport courses from './courses.json';\r\nimport './CourseSearch.css';\r\nimport CourseCard from './CourseCard.js';\r\nclass CourseSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.coursename = '';\r\n        this.coursecategory = '';\r\n        this.coursecredits = '';\r\n        this.state = {\r\n            startdate: '', enddate: '',\r\n            categories: [],\r\n            courses: [],\r\n            enrolledcourses: [],\r\n            enrolledcourses_sessionids: [],\r\n            searchdisabled:false,\r\n                 \r\n        };\r\n        \r\n        this.credits = [1,2,3,4,5,6,7,8,9,10];\r\n        this.handleCourseNameChange = this.handleCourseNameChange.bind(this);\r\n        this.handleCourseCategoryChange = this.handleCourseCategoryChange.bind(this);\r\n        this.handleCourseCreditsChange = this.handleCourseCreditsChange.bind(this);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n        this.fetchData = this.fetchData.bind(this);\r\n        this.handleOnCancel = this.handleOnCancel.bind(this);\r\n    }\r\n\r\n    handleOnCancel(event) {\r\n        this.setState({ searchdisabled: !this.state.searchdisabled, }, () => {\r\n            this.props.setResultRows([])});\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    handleOnSubmit(event)\r\n    {\r\n        this.setState({ searchdisabled: !this.state.searchdisabled }, () => { });\r\n        this.fetchData();\r\n        \r\n        var rows = [];\r\n      \r\n        \r\n\r\n        var courseNameFilter = this.coursename;\r\n        var courseCategoryFilter = this.coursecategory;\r\n        var courseCreditsFilter = this.coursecredits;\r\n        var courseStartDateFilter = this.state.startdate == '' ? '' : this.state.startdate;\r\n        var courseEndDateFilter = this.state.enddate == '' ? '' : this.state.enddate;\r\n\r\n        this.state.courses.forEach((course) =>\r\n        {\r\n           \r\n            //alert(course.get('sessionId'));\r\n            let coursestartdate = new Date(course.start_date);\r\n            let courseenddate = new Date(course.end_date);\r\n            const todayDate = new Date();\r\n           \r\n            if (course.coursename.toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.category !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.credit!= courseCreditsFilter)\r\n                return;\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                \r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}            \r\n                        course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n              \r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                        course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n             \r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                         course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseCard\r\n                    enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                    course={course} />);\r\n            }\r\n\r\n\r\n        }\r\n        );\r\n       \r\n        this.props.setResultRows(rows);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n    }\r\n    handleStartDateChange(sdate)\r\n    {\r\n        this.setState({ startdate: sdate });\r\n        \r\n    }\r\n\r\n    handleEndDateChange(sdate) \r\n    {\r\n        this.setState({ enddate: sdate });        \r\n       \r\n    }\r\n     handleCourseNameChange (event) \r\n    {\r\n         this.coursename = event.target.value;\r\n         event.preventDefault();\r\n    }\r\n    handleCourseCategoryChange(event)\r\n    {\r\n        this.coursecategory = event.target.value;        \r\n        event.preventDefault();\r\n\r\n    }\r\n    handleCourseCreditsChange(event)\r\n    {\r\n        this.coursecredits = event.target.value;\r\n        event.preventDefault();\r\n    }\r\n    \r\n \r\n    fetchData() {\r\n        const profile = getUser();\r\n\r\n        var password = profile.password;\r\n\r\n\r\n        axios.get(\"/api/core/category/\")\r\n            .then((res) => {\r\n\r\n                this.setState({ categories: res.data })\r\n\r\n            }\r\n            )\r\n            .catch((err) => console.log(err));\r\n        //*************************************************************\r\n        axios.get('/api/core/myenrolledsessions/',\r\n            {\r\n\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                var enrolledids = [];\r\n                var course_enrolled_sessions_data = res1.data.results;\r\n                course_enrolled_sessions_data.forEach(enrolledsession => {\r\n                    enrolledids.push(enrolledsession.sessionid);\r\n                })\r\n                this.setState({ enrolledcourses_sessionids: enrolledids })\r\n                console.log(this.state.enrolledcourses_sessionids);\r\n            })\r\n            .then(() => {\r\n\r\n\r\n                //****************************************************************\r\n                axios.get(\"/api/core/sessions/\")\r\n                    .then(res1 => {\r\n\r\n                        const course_sessions_data = res1.data.results\r\n                        this.setState({ courses: course_sessions_data }, () => { console.log(courses) });\r\n\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n        this.fetchData();\r\n        \r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const categorynames = [];\r\n        this.state.categories.map((category) => categorynames.push(category.name));\r\n        const today = new Date();\r\n     \r\n       \r\n        return (\r\n            <div id=\"content\">               \r\n                    <div className=\"row\">\r\n                    <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                            <div className=\"container-fluid panel-heading\"><h4>COURSES</h4></div>\r\n                            <div className=\"panel-body\">\r\n\r\n\r\n                                <Form>\r\n                                    <Form.Row >\r\n\r\n                                        <Col lg=\"5\"  className=\"d-flex justify-content-left\">\r\n                                            <Form.Label column=\"d-flex justify-content-center\" column=\"lg\"   htmlFor=\"coursename\">Course Name:</Form.Label>\r\n\r\n                                            <Form.Control className=\"d-flex justify-content-center\"  type=\"text\" id=\"coursename\" name=\"coursename\"\r\n                                                    placeholder=\"React JS\" onBlur={this.handleCourseNameChange} />\r\n                                         </Col>    \r\n                                        \r\n                                      \r\n                                        <Col lg=\"5\" className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" htmlFor=\"coursecategory\">Course Category: </Form.Label>\r\n                                            <Form.Control className=\"d-flex justify-content-center\" id=\"coursecategory\" name=\"coursecategory\" as=\"select\" label=\"Course Category:\" onChange={this.handleCourseCategoryChange}>\r\n                                                <option></option>\r\n                                                {categorynames.map((category) =>\r\n                                                    <option>{category}</option>\r\n                                                )}\r\n                                                  \r\n                                                </Form.Control>   \r\n                                               \r\n                                           </Col>\r\n                                           \r\n                                        <Col lg=\"2\" className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursecredits\">Course Credits: </Form.Label>\r\n                                     \r\n                                   \r\n                                                <Form.Control className=\"d-flex justify-content-center\" id=\"coursecredits\" name=\"coursecredits\" onChange={this.handleCourseCreditsChange} as=\"select\">\r\n                                                <option></option>\r\n                                                {this.credits.map((credit) =>\r\n                                                    <option>{credit}</option>\r\n                                                )}\r\n                                                </Form.Control>\r\n                                                \r\n                                            </Col>\r\n                                       \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\"  htmlFor=\"coursestartdate\">Course StartDate:&nbsp;&nbsp;&nbsp;&nbsp;</Form.Label>\r\n                                            <DatePicker lg={2} column=\"lg\"  minDate={today} className=\"d-flex justify-content-center customDatePickerWidth\"  selected={this.state.startdate} onChange={this.handleStartDateChange} name=\"coursestartdate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col >\r\n                                        <Col  className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\"  htmlFor=\"courseenddate\">Course EndDate: &nbsp;&nbsp;&nbsp;&nbsp; </Form.Label>\r\n                                            <DatePicker lg={2} column=\"lg\"  minDate={today} className=\"d-flex justify-content-center customDatePickerWidth\"   selected={this.state.enddate} onChange={this.handleEndDateChange} name=\"courseenddate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col>\r\n                                      \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col>\r\n                                            <Button onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\" disabled={this.state.searchdisabled}>Search</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button onClick={this.handleOnCancel} variant=\"secondary\" className=\"btn-class-sec  col-md-6\" type=\"cancel\" disabled={!this.state.searchdisabled}>Clear</Button>\r\n                                        </Col>\r\n\r\n                                        \r\n                                    </Form.Row>\r\n                                </Form>\r\n\r\n                                   \r\n\r\n                            </div> </div> </div> </div>  </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\nexport default CourseSearch;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js",["245","246","247","248","249","250","251","252","253","254","255"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nclass CourseTableWithPagination extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n           \r\n            currentPage: 1,\r\n            rowsPerPage: 10,\r\n            upperPageBound: 3,\r\n            lowerPageBound: 0,\r\n            isPrevBtnActive: 'disabled',\r\n            isNextBtnActive: '',\r\n            pageBound: 3\r\n        };\r\n       \r\n            //console.log(this.props.courses);\r\n       \r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.btnDecrementClick = this.btnDecrementClick.bind(this);\r\n        this.btnIncrementClick = this.btnIncrementClick.bind(this);\r\n        this.btnNextClick = this.btnNextClick.bind(this);\r\n        this.btnPrevClick = this.btnPrevClick.bind(this);\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.setPrevAndNextBtnClass = this.setPrevAndNextBtnClass.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.courses.length != this.props.courses.length) {\r\n            this.setState({\r\n\r\n\r\n                currentPage: 1,\r\n                rowsPerPage: 10,\r\n                upperPageBound: 3,\r\n                lowerPageBound: 0,\r\n                isPrevBtnActive: 'disabled',\r\n                isNextBtnActive: '',\r\n                pageBound: 3\r\n            });\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n        \r\n            //this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n        else {\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n           // this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n    }\r\n    handleClick(event) {\r\n        let listid = Number(event.target.id);\r\n        this.setState({\r\n            currentPage: listid\r\n        });\r\n        $(\"ul li.active\").removeClass('active');\r\n        $('ul li#' + listid).addClass('active');\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    setPrevAndNextBtnClass(listid) {\r\n       // console.log(\"listid: \" + listid);\r\n        let totalPage = Math.ceil(this.props.courses.length / this.state.rowsPerPage);\r\n        this.setState({ isNextBtnActive: 'disabled' });\r\n        this.setState({ isPrevBtnActive: 'disabled' });\r\n        //console.log('totalPage > 1 + ' + (totalPage > 1));\r\n        if (totalPage === listid && totalPage > 1) {\r\n            this.setState({ isPrevBtnActive: '' });\r\n          //  console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (listid === 1 && totalPage > 1) {\r\n\r\n            this.setState({ isNextBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (totalPage > 1) {\r\n            this.setState({ isNextBtnActive: '' });\r\n            this.setState({ isPrevBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n\r\n        }\r\n    }\r\n    btnIncrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        let listid = this.state.upperPageBound + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnDecrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        let listid = this.state.upperPageBound - this.state.pageBound;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnPrevClick() {\r\n        if ((this.state.currentPage - 1) % this.state.pageBound === 0) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage - 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnNextClick() {\r\n        if ((this.state.currentPage + 1) > this.state.upperPageBound) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    render() {\r\n        if (this.props.courses == null)\r\n            return null;\r\n        var recCount =  this.props.courses.length;\r\n        var {  currentPage, rowsPerPage, upperPageBound, lowerPageBound, isPrevBtnActive, isNextBtnActive } = this.state;\r\n        // Logic for displaying current rowss\r\n        const indexOfLastRow = currentPage * rowsPerPage;\r\n        const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n        const currentRow = this.props.courses.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n        const renderRows = currentRow.map((rows) => {\r\n            return rows;\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.courses.length / rowsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            if (number === 1 && currentPage === 1) {\r\n                return (\r\n                    <li key={number} className='active' id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n            else if ((number < upperPageBound + 1) && number > lowerPageBound) {\r\n                return (\r\n                    <li key={number} id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n        });\r\n        let pageIncrementBtn = null;\r\n        if (pageNumbers.length > upperPageBound) {\r\n            pageIncrementBtn = <li className=''><a href='#' onClick={this.btnIncrementClick}> &hellip; </a></li>\r\n        }\r\n        let pageDecrementBtn = null;\r\n        if (lowerPageBound >= 1) {\r\n            pageDecrementBtn = <li className=''><a href='#' onClick={this.btnDecrementClick}> &hellip; </a></li>\r\n        }\r\n        let renderPrevBtn = null;\r\n        if (isPrevBtnActive == 'disabled') {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><span id=\"btnPrev\"> Prev </span></li>\r\n        }\r\n        else {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><a href='#' id=\"btnPrev\" onClick={this.btnPrevClick}> Prev </a></li>\r\n        }\r\n        let renderNextBtn = null;\r\n        if (isNextBtnActive == 'disabled') {\r\n            renderNextBtn = <li className={isNextBtnActive}><span id=\"btnNext\"> Next </span></li>\r\n        }\r\n        else {\r\n            renderNextBtn = <li className={isNextBtnActive}><a href='#' id=\"btnNext\" onClick={this.btnNextClick}> Next </a></li>\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                    <div className=\"col-lg-7 text-right\">\r\n                                    <ul id=\"page-numbers\" className=\"pagination\">\r\n                                            {renderPrevBtn}\r\n                                            {pageDecrementBtn}\r\n                                            {renderPageNumbers}\r\n                                            {pageIncrementBtn}\r\n                                            {renderNextBtn}\r\n                                        </ul>\r\n                                        </div>\r\n                                        </div>\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr id='courserow' className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Session Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">End Date</th>\r\n                                                <th scope=\"col\">Duration (days)</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Remaining Seats</th>\r\n                                                <th scope=\"col\">Enroll/Cancel</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {renderRows}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithPagination;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js",["256","257","258","259","260","261"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseRow from './CourseRow.js';\r\nimport courses from './courses.json';\r\nimport enrolledcourses from './../dashboards/students/EnrolledCourses.json';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\nclass CourseFilter extends React.Component\r\n{\r\n    render() {\r\n        var rows = [];\r\n        var enrolledcourses_sessionids = [];\r\n        enrolledcourses.forEach((course) => {\r\n            enrolledcourses_sessionids.push(course.sessionId);\r\n\r\n        });\r\n\r\n        var courseNameFilter = this.props.courseNameFilter;\r\n        var courseCategoryFilter = this.props.courseCategoryFilter;\r\n        var courseCreditsFilter = this.props.courseCreditsFilter;\r\n        var courseStartDateFilter = this.props.courseStartDateFilter == '' ? '' : this.props.courseStartDateFilter;\r\n        var courseEndDateFilter = this.props.courseEndDateFilter == '' ? '' : this.props.courseEndDateFilter;\r\n\r\n        /* console.log(\"courseNameFilter: \" + courseNameFilter);\r\n         console.log(\"courseCategoryFilter: \" + courseCategoryFilter);\r\n         console.log(\"courseCreditsFilter: \" + courseCreditsFilter);\r\n         console.log(\"courseStartDateFilter: \" + courseStartDateFilter);\r\n         console.log(\"courseEndDateFilter: \" + courseEndDateFilter);\r\n         console.log(enrolledcourses_sessionids);*/\r\n        courses.forEach((course) => {\r\n            //console.log(course.sessionId +\"=\" + enrolledcourses_sessionids.includes(course.sessionId));\r\n            let coursestartdate = new Date(course.start_date);\r\n            let courseenddate = new Date(course.end_date);\r\n\r\n            // console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n            // console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n            if (course.name.toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.category !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.credits != courseCreditsFilter)\r\n                return;\r\n\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                    id={course.sessionId} course={course} />);\r\n            }\r\n\r\n\r\n        });\r\n\r\n        var recCount = rows.length;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <h2> {recCount} course(s) found </h2>\r\n                            {recCount == 0 ?\r\n                                null :\r\n                                       <CourseTableWithPagination courses={rows} />\r\n                                \r\n                            }\r\n                        </div>\r\n                    </div></div></div>\r\n        );\r\n    }\r\n}\r\nexport default CourseFilter;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsFilter.js",["262","263","264"],"import React from 'react';\r\nimport { getUser } from './../Common.js';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from \"axios\";\r\n\r\nclass StudentsFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n  \r\n      \r\n        \r\n        this.handleCourseSessionChange = this.handleCourseSessionChange.bind(this);\r\n    }\r\n  \r\n    \r\n    handleCourseSessionChange(event)\r\n    {\r\n        //alert(this.props.sessions.get(event.target.value));\r\n        this.props.setCourseSession(this.props.sessions.get(event.target.value));\r\n        //event.preventDefault();\r\n    }\r\n  \r\n    \r\n   \r\n\r\n    render() {\r\n       // console.log(this.props.sessions);\r\n        var sessionsdetails = [];\r\n        for (const [key, value] of this.props.sessions.entries()) {\r\n            sessionsdetails.push(<option> {key} </option>);\r\n        }\r\n        //console.log(sessionsdetails);\r\n        return (\r\n            <div id=\"content\">\r\n                <div className=\"row\">\r\n                    <div className=\"container-fluid decor_bg\" >\r\n                        <div className=\"panel panel-primary\">\r\n                            <div className=\"container-fluid panel-heading\"><h4>STUDENTS</h4></div>\r\n                            <div className=\"panel-body\">\r\n                                <Form>\r\n                                    <Form.Row >                     \r\n\r\n                                        <Col as=\"div\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursename\">Course Session: </Form.Label>\r\n                                        </Col>\r\n                                        <Col className=\"d-flex justify-content-center\">\r\n\r\n                                            <Form.Control className=\"d-flex justify-content-center\" size=\"lg\" lg={3} id=\"coursename\" name=\"coursename\" as=\"select\" onChange={this.handleCourseSessionChange}>\r\n                                                <option></option>\r\n                                                {sessionsdetails}\r\n                                             \r\n                                            </Form.Control>\r\n\r\n                                        </Col>\r\n\r\n                                      \r\n                                        </Form.Row >  \r\n                                    \r\n                                </Form>\r\n\r\n\r\n\r\n                            </div> </div> </div> </div>  </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentsFilter;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsTable.js",["265","266","267"],"import React from 'react';\r\nimport StudentRow from './StudentRow.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\nclass StudentTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetchStudents = this.fetchStudents.bind(this);\r\n        this.state = {\r\n            \r\n            //sessionid:this.props.sessionid,\r\n            students: [],\r\n        }\r\n    }\r\n    fetchStudents() {\r\n\r\n        //alert(\"fetch students\");\r\n        console.log(\"fetch students\");\r\n                 var students = []\r\n        if (this.state.sessionid == null)\r\n            return\r\n        const profile = getUser();\r\n        var password = profile.password;\r\n\r\n        //alert(\"fetch students:\" + this.state.sessionid);\r\n        axios.get('/api/core/enrolledsessions/',\r\n            {\r\n\r\n                params: {\r\n                    sessionid: this.state.sessionid,\r\n                },\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n\r\n                console.log(res1.data.results);\r\n                var enrolledsession_data = res1.data.results;\r\n                enrolledsession_data.forEach(session => {\r\n                    var studentid = session.studentid;\r\n                    axios.get('/api/core/students/' + studentid + '/',\r\n                        {\r\n\r\n                            auth: {\r\n                                username: profile.email,\r\n                                password: password\r\n                            }\r\n                        }\r\n                    )\r\n                        .then(res2 => {\r\n                            const student = res2.data;\r\n                            //console.log(student);\r\n                            students.push(student);\r\n\r\n                        }).\r\n                        then(() => {\r\n                            console.log(students);\r\n                            console.log(\"completed\");\r\n\r\n                            this.students = students;\r\n                            this.setState({\r\n                                students: students\r\n                            }, () => console.log(this.state.students));\r\n\r\n                        })\r\n                })\r\n\r\n\r\n            })\r\n\r\n            .catch(err => {\r\n                //alert(err);\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n       // alert(\"componentDidMount\");\r\n        //alert(this.props.sessionid);\r\n        this.fetchStudents();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.sessionid != prevProps.sessionid) {\r\n            this.setState({ sessionid: this.props.sessionid }, () => {\r\n                //alert(\"componentDidUpdate:\" + this.state.sessionid);\r\n                this.fetchStudents();\r\n            }\r\n            );\r\n        }\r\n    }\r\n    //shouldComponentUpdate(nextProps) {\r\n      //  if (this.props.sessionid != nextProps.sessionid) {\r\n      //      return true;\r\n     //   }\r\n     //   return false;\r\n  //  }\r\n    render() {\r\n        var rows = [];\r\n\r\n       \r\n        //console.log(\"inside rendering\");\r\n        //console.log(this.state.students);\r\n        \r\n        this.state.students.forEach((student) => {\r\n            console.log(student);\r\n            rows.push(<StudentRow student={student} />);\r\n        });\r\n        console.log(rows);\r\n        let recCount = rows.length;\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Enrolled Students</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Students </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Student Id</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Email</th>\r\n                                                <th scope=\"col\">Phone</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}                                        </tbody></table>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default StudentTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentRow.js",["268","269"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass StudentRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    \r\n    }\r\n\r\n        render() {\r\n        return (\r\n            <tr className=\"table-light\" >\r\n\r\n                <td >{this.props.student.id}</td>\r\n                <td >{this.props.student.name}</td>\r\n                <td>{this.props.student.email}</td>\r\n                <td>{this.props.student.phone}</td>\r\n               \r\n            </tr>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentRow;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js",["270","271","272"],"import React from 'react';\r\nimport assignedCourses from './AssingedCourses.json';\r\nimport './AssignedCourseTable.css';\r\nimport AssignedCourseRow from './AssignedCourseRow.js';\r\nclass AssignedCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n       \r\n    }\r\n    onViewModuleClick = (event) => {\r\n\r\n        this.props.onViewModuleClick(event);\r\n\r\n    }\r\n    render() {\r\n        const rows = [];\r\n        this.props.assignedCourses.forEach((course) => {\r\n            rows.push(<AssignedCourseRow course={course} history={this.props.history} />);\r\n            \r\n        });\r\n        var recCount = rows.length;\r\n        return (\r\n           \r\n                    <div className=\"row\">\r\n                        <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"container-fluid panel-heading\"><h4>Assigned Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">StartDate</th>\r\n                                                <th scope=\"col\">EndDate</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Modules</th>\r\n                                                <th scope=\"col\">Evaluations</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default AssignedCourseTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js",["273","274"],"import React from 'react';\r\nimport profile from './profile.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { getUser } from './../../Common.js';\r\nimport './ProfileS.css';\r\nclass ProfileS extends React.Component\r\n{\r\n   \r\n\r\n    render() {\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        //const email = profile.email;\r\n        //const name = fname + ' ' + lname;\r\n        //const phonenum = profile.phoneNumbers[0].number;\r\n        const profile = getUser();\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        const email = profile.email;\r\n        const name = profile.name;\r\n        const phonenum = profile.phonenum.substring( 0, 3) + \"- \" + profile.phonenum.substring( 3, 6) + \"- \" + profile.phonenum.substring( 6);\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Student Profile</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <Form>\r\n                                \r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"name\">\r\n                                            <Form.Label column=\"lg\">Student Name</Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  font-size=\"xx-large\" type=\"text\" value={name}  />\r\n                                            </Col>\r\n                                             </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"totcredits\">\r\n                                                <Form.Label column=\"lg\">\r\n                                                    Total Credit(s)\r\n                                                </Form.Label>\r\n                                                <Col>\r\n                                                <Form.Control className=\"profile-data\" type=\"text\"  placeholder=\"\" value={this.props.tot_credits} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"email\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Email\r\n                                            </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  value={email}  type=\"email\" placeholder=\"Email\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"phonenum\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Phone Number\r\n                                                </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  type=\"text\"   size=\"lg\" value={phonenum} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                   \r\n                                </Row>\r\n                               \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n     }\r\n}\r\n\r\n\r\nexport default  ProfileS;\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js",["275","276","277","278","279"],"import React from 'react';\r\n//import enrolledCourses from './EnrolledCourses.json';\r\n\r\nimport EnrolledCourseRow from './EnrolledCourseRow.js';\r\nimport EnrolledCourseCard from './EnrolledCourseCard.js';\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\n\r\nimport './EnrolledCourseTable.css';\r\n\r\nclass EnrolledCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n     \r\n       \r\n    }\r\n    \r\n    render() {\r\n        \r\n        const rows = [];\r\n        //\r\n        console.log('rows.length:' + this.props.enrolled_courses.length);\r\n\r\n        this.props.enrolled_courses.map((course) => {\r\n            //console.log(course);\r\n            rows.push(<EnrolledCourseCard course={course} />);\r\n        });\r\n\r\n        var recCount = rows.length;\r\n        var finalrows = [];\r\n        if (recCount != 0) {\r\n            var j = 0;\r\n            for (var i = 0; i < recCount; i = i + 3) {\r\n                j = recCount < (i + 3) ? recCount : (i + 3);\r\n                finalrows.push(\r\n\r\n                    <CardDeck >\r\n\r\n\r\n                        {rows.slice(i, j)};\r\n\r\n                            </CardDeck>\r\n\r\n\r\n                )\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return (\r\n           \r\n                    <div className=\"row\">\r\n                        <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"container-fluid panel-heading\"><h4>Enrolled Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                   \r\n                                            finalrows\r\n                                       \r\n                            }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default EnrolledCourseTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js",["280","281"],"import React from 'react';\nimport Alert from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Button';\n/*\n * \n *  <Alert key={i} variant='danger'>\n                        {fieldName} {formErrors[fieldName]}\n                        </Alert>\n                        */\nexport const FormErrors = ({ formErrors }) =>\n    <div className='formErrors'>\n        {Object.keys(formErrors).map((fieldName, i) => {\n            if (formErrors[fieldName].length > 0) {\n                return (\n                   <React.Fragment>\n                     \n                        <h4 key={i}>\n                            {fieldName} {formErrors[fieldName]}  </h4>\n                        <div />\n                    </React.Fragment>\n\n                )\n            } else {\n                return '';\n            }\n        })}\n    </div>","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js",["282","283","284","285","286","287","288"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ToggleButton from '../common/ToggleButton.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import CourseDetailsPage from './CourseDetailsPage.js';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './CourseRow.css';\r\nimport ModalComponent from './../common/ModalComponent.js';\r\n\r\nclass CourseRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                \r\n            rem_seats: this.props.course.rem_seats,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        };\r\n\r\n        this.onCourseLinkClick = this.onCourseLinkClick.bind(this);\r\n     \r\n        this.GetFormattedDate = this.GetFormattedDate.bind(this);\r\n\r\n    }\r\n\r\n    setRemainingSeats = ( rem_seats) => {\r\n\r\n        this.setState({ rem_seats: rem_seats }, () => { console.log(this.state.rem_seats) });\r\n\r\n    }\r\n    \r\n    onCourseLinkClick() {\r\n        //this.props.history.push('/coursedetails');\r\n\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Course Details',\r\n            modalbody:  this.props.course.coursename ,\r\n\r\n        });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        //alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n        \r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.course.id != prevProps.course.id)\r\n            this.setState({ rem_seats: this.props.course.rem_seats }, () => { });\r\n    }\r\n   \r\n GetFormattedDate(date) {\r\n\r\n     var dd = String(date.getDate()).padStart(2, '0');\r\n     var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n     var yyyy = date.getFullYear();\r\n\r\n     date = mm + '/' + dd + '/' + yyyy;\r\n     return date;\r\n    }\r\n \r\n    render() {\r\n        const course = this.props.course;\r\n       // console.log(course);\r\n        //console.log(course.get('end_date'));\r\n        const todayDate = new Date();\r\n        var disabled = false;\r\n        var enrolled = false;\r\n        var courseEndDate = new Date(course.end_date);\r\n        var courseStartDate = new Date(course.start_date);\r\n        if (this.props.enrolled == true)\r\n            enrolled = true;\r\n          \r\n\r\n               \r\n         if (course.rem_seats == 0 || (courseStartDate < todayDate))\r\n            disabled = true;\r\n        //console.log(\"toggleOnLabel:\" + toggleOnLabel);\r\n        return (\r\n            <tr id={this.props.id} className={disabled==true?\"table-secondary\":\"table-light\"\r\n    } disabled={disabled ? true : false}>\r\n                <td >{course.courseid}</td>\r\n                <td >{course.id}</td>\r\n                <td >{course.category}</td>\r\n                <td>\r\n\r\n                    <Button size=\"lg\" onClick={this.onCourseLinkClick}\r\n                         variant = \"link\" > { course.coursename }</Button>\r\n                   <ModalComponent\r\n                show={this.state.modalshow}\r\n                title={this.state.modaltitle}\r\n                body={this.state.modalbody}\r\n\r\n                onClick={this.handleConfirmModalClose}\r\n                   onHide={this.handleConfirmModalClose} />\r\n              \r\n               \r\n                </td>      \r\n\r\n                <td>{this.GetFormattedDate(new Date(course.start_date))}</td>\r\n                <td>{this.GetFormattedDate(new Date(course.end_date))}</td>\r\n                <td>{course.duration}</td>\r\n                <td>{course.credit}</td>\r\n                <td>{this.state.rem_seats} </td>\r\n                <td> <ToggleButton disabled={disabled} enrolled={enrolled}\r\n                    sessionid={course.id} remainingseats={this.state.rem_seats}\r\n                    setRemainingSeats={this.setRemainingSeats} /> </td>\r\n                \r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseRow;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js",["289","290","291","292","293"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ModalComponent from './ModalComponent.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\n\r\nclass ToggleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state = {\r\n         \r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: '',\r\n     \r\n           remainingseats: this.props.remainingseats,\r\n           enrolled: this.props.enrolled,\r\n            \r\n            \r\n        };\r\n      \r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n      \r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n       \r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n    };\r\n  \r\n    handleClick(event) {\r\n       \r\n        //alert(event.target.value);\r\n        let updatesuccess = false;\r\n        const profile = getUser();\r\n        var userid = profile.id;\r\n        var password = profile.password;\r\n        var remseats = this.state.remainingseats;\r\n        var sessionid = this.props.sessionid;\r\n        var apiBaseUrl = \"http://127.0.0.1:8000/api/core/\";\r\n        var self = this;\r\n       \r\n        if (!this.state.enrolled) {\r\n            \r\n            //********enroll********\r\n            \r\n           // alert(\"Perform Enroll\");\r\n\r\n            var payload = {\r\n                \"enrolled_by\": userid,\r\n                \"course\": sessionid            \r\n               \r\n            }\r\n            \r\n            \r\n            \r\n            axios.post(apiBaseUrl + 'enrolledsessions/', payload,\r\n                {\r\n                    // Axios looks for the `auth` option, and, if it is set, formats a\r\n                    // basic auth header for you automatically.\r\n                    auth: {\r\n                        username: profile.email,\r\n                        password: password\r\n                    }\r\n                }\r\n                )\r\n                .then(function (response) {\r\n                    //console.log(response);\r\n                    if (response.status === 201) {\r\n                        //alert(\"Registration successfull.Login Again\");\r\n                        //console.log(\"Enrollment successfull\");\r\n                        updatesuccess = true;\r\n                        ///////\r\n                        remseats = remseats - 1;\r\n                        //console.log(\"remseats -enroll: \" + remseats);\r\n                        var payload_update = {\r\n                            \"rem_seats\": remseats\r\n\r\n                        }\r\n                        axios.put(apiBaseUrl + 'sessions/' + sessionid +'/', payload_update,\r\n                            {\r\n                            \r\n                                auth: {\r\n                                    username: profile.email,\r\n                                    password: password\r\n                                }\r\n                            }\r\n                        )\r\n                            .then(function (response) {\r\n                          \r\n                            if (response.status === 200) {\r\n                                console.log(response.data);\r\n                                console.log(\"session details updated\");\r\n                                updatesuccess = true;\r\n                              \r\n                            }\r\n                           \r\n\r\n\r\n                        })\r\n                    }\r\n                    \r\n                   \r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"\")\r\n                    console.log(error);\r\n                });\r\n            if (updatesuccess = true) {\r\n                console.log(this.state.remainingseats);\r\n                this.setState({ remainingseats: this.state.remainingseats - 1 }, () => {\r\n                    this.props.setRemainingSeats(this.state.remainingseats )\r\n                });\r\n                \r\n                this.setState({\r\n                    modalshow: true,\r\n                    modaltitle: 'Enrollment',\r\n                    modalbody: 'Enrolled',\r\n                });\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            //********un-enroll********\r\n            var payload = {\r\n                \"enrolled_by\": userid,\r\n                \"course\": sessionid\r\n\r\n            }\r\n\r\n            //console.log(payload);\r\n\r\n            axios.get(apiBaseUrl + 'enrolledsessions/' , \r\n                {\r\n                    // Axios looks for the `auth` option, and, if it is set, formats a\r\n                    // basic auth header for you automatically.\r\n                    params: {\r\n                        sessionid: this.props.sessionid,\r\n                        enrolledby: userid,\r\n                    },\r\n                    auth: {\r\n                        username: profile.email,\r\n                        password: password\r\n                    }\r\n                }\r\n            )\r\n                .then(res1 => {\r\n                    //console.log(res1.data);\r\n                    const enrolled_data = res1.data.results[0];\r\n                    //console.log(enrolled_data);\r\n                    const enrolledid = enrolled_data.id;\r\n                    \r\n\r\n                    axios.delete(\"/api/core/myenrolledsessions/\" + enrolledid + \"/\",\r\n                        {\r\n            \r\n                            auth: {\r\n                                username: profile.email,\r\n                                password: password\r\n                            }\r\n                        })\r\n                        .then(function (response) {\r\n                            //console.log(response);\r\n                            if (response.status === 204) {\r\n                                //alert(\"Registration successfull.Login Again\");\r\n                                console.log(\"un-Enrollment successfull\");\r\n                                updatesuccess = true;\r\n                                remseats = remseats + 1;\r\n                                //console.log(\"remseats -uneroll: \" + remseats);\r\n                                var payload_update = {\r\n                                    \"rem_seats\": remseats\r\n\r\n                                }\r\n                                axios.put(apiBaseUrl + 'sessions/' + sessionid + '/', payload_update,\r\n                                    {\r\n                                        // Axios looks for the `auth` option, and, if it is set, formats a\r\n                                        // basic auth header for you automatically.\r\n                                        auth: {\r\n                                            username: profile.email,\r\n                                            password: password\r\n                                        }\r\n                                    }\r\n                                )\r\n                                    .then(function (response) {\r\n                                        //console.log(response);\r\n                                        if (response.status === 201) {\r\n                                            //alert(\"Registration successfull.Login Again\");\r\n                                            \r\n                                            console.log(\"session details updated\");\r\n                                            updatesuccess = true;\r\n\r\n                                        }\r\n                                        else if (response.data.code === 204) {\r\n                                            console.log(\"invalid data\");\r\n                                            alert(\"invalid data\")\r\n                                        }\r\n\r\n\r\n                                    })\r\n                            }\r\n                            \r\n\r\n                        })\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"\")\r\n                    console.log(error);\r\n                });\r\n            \r\n            if (updatesuccess = true) {\r\n                this.setState({ remainingseats: this.state.remainingseats + 1 }, () => {\r\n                    this.props.setRemainingSeats(this.state.remainingseats)\r\n                });\r\n                this.setState({\r\n                    modalshow: true,\r\n                    modaltitle: 'Enrollment',\r\n                    modalbody: 'Un-Enrolled',\r\n\r\n                });\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            \r\n        }\r\n        this.setState(function (state) {\r\n            return {\r\n                enrolled: !state.enrolled\r\n            }\r\n        }, () => {\r\n                console.log(this.state.enrolled);\r\n        });\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n    \r\n   \r\n   \r\n\r\n    render() {\r\n        let button = null;\r\n        if (this.state.enrolled && this.props.disabled)            \r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className=\"btn btn-secondary btn-lg\" disabled>\r\n                    Enrolled</button> </div>\r\n        else if (this.props.disabled)\r\n        \r\n            \r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className=\"btn btn-secondary btn-lg\" disabled>\r\n                Enroll</button> </div>\r\n       \r\n        else {\r\n            button = <div> <button type=\"button\" onClick={this.handleClick} className={!this.state.enrolled ? \"btn btn-primary btn-lg\" : \"btn btn-success btn-lg\"} >\r\n                {!this.state.enrolled ? \"Enroll\" : \"UnEnroll\"}</button>\r\n            <ModalComponent\r\n                show={this.state.modalshow}\r\n                title={this.state.modaltitle}\r\n                body={this.state.modalbody}\r\n\r\n                onClick={this.handleConfirmModalClose}\r\n                   onHide={this.handleConfirmModalClose} />\r\n               </div>\r\n        }\r\n\r\n        return (\r\n            \r\n              \r\n            button\r\n\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ToggleButton;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPaginationWithCard.js",["294","295","296","297","298","299"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport CardGroup from 'react-bootstrap/CardGroup'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport './CourseTableWithoutPaginationWithCard.css';\r\nclass CourseTableWithoutPaginationWithCard extends React.Component\r\n{CardDeck\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        var recCount = this.props.rows.length;\r\n        var finalrows = [];\r\n        if (recCount != 0)\r\n        {\r\n            var j = 0;\r\n            for (var i = 0; i < recCount; i = i + 3) {\r\n                j = recCount < (i + 3) ? recCount : (i + 3);\r\n                finalrows.push(\r\n                   \r\n                    <CardDeck >\r\n                        \r\n                       \r\n                            {this.props.rows.slice(i, j)};\r\n                           \r\n                            </CardDeck>\r\n                       \r\n                       \r\n                         )\r\n                        } \r\n\r\n                         \r\n                        }\r\n                        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                \r\n                                        </div>\r\n                                    {finalrows}\r\n\r\n\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithoutPaginationWithCard;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseCard.js",["300","301","302","303","304","305","306","307","308"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ToggleButton from '../common/ToggleButton.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import CourseDetailsPage from './CourseDetailsPage.js';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport ModalComponent from './../common/ModalComponent.js';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport './CourseCard.css';\r\nclass CourseCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            rem_seats: this.props.course.rem_seats,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        };\r\n\r\n        this.onCourseLinkClick = this.onCourseLinkClick.bind(this);\r\n\r\n        this.GetFormattedDate = this.GetFormattedDate.bind(this);\r\n\r\n    }\r\n\r\n    setRemainingSeats = (rem_seats) => {\r\n\r\n        this.setState({ rem_seats: rem_seats }, () => { console.log(this.state.rem_seats) });\r\n\r\n    }\r\n\r\n    onCourseLinkClick() {\r\n        //this.props.history.push('/coursedetails');\r\n\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Course Details',\r\n            modalbody: this.props.course.coursename,\r\n\r\n        });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        //alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.course.id != prevProps.course.id)\r\n            this.setState({ rem_seats: this.props.course.rem_seats }, () => { });\r\n    }\r\n\r\n    GetFormattedDate(date) {\r\n\r\n        var dd = String(date.getDate()).padStart(2, '0');\r\n        var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = date.getFullYear();\r\n\r\n        date = mm + '/' + dd + '/' + yyyy;\r\n        return date;\r\n    }\r\n    render() {\r\n        const course = this.props.course;\r\n        const todayDate = new Date();\r\n        var disabled = false;\r\n        var enrolled = false;\r\n        var courseEndDate = new Date(course.end_date);\r\n        var courseStartDate = new Date(course.start_date);\r\n        if (this.props.enrolled == true && (courseStartDate < todayDate)) {\r\n            enrolled = true;\r\n            disabled = true;\r\n        }\r\n        else if (this.props.enrolled == true && (courseStartDate > todayDate)) {\r\n            enrolled = true;\r\n            disabled = false;\r\n        }\r\n        else if (this.props.enrolled == false && (course.rem_seats == 0 || (courseStartDate < todayDate)))\r\n        {\r\n            disabled = true;\r\n            enrolled = false;\r\n        }\r\n        \r\n        return (\r\n       \r\n            <Card border=\"primary\"  style={{ width: '18rem' }}>\r\n                <Card.Header className=\"bg-primary\">\r\n                    <h3> {course.coursename}</h3>\r\n             \r\n                    <ModalComponent\r\n                        show={this.state.modalshow}\r\n                        title={this.state.modaltitle}\r\n                        body={this.state.modalbody}\r\n\r\n                        onClick={this.handleConfirmModalClose}\r\n                        onHide={this.handleConfirmModalClose} />\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    \r\n     \r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>Category: {course.category}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item> Schedule: {this.GetFormattedDate(new Date(course.start_date))} - {this.GetFormattedDate(new Date(course.end_date))}</ListGroup.Item>\r\n                        <ListGroup.Item>Credits: {course.credit}</ListGroup.Item>\r\n                        <ListGroup.Item>Reamining Seats: {this.state.rem_seats}</ListGroup.Item>\r\n                    </ListGroup>\r\n                  <ToggleButton disabled={disabled} enrolled={enrolled}\r\n                                sessionid={course.id} remainingseats={this.state.rem_seats}\r\n                                setRemainingSeats={this.setRemainingSeats} />\r\n\r\n                </Card.Body>\r\n                </Card>\r\n               \r\n        \r\n                );\r\n    }\r\n}\r\n\r\nexport default CourseCard;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseCard.js",["309","310","311","312","313","314"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import CourseDetailsPage from './CourseDetailsPage.js';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n//import './EnrolledCourseCard.css';\r\nclass EnrolledCourseCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            rem_seats: this.props.course.rem_seats,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        };\r\n\r\n\r\n        this.GetFormattedDate = this.GetFormattedDate.bind(this);\r\n\r\n    }\r\n\r\n\r\n    GetFormattedDate(date) {\r\n\r\n        var dd = String(date.getDate()).padStart(2, '0');\r\n        var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = date.getFullYear();\r\n\r\n        date = mm + '/' + dd + '/' + yyyy;\r\n        return date;\r\n    }\r\n    render() {\r\n        const course = this.props.course;\r\n        var today = new Date();\r\n        var sdate = new Date(course.start_date);\r\n        var edate = new Date(course.end_date);\r\n\r\n\r\n      \r\n        return (\r\n\r\n            <Card border=\"primary\" style={{ width: '18rem' }}>\r\n                <Card.Header className=\"bg-primary\">\r\n                    <h3> {course.coursename}</h3>\r\n\r\n                  \r\n                </Card.Header>\r\n                <Card.Body>\r\n                <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>Category: {course.category}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item> Schedule: {this.GetFormattedDate(new Date(course.start_date))} - {this.GetFormattedDate(new Date(course.end_date))}</ListGroup.Item>\r\n                        <ListGroup.Item>Credits: {course.credit}</ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnrolledCourseCard;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\TopicTable.js",["315","316","317","318"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\TopicRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\AddTopic.js",["319","320","321","322","323","324"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\topics\\AddNewTopic.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\AddModule.js",["325","326","327","328","329","330","331"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\AddNewModule.js",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":21,"column":5,"nodeType":"338","messageId":"339","endLine":24,"endColumn":6},{"ruleId":"340","severity":1,"message":"341","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"341","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"344","line":7,"column":10,"nodeType":"342","messageId":"343","endLine":7,"endColumn":37},{"ruleId":"340","severity":1,"message":"345","line":9,"column":10,"nodeType":"342","messageId":"343","endLine":9,"endColumn":37},{"ruleId":"340","severity":1,"message":"346","line":57,"column":13,"nodeType":"342","messageId":"343","endLine":57,"endColumn":17},{"ruleId":"347","severity":1,"message":"348","line":70,"column":34,"nodeType":"349","messageId":"350","endLine":70,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":100,"column":46,"nodeType":"349","messageId":"350","endLine":100,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":114,"column":37,"nodeType":"349","messageId":"350","endLine":114,"endColumn":39},{"ruleId":"347","severity":1,"message":"348","line":159,"column":33,"nodeType":"349","messageId":"350","endLine":159,"endColumn":35},{"ruleId":"351","severity":1,"message":"352","line":226,"column":50,"nodeType":"353","endLine":226,"endColumn":89},{"ruleId":"340","severity":1,"message":"354","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":14},{"ruleId":"351","severity":1,"message":"352","line":11,"column":13,"nodeType":"353","endLine":11,"endColumn":25},{"ruleId":"340","severity":1,"message":"355","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":20},{"ruleId":"340","severity":1,"message":"356","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":33},{"ruleId":"340","severity":1,"message":"357","line":7,"column":8,"nodeType":"342","messageId":"343","endLine":7,"endColumn":36},{"ruleId":"340","severity":1,"message":"358","line":31,"column":13,"nodeType":"342","messageId":"343","endLine":31,"endColumn":19},{"ruleId":"340","severity":1,"message":"359","line":80,"column":33,"nodeType":"342","messageId":"343","endLine":80,"endColumn":46},{"ruleId":"340","severity":1,"message":"358","line":107,"column":13,"nodeType":"342","messageId":"343","endLine":107,"endColumn":19},{"ruleId":"360","severity":1,"message":"361","line":131,"column":53,"nodeType":"362","messageId":"363","endLine":131,"endColumn":55},{"ruleId":"347","severity":1,"message":"348","line":199,"column":42,"nodeType":"349","messageId":"350","endLine":199,"endColumn":44},{"ruleId":"340","severity":1,"message":"364","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":18},{"ruleId":"347","severity":1,"message":"365","line":70,"column":33,"nodeType":"349","messageId":"350","endLine":70,"endColumn":35},{"ruleId":"340","severity":1,"message":"366","line":18,"column":13,"nodeType":"342","messageId":"343","endLine":18,"endColumn":26},{"ruleId":"340","severity":1,"message":"358","line":20,"column":13,"nodeType":"342","messageId":"343","endLine":20,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":22,"column":34,"nodeType":"349","messageId":"350","endLine":22,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":28,"column":34,"nodeType":"349","messageId":"350","endLine":28,"endColumn":36},{"ruleId":"340","severity":1,"message":"346","line":124,"column":13,"nodeType":"342","messageId":"343","endLine":124,"endColumn":17},{"ruleId":"347","severity":1,"message":"348","line":206,"column":33,"nodeType":"349","messageId":"350","endLine":206,"endColumn":35},{"ruleId":"351","severity":1,"message":"352","line":297,"column":87,"nodeType":"353","endLine":297,"endColumn":130},{"ruleId":"340","severity":1,"message":"341","line":4,"column":17,"nodeType":"342","messageId":"343","endLine":4,"endColumn":26},{"ruleId":"340","severity":1,"message":"367","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":9},{"ruleId":"336","severity":1,"message":"337","line":5,"column":5,"nodeType":"338","messageId":"339","endLine":7,"endColumn":6},{"ruleId":"347","severity":1,"message":"348","line":17,"column":39,"nodeType":"349","messageId":"350","endLine":17,"endColumn":41},{"ruleId":"340","severity":1,"message":"368","line":10,"column":8,"nodeType":"342","messageId":"343","endLine":10,"endColumn":17},{"ruleId":"347","severity":1,"message":"348","line":60,"column":58,"nodeType":"349","messageId":"350","endLine":60,"endColumn":60},{"ruleId":"347","severity":1,"message":"348","line":61,"column":54,"nodeType":"349","messageId":"350","endLine":61,"endColumn":56},{"ruleId":"340","severity":1,"message":"369","line":69,"column":19,"nodeType":"342","messageId":"343","endLine":69,"endColumn":28},{"ruleId":"347","severity":1,"message":"365","line":76,"column":60,"nodeType":"349","messageId":"350","endLine":76,"endColumn":62},{"ruleId":"370","severity":1,"message":"371","line":220,"column":96,"nodeType":"372","endLine":220,"endColumn":107},{"ruleId":"347","severity":1,"message":"365","line":30,"column":38,"nodeType":"349","messageId":"350","endLine":30,"endColumn":40},{"ruleId":"360","severity":1,"message":"373","line":140,"column":58,"nodeType":"362","messageId":"374","endLine":140,"endColumn":60},{"ruleId":"351","severity":1,"message":"352","line":143,"column":69,"nodeType":"353","endLine":143,"endColumn":120},{"ruleId":"351","severity":1,"message":"352","line":148,"column":50,"nodeType":"353","endLine":148,"endColumn":101},{"ruleId":"351","severity":1,"message":"352","line":154,"column":49,"nodeType":"353","endLine":154,"endColumn":94},{"ruleId":"351","severity":1,"message":"352","line":158,"column":49,"nodeType":"353","endLine":158,"endColumn":94},{"ruleId":"347","severity":1,"message":"348","line":161,"column":29,"nodeType":"349","messageId":"350","endLine":161,"endColumn":31},{"ruleId":"351","severity":1,"message":"352","line":165,"column":61,"nodeType":"353","endLine":165,"endColumn":114},{"ruleId":"347","severity":1,"message":"348","line":168,"column":29,"nodeType":"349","messageId":"350","endLine":168,"endColumn":31},{"ruleId":"351","severity":1,"message":"352","line":172,"column":61,"nodeType":"353","endLine":172,"endColumn":114},{"ruleId":"347","severity":1,"message":"348","line":181,"column":39,"nodeType":"349","messageId":"350","endLine":181,"endColumn":41},{"ruleId":"340","severity":1,"message":"375","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":13},{"ruleId":"340","severity":1,"message":"376","line":7,"column":10,"nodeType":"342","messageId":"343","endLine":7,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":22,"column":70,"nodeType":"349","messageId":"350","endLine":22,"endColumn":72},{"ruleId":"347","severity":1,"message":"348","line":23,"column":66,"nodeType":"349","messageId":"350","endLine":23,"endColumn":68},{"ruleId":"347","severity":1,"message":"365","line":43,"column":62,"nodeType":"349","messageId":"350","endLine":43,"endColumn":64},{"ruleId":"347","severity":1,"message":"348","line":84,"column":39,"nodeType":"349","messageId":"350","endLine":84,"endColumn":41},{"ruleId":"340","severity":1,"message":"377","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":17},{"ruleId":"340","severity":1,"message":"375","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":13},{"ruleId":"340","severity":1,"message":"378","line":31,"column":26,"nodeType":"342","messageId":"343","endLine":31,"endColumn":31},{"ruleId":"379","severity":1,"message":"380","line":58,"column":27,"nodeType":"381","messageId":"382","endLine":58,"endColumn":28,"fix":"383"},{"ruleId":"347","severity":1,"message":"365","line":87,"column":34,"nodeType":"349","messageId":"350","endLine":87,"endColumn":36},{"ruleId":"347","severity":1,"message":"348","line":122,"column":42,"nodeType":"349","messageId":"350","endLine":122,"endColumn":44},{"ruleId":"340","severity":1,"message":"354","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":14},{"ruleId":"336","severity":1,"message":"337","line":7,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":6},{"ruleId":"340","severity":1,"message":"384","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":23},{"ruleId":"336","severity":1,"message":"337","line":6,"column":5,"nodeType":"338","messageId":"339","endLine":10,"endColumn":6},{"ruleId":"347","severity":1,"message":"348","line":31,"column":42,"nodeType":"349","messageId":"350","endLine":31,"endColumn":44},{"ruleId":"340","severity":1,"message":"385","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":15},{"ruleId":"340","severity":1,"message":"386","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":17},{"ruleId":"340","severity":1,"message":"387","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":25},{"ruleId":"336","severity":1,"message":"337","line":11,"column":5,"nodeType":"338","messageId":"339","endLine":16,"endColumn":6},{"ruleId":"360","severity":1,"message":"361","line":24,"column":50,"nodeType":"362","messageId":"363","endLine":24,"endColumn":52},{"ruleId":"347","severity":1,"message":"365","line":31,"column":22,"nodeType":"349","messageId":"350","endLine":31,"endColumn":24},{"ruleId":"347","severity":1,"message":"348","line":59,"column":42,"nodeType":"349","messageId":"350","endLine":59,"endColumn":44},{"ruleId":"340","severity":1,"message":"388","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":13},{"ruleId":"340","severity":1,"message":"389","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":13},{"ruleId":"340","severity":1,"message":"390","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":18},{"ruleId":"340","severity":1,"message":"391","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":13},{"ruleId":"347","severity":1,"message":"365","line":54,"column":34,"nodeType":"349","messageId":"350","endLine":54,"endColumn":36},{"ruleId":"340","severity":1,"message":"392","line":75,"column":13,"nodeType":"342","messageId":"343","endLine":75,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":77,"column":33,"nodeType":"349","messageId":"350","endLine":77,"endColumn":35},{"ruleId":"347","severity":1,"message":"348","line":82,"column":31,"nodeType":"349","messageId":"350","endLine":82,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":86,"column":55,"nodeType":"349","messageId":"350","endLine":86,"endColumn":57},{"ruleId":"340","severity":1,"message":"346","line":45,"column":13,"nodeType":"342","messageId":"343","endLine":45,"endColumn":17},{"ruleId":"393","severity":1,"message":"394","line":114,"column":17,"nodeType":"395","messageId":"396","endLine":114,"endColumn":37},{"ruleId":"397","severity":1,"message":"398","line":131,"column":17,"nodeType":"342","messageId":"399","endLine":131,"endColumn":24},{"ruleId":"393","severity":1,"message":"394","line":217,"column":17,"nodeType":"395","messageId":"396","endLine":217,"endColumn":37},{"ruleId":"340","severity":1,"message":"359","line":217,"column":17,"nodeType":"342","messageId":"343","endLine":217,"endColumn":30},{"ruleId":"340","severity":1,"message":"367","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":9},{"ruleId":"340","severity":1,"message":"400","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":17},{"ruleId":"340","severity":1,"message":"401","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":19},{"ruleId":"336","severity":1,"message":"337","line":9,"column":5,"nodeType":"338","messageId":"339","endLine":11,"endColumn":6},{"ruleId":"347","severity":1,"message":"365","line":15,"column":22,"nodeType":"349","messageId":"350","endLine":15,"endColumn":24},{"ruleId":"347","severity":1,"message":"348","line":42,"column":39,"nodeType":"349","messageId":"350","endLine":42,"endColumn":41},{"ruleId":"340","severity":1,"message":"390","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":18},{"ruleId":"340","severity":1,"message":"391","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":13},{"ruleId":"340","severity":1,"message":"354","line":7,"column":8,"nodeType":"342","messageId":"343","endLine":7,"endColumn":14},{"ruleId":"347","severity":1,"message":"365","line":56,"column":34,"nodeType":"349","messageId":"350","endLine":56,"endColumn":36},{"ruleId":"340","severity":1,"message":"392","line":74,"column":13,"nodeType":"342","messageId":"343","endLine":74,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":76,"column":33,"nodeType":"349","messageId":"350","endLine":76,"endColumn":35},{"ruleId":"347","severity":1,"message":"348","line":80,"column":38,"nodeType":"349","messageId":"350","endLine":80,"endColumn":40},{"ruleId":"347","severity":1,"message":"348","line":84,"column":38,"nodeType":"349","messageId":"350","endLine":84,"endColumn":40},{"ruleId":"347","severity":1,"message":"348","line":84,"column":68,"nodeType":"349","messageId":"350","endLine":84,"endColumn":70},{"ruleId":"340","severity":1,"message":"390","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":18},{"ruleId":"340","severity":1,"message":"391","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":13},{"ruleId":"340","severity":1,"message":"354","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":14},{"ruleId":"340","severity":1,"message":"402","line":40,"column":13,"nodeType":"342","messageId":"343","endLine":40,"endColumn":18},{"ruleId":"340","severity":1,"message":"403","line":41,"column":13,"nodeType":"342","messageId":"343","endLine":41,"endColumn":18},{"ruleId":"340","severity":1,"message":"404","line":42,"column":13,"nodeType":"342","messageId":"343","endLine":42,"endColumn":18},{"ruleId":"340","severity":1,"message":"358","line":38,"column":13,"nodeType":"342","messageId":"343","endLine":38,"endColumn":19},{"ruleId":"340","severity":1,"message":"359","line":79,"column":45,"nodeType":"342","messageId":"343","endLine":79,"endColumn":58},{"ruleId":"360","severity":1,"message":"361","line":115,"column":46,"nodeType":"362","messageId":"363","endLine":115,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":175,"column":42,"nodeType":"349","messageId":"350","endLine":175,"endColumn":44},{"ruleId":"340","severity":1,"message":"358","line":30,"column":13,"nodeType":"342","messageId":"343","endLine":30,"endColumn":19},{"ruleId":"340","severity":1,"message":"405","line":63,"column":13,"nodeType":"342","messageId":"343","endLine":63,"endColumn":21},{"ruleId":"340","severity":1,"message":"358","line":65,"column":13,"nodeType":"342","messageId":"343","endLine":65,"endColumn":19},{"ruleId":"340","severity":1,"message":"346","line":68,"column":13,"nodeType":"342","messageId":"343","endLine":68,"endColumn":17},{"ruleId":"340","severity":1,"message":"406","line":88,"column":21,"nodeType":"342","messageId":"343","endLine":88,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":115,"column":20,"nodeType":"349","messageId":"350","endLine":115,"endColumn":22},{"ruleId":"340","severity":1,"message":"358","line":32,"column":13,"nodeType":"342","messageId":"343","endLine":32,"endColumn":19},{"ruleId":"340","severity":1,"message":"407","line":65,"column":13,"nodeType":"342","messageId":"343","endLine":65,"endColumn":21},{"ruleId":"340","severity":1,"message":"358","line":67,"column":13,"nodeType":"342","messageId":"343","endLine":67,"endColumn":19},{"ruleId":"340","severity":1,"message":"346","line":70,"column":13,"nodeType":"342","messageId":"343","endLine":70,"endColumn":17},{"ruleId":"347","severity":1,"message":"365","line":74,"column":33,"nodeType":"349","messageId":"350","endLine":74,"endColumn":35},{"ruleId":"340","severity":1,"message":"406","line":103,"column":21,"nodeType":"342","messageId":"343","endLine":103,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":130,"column":20,"nodeType":"349","messageId":"350","endLine":130,"endColumn":22},"no-native-reassign",["408"],"no-negated-in-lhs",["409"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'setUserAuthenticationStatus' is defined but never used.","'getUserAuthenticationStatus' is defined but never used.","'self' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'CourseFilter' is defined but never used.","'CourseTableWithPagination' is defined but never used.","'CourseTableWithoutPagination' is defined but never used.","'userid' is assigned a value but never used.","'updatesuccess' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'StudentRow' is defined but never used.","Expected '!==' and instead saw '!='.","'local_courses' is assigned a value but never used.","'$' is defined but never used.","'CourseRow' is defined but never used.","'todayDate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'axios' is defined but never used.","'useEffect' is defined but never used.","'getUser' is defined but never used.","'value' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"410","text":"411"},"'assignedCourses' is defined but never used.","'profile' is defined but never used.","'Container' is defined but never used.","'EnrolledCourseRow' is defined but never used.","'Alert' is defined but never used.","'Badge' is defined but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'courseEndDate' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'payload' is already defined.","redeclared","'CardGroup' is defined but never used.","'CardColumns' is defined but never used.","'today' is assigned a value but never used.","'sdate' is assigned a value but never used.","'edate' is assigned a value but never used.","'moduleid' is assigned a value but never used.","'addsuccess' is assigned a value but never used.","'courseid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1910,1937],"\r\n                        ."]