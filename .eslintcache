[{"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js":"1","E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js":"2","E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js":"3","E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js":"4","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js":"5","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js":"6","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js":"7","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js":"8","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleTable.js":"9","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsPage.js":"10","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js":"11","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js":"12","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js":"13","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js":"14","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js":"15","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js":"16","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js":"17","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPagination.js":"18","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js":"19","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js":"20","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleRow.js":"21","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js":"22","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsFilter.js":"23","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsTable.js":"24","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentRow.js":"25","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js":"26","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js":"27","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js":"28","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js":"29","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js":"30","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js":"31","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js":"32","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js":"33","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js":"34","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPaginationWithCard.js":"35","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseCard.js":"36","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseCard.js":"37"},{"size":520,"mtime":1612282672954,"results":"38","hashOfConfig":"39"},{"size":2178,"mtime":1615111046925,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":775,"mtime":1612622536386,"results":"42","hashOfConfig":"39"},{"size":698,"mtime":1612620672004,"results":"43","hashOfConfig":"39"},{"size":8978,"mtime":1615098081776,"results":"44","hashOfConfig":"39"},{"size":320,"mtime":1612284868747,"results":"45","hashOfConfig":"39"},{"size":1814,"mtime":1615292150508,"results":"46","hashOfConfig":"39"},{"size":2868,"mtime":1615103230653,"results":"47","hashOfConfig":"39"},{"size":4445,"mtime":1615120879716,"results":"48","hashOfConfig":"39"},{"size":1677,"mtime":1615103201810,"results":"49","hashOfConfig":"39"},{"size":2271,"mtime":1615291070006,"results":"50","hashOfConfig":"39"},{"size":1957,"mtime":1615305267809,"results":"51","hashOfConfig":"39"},{"size":14115,"mtime":1615058842796,"results":"52","hashOfConfig":"39"},{"size":746,"mtime":1612621617502,"results":"53","hashOfConfig":"39"},{"size":1745,"mtime":1614722232428,"results":"54","hashOfConfig":"39"},{"size":998,"mtime":1612610963735,"results":"55","hashOfConfig":"39"},{"size":2649,"mtime":1615045882607,"results":"56","hashOfConfig":"39"},{"size":12096,"mtime":1615292170433,"results":"57","hashOfConfig":"39"},{"size":10488,"mtime":1615005902482,"results":"58","hashOfConfig":"39"},{"size":966,"mtime":1615103255981,"results":"59","hashOfConfig":"39"},{"size":4795,"mtime":1612638179193,"results":"60","hashOfConfig":"39"},{"size":2521,"mtime":1615120068128,"results":"61","hashOfConfig":"39"},{"size":1764,"mtime":1615116473955,"results":"62","hashOfConfig":"39"},{"size":612,"mtime":1615116519058,"results":"63","hashOfConfig":"39"},{"size":3932,"mtime":1615103067585,"results":"64","hashOfConfig":"39"},{"size":2617,"mtime":1615103126109,"results":"65","hashOfConfig":"39"},{"size":4385,"mtime":1612630245912,"results":"66","hashOfConfig":"39"},{"size":2110,"mtime":1615310542409,"results":"67","hashOfConfig":"39"},{"size":831,"mtime":1612622834226,"results":"68","hashOfConfig":"39"},{"size":3936,"mtime":1615291549843,"results":"69","hashOfConfig":"39"},{"size":2189,"mtime":1615104436243,"results":"70","hashOfConfig":"39"},{"size":1485,"mtime":1615050437904,"results":"71","hashOfConfig":"39"},{"size":10145,"mtime":1615302180176,"results":"72","hashOfConfig":"39"},{"size":2245,"mtime":1615296140558,"results":"73","hashOfConfig":"39"},{"size":3985,"mtime":1615304847763,"results":"74","hashOfConfig":"39"},{"size":2075,"mtime":1615310142349,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1350ey3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\bits\\code samples\\assignments\\lms-app\\src\\index.js",[],["173","174"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\AppMain.js",["175"],"import React from 'react';\r\n\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport DashboardRoute from './DashboardLayout';\r\n\r\nimport Registration from \"./components/Registration\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Contact from './components/common/Contact.js';\r\n//import { getUserAuthenticationStatus } from \"./components/Common.js\";\r\nimport DashBoardF from './components/dashboards/faculty/DashBoardF.js';\r\nimport DashBoardS from './components/dashboards/students/DashBoardS.js';\r\nimport FilterCourseTable from './components/coursepage/FilterCourseTable.js';\r\nimport HomeLayoutRoute from './HomeLayout.js';\r\nimport RegistrationLayoutRoute from './RegistrationLayout.js';\r\nimport HomePage from './components/HomePage.js';\r\nimport ModuleTable from './components/modules/moduleTable.js';\r\nimport StudentsPage from './components/students/StudentsPage.js';\r\nclass AppMain extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        // <LoginLayoutRoute path=\"/login\" component={Login} />\r\n        return (\r\n       \r\n            <BrowserRouter>\r\n                <switch>\r\n                  <Route exact path=\"/\">\r\n                        <Redirect to=\"/login\" />\r\n                    </Route>\r\n                    <HomeLayoutRoute path=\"/login\" component={HomePage} />\r\n                    <RegistrationLayoutRoute path=\"/registration\" component={Registration} />\r\n                    <DashboardRoute path=\"/dashboardF\" component={DashBoardF} />\r\n                    <DashboardRoute path=\"/dashboardS\" component={DashBoardS} />\r\n                    <DashboardRoute path=\"/course\" component={FilterCourseTable} />\r\n                    <HomeLayoutRoute path=\"/logout\" component={HomePage} />\r\n                    <DashboardRoute path=\"/aboutus\" component={Contact} />\r\n                    <DashboardRoute path=\"/modules\" component={ModuleTable} />\r\n                    <DashboardRoute path=\"/students\" component={StudentsPage} />\r\n                    \r\n\r\n\r\n                </switch>\r\n            </BrowserRouter>    \r\n                );\r\n                }\r\n\r\n                }\r\nexport default AppMain;","E:\\bits\\code samples\\assignments\\lms-app\\src\\reportWebVitals.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\HomeLayout.js",["176"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MyCarousel from './components/common/Carousel.js';\r\nimport './HomeLayout.css';\r\n\r\nconst HomeLayout = ({ children }) => (\r\n    <div className=\"container\">\r\n        <h1 className='App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        <div className='carousel'>\r\n            <MyCarousel />\r\n        </div>\r\n\r\n            {children}\r\n        \r\n    </div>\r\n);\r\n\r\nconst HomeLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <HomeLayout>\r\n                <Component {...matchProps} />\r\n            </HomeLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default HomeLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\RegistrationLayout.js",["177"],"import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './RegistrationLayout.css';\r\nconst RegistrationLayout = ({ children }) => (\r\n    <div className=\"Reg-container\">\r\n        <h1 className='Reg-App-header title'>&nbsp;&nbsp; &nbsp;&nbsp; Learning Management System </h1>\r\n\r\n        \r\n\r\n            {children}\r\n      \r\n    </div>\r\n);\r\n\r\nconst RegistrationLayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <RegistrationLayout>\r\n                <Component {...matchProps} />\r\n            </RegistrationLayout>\r\n        )} />\r\n    )\r\n};\r\n\r\nexport default RegistrationLayoutRoute; ","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\HomePage.js",["178","179","180","181","182","183","184","185"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setUserSession } from './Common';\r\n\r\nimport { FormErrors } from './FormErrors';\r\nimport axios from 'axios';\r\nimport { setUserAuthenticationStatus } from './Common';\r\nimport ModalComponent from './common/ModalComponent.js';\r\nimport { getUserAuthenticationStatus } from \"./Common.js\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport './HomePage.css';\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            email: '',\r\n            password: '',\r\n            UserType: 'student',\r\n            formErrors: { credentials: '', email: '', password: '' },\r\n            credentialsValid: true,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        }\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n   \r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            UserType: e.target.value\r\n        })\r\n    }\r\n\r\n    \r\n    errorClass(error) {\r\n        return (error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.props.history.push('/registration');\r\n        e.preventDefault();\r\n    }\r\n    handleSubmit = (e) => {\r\n\r\n        //clean api\r\n        let self = this;\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        fieldValidationErrors.credentials = '';\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            credentialsValid: true\r\n        },() => {\r\n                console.log(this.state.credentialsValid);\r\n                this.validateField();\r\n               \r\n                \r\n            });\r\n           \r\n        if (this.state.formValid == true)\r\n        {\r\n            var apiBaseUrl = \"http://localhost:8000/api/authentication/\";\r\n            let loginstatus = false;\r\n            var payload = {\r\n                \"email\": this.state.email,\r\n                \"password\": this.state.password,\r\n                \"role\": this.state.UserType\r\n            }\r\n\r\n            var pwd = this.state.password;\r\n            console.log(\"login submit\");\r\n            console.log(payload);\r\n            axios.post(apiBaseUrl + 'login/',\r\n                payload\r\n            )\r\n                .then(function (response) {\r\n                    if (response.status === 200) {\r\n                        console.log(\"Login successfull\");\r\n\r\n                        console.log(\"pwd:\" + pwd);\r\n                        console.log(response);\r\n                        console.log(response.data[0]);\r\n                        setUserSession(response.data[0].id, response.data[0].name, pwd, response.data[0].dob, payload.role,\r\n                            response.data[0].city, response.data[0].email, response.data[0].phone);\r\n                        console.log(\"status: \" + response.status);\r\n                        loginstatus = true;\r\n\r\n\r\n                    }\r\n                    else if (response.status == 204)\r\n                    {\r\n                       \r\n                        loginstatus = false;\r\n                 \r\n                    }\r\n                    else {\r\n                        console.log(response.status);\r\n\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    console.log(\"loginstatus:\" + loginstatus);\r\n\r\n                    if (loginstatus == false) {\r\n                        console.log('inside login failue');\r\n                        let fieldValidationErrors = this.state.formErrors;\r\n                        fieldValidationErrors.credentials = ' mismatch';\r\n                        this.setState({\r\n                            credentialsValid: false,\r\n                            formErrors: fieldValidationErrors\r\n                        }, this.validateForm);\r\n                        console.log(this.state.formErrors);\r\n\r\n                    }\r\n                    else {\r\n                        console.log('inside login success');\r\n                        this.showModel();\r\n           \r\n                    }\r\n\r\n\r\n\r\n                });\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n            \r\n        }\r\n\r\n    showModel = () => {\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Login',\r\n            modalbody: 'Login Successful !!!',\r\n\r\n        })\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n       \r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n       \r\n        if (this.state.UserType == 'student')\r\n            this.props.history.push('/dashboardS');\r\n        else\r\n            this.props.history.push('/dashboardF');\r\n    };\r\n    validateField() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        //let credentialsValid = this.state.credentialsValid;\r\n\r\n        emailValid = this.state.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\r\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n        passwordValid = this.state.password.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\r\n        //fieldValidationErrors.credentials = credentialsValid ? '' : 'mismatch';\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            //credentialsValid: credentialsValid,\r\n            passwordValid: passwordValid\r\n        }, this.validateForm);\r\n\r\n    }\r\n    validateForm() {\r\n        this.setState({ formValid: this.state.credentialsValid && this.state.emailValid && this.state.passwordValid }, () => { console.log(this.state.formValid) });\r\n    }\r\n    render() {\r\n        return (\r\n                            \r\n                <div className='App-body'>\r\n            <div className=\"loginContainer\">\r\n                <div className=\"login-menu\">\r\n                    <form className=\"demoForm\" onSubmit={this.handleSubmit}>\r\n                        <div >\r\n\r\n                           \r\n                            <input type=\"radio\"  value=\"faculty\" checked={this.state.UserType === \"faculty\"}\r\n                                onChange={this.onValueChange} />\r\n                            <label htmlFor=\"Faculty\">Faculty</label>\r\n\r\n                            <input type=\"radio\"   value=\"student\"\r\n                                checked={this.state.UserType === \"student\"}\r\n                                onChange={this.onValueChange} />\r\n                            <label htmlFor=\"Student\">Student</label>\r\n                         </div>\r\n\r\n\r\n                        <div >\r\n                            <input type=\"email\" required name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleUserInput} />\r\n                        </div>\r\n\r\n                        <div >\r\n                            <input type=\"password\" required name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleUserInput} />\r\n                        </div>\r\n\r\n                        <Button onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\">Login</Button>\r\n                        \r\n                       \r\n                        \r\n                        <div >\r\n                            <label>   New User?  <a href='#' onClick={this.handleClick}>Register Now </a> </label>\r\n                           \r\n                           \r\n                        </div>\r\n                            {!this.state.formValid ?\r\n                                <div className='error-message' >\r\n                                    <FormErrors formErrors={this.state.formErrors} />\r\n                                </div> :\r\n                                <ModalComponent\r\n                                    show={this.state.modalshow}\r\n                                    title={this.state.modaltitle}\r\n                                    body={this.state.modalbody}\r\n                                    onClick={this.handleConfirmModalClose}\r\n                                    onHide={this.handleConfirmModalClose} />\r\n                            }\r\n\r\n                    </form>\r\n                </div>\r\n\r\n               \r\n                    </div>\r\n</div>\r\n          \r\n        )\r\n    }\r\n\r\n}\r\nexport default withRouter(HomePage);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Contact.js",["186","187"],"import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\n\nclass Contact extends React.Component {\n\trender() {\n  \treturn (\n    \t<div class=\"container\">\n        <h2>Contact us</h2>\n        <p>Write to us at \n        our <a href=\"#\">Email</a>.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\FilterCourseTable.js",["188","189","190"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseSearch from './CourseSearch.js';\r\nimport CourseFilter from './CourseFilter.js';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\nimport CourseTableWithoutPagination from './CourseTableWithoutPagination.js';\r\nimport CourseTableWithoutPaginationWithCard from './CourseTableWithoutPaginationWithCard.js';\r\nclass FilterCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { rows:[], startdate: '', enddate: ''}\r\n        this.setStartDateRangeFilter = this.setStartDateRangeFilter.bind(this);\r\n        this.setEndDateRangeFilter = this.setEndDateRangeFilter.bind(this);\r\n        this.setResultRows = this.setResultRows.bind(this);\r\n    }\r\n  \r\n    setResultRows(r) {\r\n        this.setState({ rows: r }, () => {\r\n            console.log(\"setResultRows =\" + this.state.rows.length);\r\n     //       alert(\"setResultRows: \" + this.state.rows.length);\r\n\r\n        });\r\n    }\r\n    setStartDateRangeFilter(sdate) {\r\n        this.setState({ startdate: sdate });\r\n        //alert(\"startdate: \" + sdate);\r\n    }\r\n    setEndDateRangeFilter( edate) {\r\n        this.setState({ enddate: edate });\r\n        //alert(\"enddate: \" + edate);\r\n    }\r\n    \r\n    render() {\r\n       \r\n            return (\r\n                <div>\r\n\r\n                    <CourseSearch setCourseStartDateFilter={this.setStartDateRangeFilter}\r\n                        setCourseEndDateFilter={this.setEndDateRangeFilter} setResultRows={this.setResultRows} />\r\n                    <CourseTableWithoutPaginationWithCard rows={this.state.rows} />;\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\nexport default withRouter(FilterCourseTable);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleTable.js",["191","192"],"import React from 'react';\r\nimport { getUser } from './../Common.js';\r\nimport axios from \"axios\";\r\nimport ModuleRow from './moduleRow.js';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n//import './AssignedCourseTable.css';\r\nclass ModuleTable extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            modules:[]\r\n        }\r\n\r\n    }\r\n    getData() {\r\n       \r\n        const profile = getUser();\r\n       \r\n        \r\n        axios.get('/api/core/modules/',\r\n            {\r\n               \r\n\r\n                params: {\r\n                    courseid: this.props.courseid,\r\n\r\n                },\r\n            }\r\n        )\r\n            .then(res1 => {\r\n              \r\n                const modules = res1.data.results\r\n                this.setState({ modules: modules }, () => {\r\n                    console.log(this.state.modules)\r\n                    \r\n                    });\r\n               \r\n\r\n\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        const rows = [];\r\n        this.state.modules.forEach((module) => {\r\n            rows.push(<ModuleRow module={module} />);\r\n\r\n        });\r\n        var recCount = rows.length;\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Assigned Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Module</th>\r\n                                                <th scope=\"col\">Topics</th>\r\n                                                <th scope=\"col\">Add Topic</th>\r\n                                                \r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n//export default withRouter(connect(mapStateToProps, matchDispatchToProps)(ModuleTable));\r\nexport default (withRouter(ModuleTable));","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsPage.js",["193","194"],"import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport StudentsFilter from './StudentsFilter.js';\r\nimport StudentsTable from './StudentsTable.js';\r\nimport StudentRow from './StudentRow.js';\r\nimport axios from \"axios\";\r\nimport { getUser } from './../Common.js';\r\nclass StudentsPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.students = [];\r\n        this.state = {\r\n            rows:[],\r\n       \r\n            sessionid: null,\r\n            sessions: new Map(),\r\n\t\t}\r\n        this.setCourseSession = this.setCourseSession.bind(this);\r\n        this.fetchStudents = this.fetchStudents.bind(this);\r\n        this.getData();\r\n\r\n    }\r\n    getData () {\r\n\r\n        const profile = getUser();\r\n        var password = profile.password;\r\n        //alert(\"componentDidMount\");\r\n        var local_sessions = new Map();\r\n        axios.get('/api/core/mysessions/',\r\n            {\r\n\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                //alert(\"inside response\");\r\n                console.log(res1.data.results);\r\n                var mysessions_data = res1.data.results;\r\n                console.log(mysessions_data);\r\n                mysessions_data.forEach(session => {\r\n                    local_sessions.set( \"Course Name: \" + session.coursename +\r\n                        \"; Start Date: \" + session.start_date + \"; End Date: \" + session.end_date, session.id);\r\n\r\n                })\r\n                console.log(local_sessions);\r\n                this.setState({ sessions: local_sessions }, () => {\r\n                    console.log(this.state.sessions)\r\n                });\r\n\r\n            })\r\n\r\n            .catch(err =>\r\n               {alert(err);\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n    setCourseSession(sid) {\r\n        this.setState({ sessionid: sid }, () => { console.log(this.state.sessionid) });\r\n    }\r\n    async fetchStudents(){\r\n    \r\n        var students = []\r\n        if (this.state.sessionid == null)\r\n            this.students = [];\r\n        const profile = getUser();\r\n        var password = profile.password;\r\n    \r\n       \r\n        await axios.get('/api/core/enrolledsessions/',\r\n            {\r\n                params: {\r\n                    sessionid: this.state.sessionid,\r\n                },\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                \r\n                console.log(res1.data.results);\r\n                var enrolledsession_data = res1.data.results;\r\n                enrolledsession_data.forEach(session =>\r\n                {\r\n                    var studentid = session.studentid;\r\n                    axios.get('/api/core/students/' + studentid +'/',\r\n                        {\r\n                            \r\n                            auth: {\r\n                                username: profile.email,\r\n                                password: password\r\n                            }\r\n                        }\r\n                    )\r\n                        .then(res2 => {\r\n                            const student = res2.data;\r\n                            //console.log(student);\r\n                            students.push(student);\r\n\r\n                        })\r\n                })\r\n              \r\n\r\n            }).\r\n            then( ()=>\r\n                {\r\n                console.log(students);\r\n                console.log(\"completed\");\r\n                \r\n                this.students = students;\r\n                return students;\r\n\t\t\t})\r\n\r\n            .catch(err => {\r\n                alert(err);\r\n                console.log(err);\r\n            });\r\n        \r\n\t}\r\n\r\n    render() {\r\n        var st = [];\r\n        if (this.state.sessionid!=null)\r\n             st=this.fetchStudents();\r\n        console.log(\"inside rendering\");\r\n        console.log(st);\r\n        var rows = [];\r\n       \r\n        return (\r\n           \r\n            <div>\r\n\r\n                <StudentsFilter sessions={this.state.sessions}\r\n                        setCourseSession={this.setCourseSession}  />\r\n                <StudentsTable rows={rows} />;\r\n            </div>\r\n       \r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(StudentsPage);\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\DashBoardF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\DashBoardS.js",["195","196"],"import React from 'react';\r\nimport ProfileS from './ProfileS.js';\r\nimport EnrolledCourseTable from './EnrolledCourseTable.js';\r\nimport { getUser } from './../../Common.js';\r\nimport axios from \"axios\";\r\nclass DashBoardS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            tot_credits: 0,\r\n            enrolled_courses: [],\r\n        }\r\n        this.getData = this.getData.bind(this);\r\n\r\n       \r\n    }\r\n     getData() {\r\n        var local_courses = [];\r\n        const profile = getUser();\r\n        var userid = profile.id\r\n        //console.log(\"userid:\" + userid);\r\n       // axios.get(\"/api/core/enrolledsessions/?enrolledby=\" + userid)\r\n         axios.get('/api/core/myenrolledsessions/',\r\n             {\r\n                 // Axios looks for the `auth` option, and, if it is set, formats a\r\n                 // basic auth header for you automatically.\r\n\r\n                 auth: {\r\n                     username: profile.email,\r\n                     password: profile.password\r\n                 }\r\n             }\r\n         )\r\n            .then(res1 => {\r\n                // just grab the first 5 links\r\n                const enrolled_course_sessions_data = res1.data.results\r\n                this.setState({ enrolled_courses: enrolled_course_sessions_data }, () => {\r\n                    console.log(this.state.enrolled_courses)\r\n                    var totcredits = 0;\r\n                    this.state.enrolled_courses.forEach((course) => {\r\n\r\n                        totcredits = totcredits + course.credit;\r\n                    });\r\n                    this.setState({ tot_credits: totcredits }, () => {\r\n                        console.log(this.state.tot_credits)\r\n                    });\r\n                });\r\n                \r\n                \r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    componentDidMount()\r\n    {\r\n          this.getData();\r\n       }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileS tot_credits={this.state.tot_credits} />\r\n                <EnrolledCourseTable enrolled_courses={this.state.enrolled_courses}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default  DashBoardS;","E:\\bits\\code samples\\assignments\\lms-app\\src\\DashboardLayout.js",["197","198","199"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Registration.js",["200","201","202"],"import React from 'react';\r\n\r\nimport { FormErrors } from './FormErrors';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { setUserSession } from './Common.js';\r\nimport DatePicker from \"react-datepicker\";\r\nimport axios from \"axios\";\r\nimport ModalComponent from './common/ModalComponent.js';\r\n\r\n//import { setUserAuthenticationStatus } from './Common.js';\r\nimport Container from 'react-bootstrap/Container'\r\n//import { getUserAuthenticationStatus } from \"./Common.js\";\r\nimport './Registration.css';\r\nclass Registration extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            dob:'',\r\n            email: '',\r\n            password: '',\r\n            address: '',\r\n            city: '',\r\n            pin: '',\r\n            phone: '',\r\n            role: 'student',\r\n            \r\n\r\n            formErrors: { email: '', password: '', phonevalid: '' },\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            phonevalid: false,\r\n            formValid: false,\r\n            regsuccess:false,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n\r\n        }\r\n        this.handleDOBChange = this.handleDOBChange.bind(this);\r\n        this.handleSignClick = this.handleSignClick.bind(this);\r\n        this.GetFormattedDate = this.handleSignClick.bind(this);\r\n    }\r\n    GetFormattedDate(date)\r\n    {\r\n        alert(date);\r\n        console.log(date);\r\n        var dd = String(date.getDate()).padStart(2, '0');\r\n        var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = date.getFullYear();\r\n\r\n        date = yyyy + '-' + mm + '-' + dd;\r\n        alert(date);\r\n        console.log(date);\r\n        return date;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            role: e.target.value\r\n        })\r\n    }\r\n    handleSignClick(e) {\r\n        this.props.history.push('/login');\r\n        //e.preventDefault();\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        console.log(\"validateField\");\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let phonevalid = this.state.phonevalid;\r\n        switch (fieldName) {\r\n            case 'email':\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,3})$/i);\r\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            case 'password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            case 'phone':\r\n                phonevalid = value.match(/^[0-9]{10}$/i);\r\n                fieldValidationErrors.phone = phonevalid ? '' : 'is not valid';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            passwordValid: passwordValid,\r\n            phonevalid: phonevalid\r\n        }, this.validateForm);\r\n        console.log(\"formValid\" + this.state.formValid)\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({ formValid: this.state.emailValid && this.state.passwordValid && this.state.phonevalid });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n    showModel = () => {\r\n        console.log(\"inside showmodel\");\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Registration',\r\n            modalbody: 'Registration Successful !!!',\r\n\r\n        }, () => { console.log(this.state.modalshow) })\r\n    }\r\n    handleSubmit = (e) => {\r\n        var apiBaseUrl = \"http://127.0.0.1:8000/api/authentication/\";\r\n        var self = this;\r\n        \r\n        var user = {\r\n            \"name\": this.state.name,\r\n            \"dob\": this.GetFormattedDate(this.state.dob),\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password,\r\n            \"phone\": this.state.phone,\r\n            \"address\": this.state.address,\r\n            \"city\": this.state.city,\r\n            \"role\": this.state.role.toLowerCase(),\r\n            \"pin\": this.state.pincode,\r\n        }\r\n        var addr = this.state.address + ' ' + this.state.city + ' ' + this.state.pin;\r\n        console.log(user);   \r\n        setUserSession(1, this.state.name, this.state.password, this.state.dob,\r\n            this.state.role, addr, this.state.email, this.state.phone);\r\n        var registionsuccess = false;\r\n        axios.post(apiBaseUrl + 'registration/', user)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status === 201) {\r\n                    //alert(\"Registration successfull.Login Again\");\r\n                    console.log(\"Registration successfull....\");\r\n                    registionsuccess = true;\r\n\r\n\r\n                }\r\n                else if (response.data.code === 204) {\r\n                    console.log(\"invalid data\");\r\n                    alert(\"invalid data\")\r\n                }\r\n                else {\r\n                    console.log(\"User  exists\");\r\n                    alert(\"User  exist\");\r\n                }\r\n\r\n            })\r\n            .then(() => {\r\n                console.log(registionsuccess);\r\n                if (registionsuccess) {\r\n                    console.log(\"inside\");\r\n                  //  this.setState({ regsuccess: true }, () => {\r\n                  //      console.log('befor model')\r\n                   // });\r\n                     //   this.showModel()\r\n                    alert(\"Registration Successful\");\r\n                    if (this.state.role === \"student\") {\r\n                                   this.props.history.push('/dashboardS');\r\n                                }\r\n                               else\r\n                                  {\r\n                                       this.props.history.push('/dashboardF');\r\n                                   }\r\n                      \r\n                   \r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"\")\r\n                console.log(error);\r\n            });\r\n        \r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n               \r\n       \r\n\r\n    }\r\n    handleDOBChange(dob) {\r\n        \r\n        this.setState({ dob: dob });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n         alert(\"modal close\");\r\n        if (this.state.UserType == 'student')\r\n            this.props.history.push('/dashboardS');\r\n        else\r\n            this.props.history.push('/dashboardF');\r\n    };\r\n    render() {\r\n        return (\r\n               \r\n                 \r\n            <Container fluid>\r\n                <div className=\" decor_bg\" >\r\n                         <div className=\"row\">\r\n                             <div className=\"container-fluid col-md-6\">\r\n                                 <div className=\"panel panel-primary\">\r\n                                     <div className=\"panel-heading\"><h4>SIGN UP</h4></div>\r\n                                     <div className=\"panel-body\">\r\n                                         <form  onSubmit={this.handleSubmit}>\r\n                                        \r\n                                             <div className=\"form-group\">\r\n                                                 \r\n                                                 <input type=\"radio\" value=\"faculty\" checked={this.state.role === \"faculty\"}\r\n                                                     onChange={this.handleChange} />\r\n                                                 <label htmlFor=\"Faculty\">Faculty</label>\r\n\r\n                                                 <input type=\"radio\" value=\"student\" checked={this.state.role === \"student\"}\r\n                                                     onChange={this.handleChange} />\r\n                                                 <label htmlFor=\"Student\">Student</label>\r\n                                                \r\n                                        </div>\r\n                                        \r\n                                             <div className=\"form-group\">\r\n                                            \r\n                                            <input\r\n                                                     type=\"text\" className=\"form-control\" placeholder=\"Enter your name *\" name=\"name\" id=\"name\"\r\n                                                value={this.state.name} onChange={this.handleUserInput} required />\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <DatePicker required className=\"d-flex justify-content-center\" placeholderText=\"Enter Date of Birth *\" selected={this.state.dob} onChange={this.handleDOBChange} name=\"dob\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </div>\r\n                                             <div className=\"form-group\">\r\n                                           \r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter email *\" id='email' name=\"email\" value={this.state.email}\r\n                                                onChange={this.handleUserInput} required />\r\n                                            \r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"password\" className=\"form-control\" placeholder=\"Enter Password *\" name=\"password\" value={this.state.password}\r\n                                                onChange={this.handleUserInput} required\r\n                                                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\" />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Address\" name=\"address\" value={this.state.address}\r\n                                                     onChange={this.handleUserInput} />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter City *\" name=\"city\" value={this.state.city}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Pincode *\" name=\"pincode\" value={this.state.pincode}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                             </div>\r\n                                             <div className=\"form-group\">\r\n                                                 <input type=\"text\" className=\"form-control\" placeholder=\"Enter Phonenumber * \" name=\"phone\" value={this.state.phone}\r\n                                                     onChange={this.handleUserInput} required />\r\n                                            </div>\r\n                                            \r\n                                        <div className=\"form-group\">\r\n                                                \r\n                                                    <button type='submit' value='Submit' class=\"btn btn-class btn-primary btn-lg col-md-4\" disabled={!this.state.formValid}> Submit </button>\r\n                                            <button type='cancel' value='Cancel' class=\"btn  btn-class-sec btn-secondary btn-lg col-md-offset-2 col-md-4\"> Cancel </button>\r\n                                                   \r\n                                        </div>\r\n                                    \r\n                                          \r\n                                        {!this.state.regsuccess ?\r\n                                            <div className='error-message' >\r\n                                                <FormErrors formErrors={this.state.formErrors} />\r\n                                            </div>\r\n                                            :\r\n                                            <ModalComponent\r\n                                                show={this.state.modalshow}\r\n                                                title={this.state.modaltitle}\r\n                                                body={this.state.modalbody}\r\n                                                onClick={this.handleConfirmModalClose}\r\n                                                onHide={this.handleConfirmModalClose} />\r\n                                            }\r\n                       \r\n                                    </form>\r\n\r\n                                    <label className='label-style'>Regiestered User?  <a href='#' onClick={this.handleSignClick}>Sign in </a> </label>\r\n\r\n\r\n                            </div></div></div></div></div>\r\n            </Container>\r\n\r\n            );\r\n        \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default (withRouter(Registration));\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\Carousel.js",["203"],"\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport React, { Component } from 'react';\n\n\nfunction MyCarousel() {\n    return (\n           \n            <Carousel showThumbs={false} infiniteLoop={true} showIndicators={false} showArrows={true} autoPlay={true}>\n                <div>\n                    <img src='./img/1.jpg' alt=\"img1\" />\n\n                </div>\n                <div>\n                    <img src='./img/2.jpg' alt=\"img2\" />\n                </div>\n                <div>\n                    <img src='./img/3.jpg' alt=\"img3\" />\n                </div>\n              \n\n            </Carousel>\n        \n    );\n\n}\n\nexport default MyCarousel;\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\Common.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ModalComponent.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPagination.js",["204","205","206"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nclass CourseTableWithoutPagination extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        var recCount = this.props.rows.length;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                \r\n                                        </div>\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr id='courserow' className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Session Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">End Date</th>\r\n                                                <th scope=\"col\">Duration (days)</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Remaining Seats</th>\r\n                                                <th scope=\"col\">Enroll/Cancel</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.props.rows}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithoutPagination;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseSearch.js",["207","208","209","210","211","212"],"import axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { getUser } from './../Common.js';\r\nimport CourseRow from './CourseRow.js';\r\n//import categories from './coursecategories.json';\r\nimport courses from './courses.json';\r\nimport './CourseSearch.css';\r\nimport CourseCard from './CourseCard.js';\r\nclass CourseSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.coursename = '';\r\n        this.coursecategory = '';\r\n        this.coursecredits = '';\r\n        this.state = {\r\n            startdate: '', enddate: '',\r\n            categories: [],\r\n            courses: [],\r\n            enrolledcourses: [],\r\n            enrolledcourses_sessionids: [],\r\n                 \r\n        };\r\n        \r\n        this.credits = [1,2,3,4,5,6,7,8,9,10];\r\n        this.handleCourseNameChange = this.handleCourseNameChange.bind(this);\r\n        this.handleCourseCategoryChange = this.handleCourseCategoryChange.bind(this);\r\n        this.handleCourseCreditsChange = this.handleCourseCreditsChange.bind(this);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n   \r\n    handleOnSubmit(event)\r\n    {\r\n        this.fetchData();\r\n        \r\n        var rows = [];\r\n      \r\n        \r\n\r\n        var courseNameFilter = this.coursename;\r\n        var courseCategoryFilter = this.coursecategory;\r\n        var courseCreditsFilter = this.coursecredits;\r\n        var courseStartDateFilter = this.state.startdate == '' ? '' : this.state.startdate;\r\n        var courseEndDateFilter = this.state.enddate == '' ? '' : this.state.enddate;\r\n\r\n        this.state.courses.forEach((course) =>\r\n        {\r\n           \r\n            //alert(course.get('sessionId'));\r\n            let coursestartdate = new Date(course.start_date);\r\n            let courseenddate = new Date(course.end_date);\r\n            const todayDate = new Date();\r\n           \r\n            if (course.coursename.toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.category !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.credit!= courseCreditsFilter)\r\n                return;\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                \r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}            \r\n                        course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n              \r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                        course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n             \r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseCard\r\n                        enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                         course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseCard\r\n                    enrolled={this.state.enrolledcourses_sessionids.includes(course.id)}  \r\n                    course={course} />);\r\n            }\r\n\r\n\r\n        }\r\n        );\r\n       \r\n        this.props.setResultRows(rows);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n    }\r\n    handleStartDateChange(sdate)\r\n    {\r\n        this.setState({ startdate: sdate });\r\n        \r\n    }\r\n\r\n    handleEndDateChange(sdate) \r\n    {\r\n        this.setState({ enddate: sdate });        \r\n       \r\n    }\r\n     handleCourseNameChange (event) \r\n    {\r\n         this.coursename = event.target.value;\r\n         event.preventDefault();\r\n    }\r\n    handleCourseCategoryChange(event)\r\n    {\r\n        this.coursecategory = event.target.value;        \r\n        event.preventDefault();\r\n\r\n    }\r\n    handleCourseCreditsChange(event)\r\n    {\r\n        this.coursecredits = event.target.value;\r\n        event.preventDefault();\r\n    }\r\n    \r\n \r\n    fetchData() {\r\n        const profile = getUser();\r\n\r\n        var password = profile.password;\r\n\r\n\r\n        axios.get(\"/api/core/category/\")\r\n            .then((res) => {\r\n\r\n                this.setState({ categories: res.data })\r\n\r\n            }\r\n            )\r\n            .catch((err) => console.log(err));\r\n        //*************************************************************\r\n        axios.get('/api/core/myenrolledsessions/',\r\n            {\r\n\r\n                auth: {\r\n                    username: profile.email,\r\n                    password: password\r\n                }\r\n            }\r\n        )\r\n            .then(res1 => {\r\n                var enrolledids = [];\r\n                var course_enrolled_sessions_data = res1.data.results;\r\n                course_enrolled_sessions_data.forEach(enrolledsession => {\r\n                    enrolledids.push(enrolledsession.sessionid);\r\n                })\r\n                this.setState({ enrolledcourses_sessionids: enrolledids })\r\n                console.log(this.state.enrolledcourses_sessionids);\r\n            })\r\n            .then(() => {\r\n\r\n\r\n                //****************************************************************\r\n                axios.get(\"/api/core/sessions/\")\r\n                    .then(res1 => {\r\n\r\n                        const course_sessions_data = res1.data.results\r\n                        this.setState({ courses: course_sessions_data }, () => { console.log(courses) });\r\n\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n        this.fetchData();\r\n        \r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        const categorynames = [];\r\n        this.state.categories.map((category) => categorynames.push(category.name));\r\n        const today = new Date();\r\n     \r\n       \r\n        return (\r\n            <div id=\"content\">               \r\n                    <div className=\"row\">\r\n                    <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                            <div className=\"container-fluid panel-heading\"><h4>COURSES</h4></div>\r\n                            <div className=\"panel-body\">\r\n\r\n\r\n                                <Form>\r\n                                    <Form.Row >\r\n\r\n                                        <Col lg=\"5\"  className=\"d-flex justify-content-left\">\r\n                                            <Form.Label column=\"d-flex justify-content-center\" column=\"lg\"   htmlFor=\"coursename\">Course Name:</Form.Label>\r\n\r\n                                            <Form.Control className=\"d-flex justify-content-center\"  type=\"text\" id=\"coursename\" name=\"coursename\"\r\n                                                    placeholder=\"React JS\" onBlur={this.handleCourseNameChange} />\r\n                                         </Col>    \r\n                                        \r\n                                      \r\n                                        <Col lg=\"5\" className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" htmlFor=\"coursecategory\">Course Category: </Form.Label>\r\n                                            <Form.Control className=\"d-flex justify-content-center\" id=\"coursecategory\" name=\"coursecategory\" as=\"select\" label=\"Course Category:\" onChange={this.handleCourseCategoryChange}>\r\n                                                <option></option>\r\n                                                {categorynames.map((category) =>\r\n                                                    <option>{category}</option>\r\n                                                )}\r\n                                                  \r\n                                                </Form.Control>   \r\n                                               \r\n                                           </Col>\r\n                                           \r\n                                        <Col lg=\"2\" className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursecredits\">Course Credits: </Form.Label>\r\n                                     \r\n                                   \r\n                                                <Form.Control className=\"d-flex justify-content-center\" id=\"coursecredits\" name=\"coursecredits\" onChange={this.handleCourseCreditsChange} as=\"select\">\r\n                                                <option></option>\r\n                                                {this.credits.map((credit) =>\r\n                                                    <option>{credit}</option>\r\n                                                )}\r\n                                                </Form.Control>\r\n                                                \r\n                                            </Col>\r\n                                       \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\"  htmlFor=\"coursestartdate\">Course StartDate:&nbsp;&nbsp;&nbsp;&nbsp;</Form.Label>\r\n                                            <DatePicker lg={2} column=\"lg\"  minDate={today} className=\"d-flex justify-content-center customDatePickerWidth\"  selected={this.state.startdate} onChange={this.handleStartDateChange} name=\"coursestartdate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col >\r\n                                        <Col  className=\"d-flex justify-content-left\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\"  htmlFor=\"courseenddate\">Course EndDate: &nbsp;&nbsp;&nbsp;&nbsp; </Form.Label>\r\n                                            <DatePicker lg={2} column=\"lg\"  minDate={today} className=\"d-flex justify-content-center customDatePickerWidth\"   selected={this.state.enddate} onChange={this.handleEndDateChange} name=\"courseenddate\" dateFormat=\"MM/dd/yyyy\" />\r\n                                        </Col>\r\n                                      \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Col>\r\n                                            <Button  onClick={this.handleOnSubmit} variant=\"primary\" className=\"btn-class col-md-6\" type=\"submit\">Search</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Button variant=\"secondary\" className=\"btn-class-sec  col-md-6\" type=\"cancel\">Cancel</Button>\r\n                                        </Col>\r\n\r\n                                        \r\n                                    </Form.Row>\r\n                                </Form>\r\n\r\n                                   \r\n\r\n                            </div> </div> </div> </div>  </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\nexport default CourseSearch;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithPagination.js",["213","214","215","216","217","218","219","220","221","222","223"],"import React from 'react';\r\nimport $ from 'jquery'; \r\nclass CourseTableWithPagination extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n           \r\n            currentPage: 1,\r\n            rowsPerPage: 10,\r\n            upperPageBound: 3,\r\n            lowerPageBound: 0,\r\n            isPrevBtnActive: 'disabled',\r\n            isNextBtnActive: '',\r\n            pageBound: 3\r\n        };\r\n       \r\n            //console.log(this.props.courses);\r\n       \r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.btnDecrementClick = this.btnDecrementClick.bind(this);\r\n        this.btnIncrementClick = this.btnIncrementClick.bind(this);\r\n        this.btnNextClick = this.btnNextClick.bind(this);\r\n        this.btnPrevClick = this.btnPrevClick.bind(this);\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.setPrevAndNextBtnClass = this.setPrevAndNextBtnClass.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.courses.length != this.props.courses.length) {\r\n            this.setState({\r\n\r\n\r\n                currentPage: 1,\r\n                rowsPerPage: 10,\r\n                upperPageBound: 3,\r\n                lowerPageBound: 0,\r\n                isPrevBtnActive: 'disabled',\r\n                isNextBtnActive: '',\r\n                pageBound: 3\r\n            });\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n        \r\n            //this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n        else {\r\n            $(\"ul li.active\").removeClass('active');\r\n            $('ul li#' + this.state.currentPage).addClass('active');\r\n           // this.setPrevAndNextBtnClass(this.state.currentPage)\r\n        }\r\n    }\r\n    handleClick(event) {\r\n        let listid = Number(event.target.id);\r\n        this.setState({\r\n            currentPage: listid\r\n        });\r\n        $(\"ul li.active\").removeClass('active');\r\n        $('ul li#' + listid).addClass('active');\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    setPrevAndNextBtnClass(listid) {\r\n       // console.log(\"listid: \" + listid);\r\n        let totalPage = Math.ceil(this.props.courses.length / this.state.rowsPerPage);\r\n        this.setState({ isNextBtnActive: 'disabled' });\r\n        this.setState({ isPrevBtnActive: 'disabled' });\r\n        //console.log('totalPage > 1 + ' + (totalPage > 1));\r\n        if (totalPage === listid && totalPage > 1) {\r\n            this.setState({ isPrevBtnActive: '' });\r\n          //  console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (listid === 1 && totalPage > 1) {\r\n\r\n            this.setState({ isNextBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n        }\r\n        else if (totalPage > 1) {\r\n            this.setState({ isNextBtnActive: '' });\r\n            this.setState({ isPrevBtnActive: '' });\r\n            //console.log('isPrevBtnActive: ' + this.state.isPrevBtnActive);\r\n            //console.log('isNextBtnActive: ' + this.state.isNextBtnActive);\r\n\r\n        }\r\n    }\r\n    btnIncrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        let listid = this.state.upperPageBound + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnDecrementClick() {\r\n        this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n        this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        let listid = this.state.upperPageBound - this.state.pageBound;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnPrevClick() {\r\n        if ((this.state.currentPage - 1) % this.state.pageBound === 0) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound - this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound - this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage - 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    btnNextClick() {\r\n        if ((this.state.currentPage + 1) > this.state.upperPageBound) {\r\n            this.setState({ upperPageBound: this.state.upperPageBound + this.state.pageBound });\r\n            this.setState({ lowerPageBound: this.state.lowerPageBound + this.state.pageBound });\r\n        }\r\n        let listid = this.state.currentPage + 1;\r\n        this.setState({ currentPage: listid });\r\n        this.setPrevAndNextBtnClass(listid);\r\n    }\r\n    render() {\r\n        if (this.props.courses == null)\r\n            return null;\r\n        var recCount =  this.props.courses.length;\r\n        var {  currentPage, rowsPerPage, upperPageBound, lowerPageBound, isPrevBtnActive, isNextBtnActive } = this.state;\r\n        // Logic for displaying current rowss\r\n        const indexOfLastRow = currentPage * rowsPerPage;\r\n        const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n        const currentRow = this.props.courses.slice(indexOfFirstRow, indexOfLastRow);\r\n\r\n        const renderRows = currentRow.map((rows) => {\r\n            return rows;\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(this.props.courses.length / rowsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            if (number === 1 && currentPage === 1) {\r\n                return (\r\n                    <li key={number} className='active' id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n            else if ((number < upperPageBound + 1) && number > lowerPageBound) {\r\n                return (\r\n                    <li key={number} id={number}><a href='#' id={number} onClick={this.handleClick}>{number}</a></li>\r\n                )\r\n            }\r\n        });\r\n        let pageIncrementBtn = null;\r\n        if (pageNumbers.length > upperPageBound) {\r\n            pageIncrementBtn = <li className=''><a href='#' onClick={this.btnIncrementClick}> &hellip; </a></li>\r\n        }\r\n        let pageDecrementBtn = null;\r\n        if (lowerPageBound >= 1) {\r\n            pageDecrementBtn = <li className=''><a href='#' onClick={this.btnDecrementClick}> &hellip; </a></li>\r\n        }\r\n        let renderPrevBtn = null;\r\n        if (isPrevBtnActive == 'disabled') {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><span id=\"btnPrev\"> Prev </span></li>\r\n        }\r\n        else {\r\n            renderPrevBtn = <li className={isPrevBtnActive}><a href='#' id=\"btnPrev\" onClick={this.btnPrevClick}> Prev </a></li>\r\n        }\r\n        let renderNextBtn = null;\r\n        if (isNextBtnActive == 'disabled') {\r\n            renderNextBtn = <li className={isNextBtnActive}><span id=\"btnNext\"> Next </span></li>\r\n        }\r\n        else {\r\n            renderNextBtn = <li className={isNextBtnActive}><a href='#' id=\"btnNext\" onClick={this.btnNextClick}> Next </a></li>\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                           \r\n                            {recCount == 0 ?\r\n                                 <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                 :\r\n                                <div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-5\"> <h2> {recCount} course(s) found </h2> </div>\r\n                                    <div className=\"col-lg-7 text-right\">\r\n                                    <ul id=\"page-numbers\" className=\"pagination\">\r\n                                            {renderPrevBtn}\r\n                                            {pageDecrementBtn}\r\n                                            {renderPageNumbers}\r\n                                            {pageIncrementBtn}\r\n                                            {renderNextBtn}\r\n                                        </ul>\r\n                                        </div>\r\n                                        </div>\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr id='courserow' className=\"bg-primary\">\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Session Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Start Date</th>\r\n                                                <th scope=\"col\">End Date</th>\r\n                                                <th scope=\"col\">Duration (days)</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Remaining Seats</th>\r\n                                                <th scope=\"col\">Enroll/Cancel</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {renderRows}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    \r\n\r\n                                </div>\r\n                            }\r\n                    </div> </div> </div>  </div>\r\n        );\r\n    }\r\n}\r\nexport default CourseTableWithPagination;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\modules\\moduleRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseFilter.js",["224","225","226","227","228","229"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport CourseRow from './CourseRow.js';\r\nimport courses from './courses.json';\r\nimport enrolledcourses from './../dashboards/students/EnrolledCourses.json';\r\nimport axios from 'axios';\r\nimport { useEffect } from 'react';\r\nimport CourseTableWithPagination from './CourseTableWithPagination.js';\r\nclass CourseFilter extends React.Component\r\n{\r\n    render() {\r\n        var rows = [];\r\n        var enrolledcourses_sessionids = [];\r\n        enrolledcourses.forEach((course) => {\r\n            enrolledcourses_sessionids.push(course.sessionId);\r\n\r\n        });\r\n\r\n        var courseNameFilter = this.props.courseNameFilter;\r\n        var courseCategoryFilter = this.props.courseCategoryFilter;\r\n        var courseCreditsFilter = this.props.courseCreditsFilter;\r\n        var courseStartDateFilter = this.props.courseStartDateFilter == '' ? '' : this.props.courseStartDateFilter;\r\n        var courseEndDateFilter = this.props.courseEndDateFilter == '' ? '' : this.props.courseEndDateFilter;\r\n\r\n        /* console.log(\"courseNameFilter: \" + courseNameFilter);\r\n         console.log(\"courseCategoryFilter: \" + courseCategoryFilter);\r\n         console.log(\"courseCreditsFilter: \" + courseCreditsFilter);\r\n         console.log(\"courseStartDateFilter: \" + courseStartDateFilter);\r\n         console.log(\"courseEndDateFilter: \" + courseEndDateFilter);\r\n         console.log(enrolledcourses_sessionids);*/\r\n        courses.forEach((course) => {\r\n            //console.log(course.sessionId +\"=\" + enrolledcourses_sessionids.includes(course.sessionId));\r\n            let coursestartdate = new Date(course.start_date);\r\n            let courseenddate = new Date(course.end_date);\r\n\r\n            // console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n            // console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n            if (course.name.toLowerCase().indexOf(courseNameFilter.toLowerCase()) === -1) //if name filter applied\r\n                return;\r\n            if (courseCategoryFilter !== '' && course.category !== courseCategoryFilter)\r\n                return;\r\n\r\n            if (courseCreditsFilter !== '' && course.credits != courseCreditsFilter)\r\n                return;\r\n\r\n            if (courseStartDateFilter !== '' && courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter && courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseStartDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (coursestartdate >= courseStartDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else if (courseEndDateFilter !== '') {\r\n                //console.log(\"courseStartDateFilter - table=\" + courseStartDateFilter);\r\n                //console.log(\"courseEndDateFilter - table=\" + courseEndDateFilter);\r\n                if (courseenddate <= courseEndDateFilter)\r\n                    rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                        id={course.sessionId} course={course} />);\r\n            }\r\n            else {\r\n                rows.push(<CourseRow disabled={enrolledcourses_sessionids.includes(course.sessionId)}\r\n                    id={course.sessionId} course={course} />);\r\n            }\r\n\r\n\r\n        });\r\n\r\n        var recCount = rows.length;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Search Results</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <h2> {recCount} course(s) found </h2>\r\n                            {recCount == 0 ?\r\n                                null :\r\n                                       <CourseTableWithPagination courses={rows} />\r\n                                \r\n                            }\r\n                        </div>\r\n                    </div></div></div>\r\n        );\r\n    }\r\n}\r\nexport default CourseFilter;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsFilter.js",["230","231","232"],"import React from 'react';\r\nimport { getUser } from './../Common.js';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport axios from \"axios\";\r\n\r\nclass StudentsFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n  \r\n      \r\n        \r\n        this.handleCourseSessionChange = this.handleCourseSessionChange.bind(this);\r\n    }\r\n  \r\n    \r\n    handleCourseSessionChange(event)\r\n    {\r\n        this.props.setCourseSession(this.props.sessions.get(event.target.value));\r\n        event.preventDefault();\r\n    }\r\n  \r\n    \r\n   \r\n\r\n    render() {\r\n        console.log(this.props.sessions);\r\n        var sessionsdetails = [];\r\n        for (const [key, value] of this.props.sessions.entries()) {\r\n            sessionsdetails.push(<option> {key} </option>);\r\n        }\r\n        console.log(sessionsdetails);\r\n        return (\r\n            <div id=\"content\">\r\n                <div className=\"row\">\r\n                    <div className=\"container-fluid decor_bg\" >\r\n                        <div className=\"panel panel-primary\">\r\n                            <div className=\"container-fluid panel-heading\"><h4>STUDENTS</h4></div>\r\n                            <div className=\"panel-body\">\r\n                                <Form>\r\n                                    <Form.Row >                     \r\n\r\n                                        <Col as=\"div\">\r\n                                            <Form.Label className=\"d-flex justify-content-center\" column=\"lg\" lg={1} htmlFor=\"coursename\">Course Session: </Form.Label>\r\n                                        </Col>\r\n                                        <Col className=\"d-flex justify-content-center\">\r\n\r\n                                            <Form.Control className=\"d-flex justify-content-center\" size=\"lg\" lg={3} id=\"coursename\" name=\"coursename\" as=\"select\" onChange={this.handleCourseSessionChange}>\r\n                                                <option></option>\r\n                                                {sessionsdetails}\r\n                                             \r\n                                            </Form.Control>\r\n\r\n                                        </Col>\r\n\r\n                                      \r\n                                        </Form.Row >  \r\n                                    \r\n                                </Form>\r\n\r\n\r\n\r\n                            </div> </div> </div> </div>  </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentsFilter;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentsTable.js",["233","234","235"],"import React from 'react';\r\nimport StudentRow from './StudentRow.js';\r\nclass StudentTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n       \r\n    }\r\n \r\n    render() {\r\n        const rows = this.props.rows;\r\n       \r\n        var recCount = rows.length;\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Enrolled Students</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Students </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Student Id</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Email</th>\r\n                                                <th scope=\"col\">Phone</th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default StudentTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\students\\StudentRow.js",["236","237"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass StudentRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    \r\n    }\r\n\r\n        render() {\r\n        return (\r\n            <tr className=\"table-light\" >\r\n\r\n                <td >{this.props.student.id}</td>\r\n                <td >{this.props.student.name}</td>\r\n                <td>{this.props.student.email}</td>\r\n                <td>{this.props.student.phone}</td>\r\n               \r\n            </tr>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentRow;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\ProfileF.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseTable.js",["238","239","240"],"import React from 'react';\r\nimport assignedCourses from './AssingedCourses.json';\r\nimport './AssignedCourseTable.css';\r\nimport AssignedCourseRow from './AssignedCourseRow.js';\r\nclass AssignedCourseTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n       \r\n    }\r\n    onViewModuleClick = (event) => {\r\n\r\n        this.props.onViewModuleClick(event);\r\n\r\n    }\r\n    render() {\r\n        const rows = [];\r\n        this.props.assignedCourses.forEach((course) => {\r\n            rows.push(<AssignedCourseRow course={course} history={this.props.history} />);\r\n            \r\n        });\r\n        var recCount = rows.length;\r\n        return (\r\n           \r\n                    <div className=\"row\">\r\n                        <div className=\"container-fluid decor_bg\" >\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"container-fluid panel-heading\"><h4>Assigned Courses</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            {\r\n                                recCount == 0 ?\r\n                                    <h2 className='noCourse'> No Courses </h2> :\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead >\r\n                                            <tr className=\"bg-primary\">\r\n\r\n                                                <th scope=\"col\">Course Id</th>\r\n                                                <th scope=\"col\">Category</th>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">StartDate</th>\r\n                                                <th scope=\"col\">EndDate</th>\r\n                                                <th scope=\"col\">Credits</th>\r\n                                                <th scope=\"col\">Status</th>\r\n                                                <th scope=\"col\">Modules</th>\r\n                                                <th scope=\"col\">Evaluations</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {rows}\r\n                                        </tbody></table>\r\n                            }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n            );\r\n    }\r\n}\r\nexport default AssignedCourseTable;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\ProfileS.js",["241","242"],"import React from 'react';\r\nimport profile from './profile.json';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { getUser } from './../../Common.js';\r\nimport './ProfileS.css';\r\nclass ProfileS extends React.Component\r\n{\r\n   \r\n\r\n    render() {\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        //const email = profile.email;\r\n        //const name = fname + ' ' + lname;\r\n        //const phonenum = profile.phoneNumbers[0].number;\r\n        const profile = getUser();\r\n        //const fname = profile.firstName;\r\n        //const lname = profile.lastName;\r\n        const email = profile.email;\r\n        const name = profile.name;\r\n        const phonenum = profile.phonenum.substring( 0, 3) + \"- \" + profile.phonenum.substring( 3, 6) + \"- \" + profile.phonenum.substring( 6);\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"container-fluid decor_bg\" >\r\n                    <div className=\"panel panel-primary\">\r\n                        <div className=\"container-fluid panel-heading\"><h4>Student Profile</h4></div>\r\n                        <div className=\"panel-body\">\r\n                            <Form>\r\n                                \r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"name\">\r\n                                            <Form.Label column=\"lg\">Student Name</Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  font-size=\"xx-large\" type=\"text\" value={name}  />\r\n                                            </Col>\r\n                                             </Form.Group>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <Form.Group as={Row} controlId=\"totcredits\">\r\n                                                <Form.Label column=\"lg\">\r\n                                                    Total Credit(s)\r\n                                                </Form.Label>\r\n                                                <Col>\r\n                                                <Form.Control className=\"profile-data\" type=\"text\"  placeholder=\"\" value={this.props.tot_credits} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"email\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Email\r\n                                            </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  value={email}  type=\"email\" placeholder=\"Email\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Form.Group as={Row} controlId=\"phonenum\">\r\n                                            <Form.Label column=\"lg\">\r\n                                                Phone Number\r\n                                                </Form.Label>\r\n                                            <Col>\r\n                                                <Form.Control className=\"profile-data\"  type=\"text\"   size=\"lg\" value={phonenum} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                   \r\n                                </Row>\r\n                               \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n     }\r\n}\r\n\r\n\r\nexport default  ProfileS;\r\n","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseTable.js",["243","244","245","246","247"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\FormErrors.js",["248","249"],"import React from 'react';\nimport Alert from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Button';\n/*\n * \n *  <Alert key={i} variant='danger'>\n                        {fieldName} {formErrors[fieldName]}\n                        </Alert>\n                        */\nexport const FormErrors = ({ formErrors }) =>\n    <div className='formErrors'>\n        {Object.keys(formErrors).map((fieldName, i) => {\n            if (formErrors[fieldName].length > 0) {\n                return (\n                   <React.Fragment>\n                     \n                        <h4 key={i}>\n                            {fieldName} {formErrors[fieldName]}  </h4>\n                        <div />\n                    </React.Fragment>\n\n                )\n            } else {\n                return '';\n            }\n        })}\n    </div>","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseRow.js",["250","251","252","253","254","255","256"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport ToggleButton from '../common/ToggleButton.js';\r\nimport Modal from 'react-bootstrap/Modal'\r\n//import CourseDetailsPage from './CourseDetailsPage.js';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './CourseRow.css';\r\nimport ModalComponent from './../common/ModalComponent.js';\r\n\r\nclass CourseRow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                \r\n            rem_seats: this.props.course.rem_seats,\r\n            modalshow: false,\r\n            modaltitle: '',\r\n            modalbody: ''\r\n        };\r\n\r\n        this.onCourseLinkClick = this.onCourseLinkClick.bind(this);\r\n     \r\n        this.GetFormattedDate = this.GetFormattedDate.bind(this);\r\n\r\n    }\r\n\r\n    setRemainingSeats = ( rem_seats) => {\r\n\r\n        this.setState({ rem_seats: rem_seats }, () => { console.log(this.state.rem_seats) });\r\n\r\n    }\r\n    \r\n    onCourseLinkClick() {\r\n        //this.props.history.push('/coursedetails');\r\n\r\n        this.setState({\r\n            modalshow: true,\r\n            modaltitle: 'Course Details',\r\n            modalbody:  this.props.course.coursename ,\r\n\r\n        });\r\n    }\r\n    handleConfirmModalClose = (fromModal) => {\r\n        //alert(fromModal.msg);\r\n\r\n        this.setState({\r\n            modalshow: false\r\n        });\r\n        \r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.course.id != prevProps.course.id)\r\n            this.setState({ rem_seats: this.props.course.rem_seats }, () => { });\r\n    }\r\n   \r\n GetFormattedDate(date) {\r\n\r\n     var dd = String(date.getDate()).padStart(2, '0');\r\n     var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n     var yyyy = date.getFullYear();\r\n\r\n     date = mm + '/' + dd + '/' + yyyy;\r\n     return date;\r\n    }\r\n \r\n    render() {\r\n        const course = this.props.course;\r\n       // console.log(course);\r\n        //console.log(course.get('end_date'));\r\n        const todayDate = new Date();\r\n        var disabled = false;\r\n        var enrolled = false;\r\n        var courseEndDate = new Date(course.end_date);\r\n        var courseStartDate = new Date(course.start_date);\r\n        if (this.props.enrolled == true)\r\n            enrolled = true;\r\n          \r\n\r\n               \r\n         if (course.rem_seats == 0 || (courseStartDate < todayDate))\r\n            disabled = true;\r\n        //console.log(\"toggleOnLabel:\" + toggleOnLabel);\r\n        return (\r\n            <tr id={this.props.id} className={disabled==true?\"table-secondary\":\"table-light\"\r\n    } disabled={disabled ? true : false}>\r\n                <td >{course.courseid}</td>\r\n                <td >{course.id}</td>\r\n                <td >{course.category}</td>\r\n                <td>\r\n\r\n                    <Button size=\"lg\" onClick={this.onCourseLinkClick}\r\n                         variant = \"link\" > { course.coursename }</Button>\r\n                   <ModalComponent\r\n                show={this.state.modalshow}\r\n                title={this.state.modaltitle}\r\n                body={this.state.modalbody}\r\n\r\n                onClick={this.handleConfirmModalClose}\r\n                   onHide={this.handleConfirmModalClose} />\r\n              \r\n               \r\n                </td>      \r\n\r\n                <td>{this.GetFormattedDate(new Date(course.start_date))}</td>\r\n                <td>{this.GetFormattedDate(new Date(course.end_date))}</td>\r\n                <td>{course.duration}</td>\r\n                <td>{course.credit}</td>\r\n                <td>{this.state.rem_seats} </td>\r\n                <td> <ToggleButton disabled={disabled} enrolled={enrolled}\r\n                    sessionid={course.id} remainingseats={this.state.rem_seats}\r\n                    setRemainingSeats={this.setRemainingSeats} /> </td>\r\n                \r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseRow;","E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\faculty\\AssignedCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseRow.js",[],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\common\\ToggleButton.js",["257","258","259","260","261"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseTableWithoutPaginationWithCard.js",["262","263","264","265","266","267"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\coursepage\\CourseCard.js",["268","269","270","271","272","273","274"],"E:\\bits\\code samples\\assignments\\lms-app\\src\\components\\dashboards\\students\\EnrolledCourseCard.js",["275","276","277","278","279","280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":20,"column":5,"nodeType":"287","messageId":"288","endLine":23,"endColumn":6},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"293","line":7,"column":10,"nodeType":"291","messageId":"292","endLine":7,"endColumn":37},{"ruleId":"289","severity":1,"message":"294","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":37},{"ruleId":"289","severity":1,"message":"295","line":57,"column":13,"nodeType":"291","messageId":"292","endLine":57,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":70,"column":34,"nodeType":"298","messageId":"299","endLine":70,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":100,"column":46,"nodeType":"298","messageId":"299","endLine":100,"endColumn":48},{"ruleId":"296","severity":1,"message":"297","line":114,"column":37,"nodeType":"298","messageId":"299","endLine":114,"endColumn":39},{"ruleId":"296","severity":1,"message":"297","line":159,"column":33,"nodeType":"298","messageId":"299","endLine":159,"endColumn":35},{"ruleId":"300","severity":1,"message":"301","line":226,"column":50,"nodeType":"302","endLine":226,"endColumn":89},{"ruleId":"289","severity":1,"message":"303","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":11,"column":13,"nodeType":"302","endLine":11,"endColumn":25},{"ruleId":"289","severity":1,"message":"304","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":20},{"ruleId":"289","severity":1,"message":"305","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":33},{"ruleId":"289","severity":1,"message":"306","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":36},{"ruleId":"289","severity":1,"message":"307","line":19,"column":15,"nodeType":"291","messageId":"292","endLine":19,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":67,"column":42,"nodeType":"298","messageId":"299","endLine":67,"endColumn":44},{"ruleId":"289","severity":1,"message":"308","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":18},{"ruleId":"309","severity":1,"message":"310","line":110,"column":15,"nodeType":"311","messageId":"312","endLine":110,"endColumn":16,"fix":"313"},{"ruleId":"289","severity":1,"message":"314","line":18,"column":13,"nodeType":"291","messageId":"292","endLine":18,"endColumn":26},{"ruleId":"289","severity":1,"message":"315","line":20,"column":13,"nodeType":"291","messageId":"292","endLine":20,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":22,"column":34,"nodeType":"298","messageId":"299","endLine":22,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":28,"column":34,"nodeType":"298","messageId":"299","endLine":28,"endColumn":36},{"ruleId":"289","severity":1,"message":"295","line":124,"column":13,"nodeType":"291","messageId":"292","endLine":124,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":206,"column":33,"nodeType":"298","messageId":"299","endLine":206,"endColumn":35},{"ruleId":"300","severity":1,"message":"301","line":297,"column":87,"nodeType":"302","endLine":297,"endColumn":130},{"ruleId":"289","severity":1,"message":"290","line":4,"column":17,"nodeType":"291","messageId":"292","endLine":4,"endColumn":26},{"ruleId":"289","severity":1,"message":"316","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":9},{"ruleId":"285","severity":1,"message":"286","line":5,"column":5,"nodeType":"287","messageId":"288","endLine":7,"endColumn":6},{"ruleId":"296","severity":1,"message":"297","line":17,"column":39,"nodeType":"298","messageId":"299","endLine":17,"endColumn":41},{"ruleId":"289","severity":1,"message":"317","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":52,"column":58,"nodeType":"298","messageId":"299","endLine":52,"endColumn":60},{"ruleId":"296","severity":1,"message":"297","line":53,"column":54,"nodeType":"298","messageId":"299","endLine":53,"endColumn":56},{"ruleId":"289","severity":1,"message":"318","line":61,"column":19,"nodeType":"291","messageId":"292","endLine":61,"endColumn":28},{"ruleId":"296","severity":1,"message":"319","line":68,"column":60,"nodeType":"298","messageId":"299","endLine":68,"endColumn":62},{"ruleId":"320","severity":1,"message":"321","line":212,"column":96,"nodeType":"322","endLine":212,"endColumn":107},{"ruleId":"296","severity":1,"message":"319","line":30,"column":38,"nodeType":"298","messageId":"299","endLine":30,"endColumn":40},{"ruleId":"323","severity":1,"message":"324","line":140,"column":58,"nodeType":"325","messageId":"326","endLine":140,"endColumn":60},{"ruleId":"300","severity":1,"message":"301","line":143,"column":69,"nodeType":"302","endLine":143,"endColumn":120},{"ruleId":"300","severity":1,"message":"301","line":148,"column":50,"nodeType":"302","endLine":148,"endColumn":101},{"ruleId":"300","severity":1,"message":"301","line":154,"column":49,"nodeType":"302","endLine":154,"endColumn":94},{"ruleId":"300","severity":1,"message":"301","line":158,"column":49,"nodeType":"302","endLine":158,"endColumn":94},{"ruleId":"296","severity":1,"message":"297","line":161,"column":29,"nodeType":"298","messageId":"299","endLine":161,"endColumn":31},{"ruleId":"300","severity":1,"message":"301","line":165,"column":61,"nodeType":"302","endLine":165,"endColumn":114},{"ruleId":"296","severity":1,"message":"297","line":168,"column":29,"nodeType":"298","messageId":"299","endLine":168,"endColumn":31},{"ruleId":"300","severity":1,"message":"301","line":172,"column":61,"nodeType":"302","endLine":172,"endColumn":114},{"ruleId":"296","severity":1,"message":"297","line":181,"column":39,"nodeType":"298","messageId":"299","endLine":181,"endColumn":41},{"ruleId":"289","severity":1,"message":"327","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":13},{"ruleId":"289","severity":1,"message":"328","line":7,"column":10,"nodeType":"291","messageId":"292","endLine":7,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":22,"column":70,"nodeType":"298","messageId":"299","endLine":22,"endColumn":72},{"ruleId":"296","severity":1,"message":"297","line":23,"column":66,"nodeType":"298","messageId":"299","endLine":23,"endColumn":68},{"ruleId":"296","severity":1,"message":"319","line":43,"column":62,"nodeType":"298","messageId":"299","endLine":43,"endColumn":64},{"ruleId":"296","severity":1,"message":"297","line":84,"column":39,"nodeType":"298","messageId":"299","endLine":84,"endColumn":41},{"ruleId":"289","severity":1,"message":"329","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":17},{"ruleId":"289","severity":1,"message":"327","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":13},{"ruleId":"289","severity":1,"message":"330","line":30,"column":26,"nodeType":"291","messageId":"292","endLine":30,"endColumn":31},{"ruleId":"289","severity":1,"message":"308","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":4,"column":5,"nodeType":"287","messageId":"288","endLine":8,"endColumn":6},{"ruleId":"296","severity":1,"message":"297","line":22,"column":42,"nodeType":"298","messageId":"299","endLine":22,"endColumn":44},{"ruleId":"289","severity":1,"message":"303","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":7,"column":5,"nodeType":"287","messageId":"288","endLine":11,"endColumn":6},{"ruleId":"289","severity":1,"message":"331","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":6,"column":5,"nodeType":"287","messageId":"288","endLine":10,"endColumn":6},{"ruleId":"296","severity":1,"message":"297","line":31,"column":42,"nodeType":"298","messageId":"299","endLine":31,"endColumn":44},{"ruleId":"289","severity":1,"message":"332","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":15},{"ruleId":"289","severity":1,"message":"333","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":17},{"ruleId":"289","severity":1,"message":"334","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":25},{"ruleId":"285","severity":1,"message":"286","line":11,"column":5,"nodeType":"287","messageId":"288","endLine":16,"endColumn":6},{"ruleId":"323","severity":1,"message":"335","line":24,"column":50,"nodeType":"325","messageId":"336","endLine":24,"endColumn":52},{"ruleId":"296","severity":1,"message":"319","line":31,"column":22,"nodeType":"298","messageId":"299","endLine":31,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":59,"column":42,"nodeType":"298","messageId":"299","endLine":59,"endColumn":44},{"ruleId":"289","severity":1,"message":"337","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":13},{"ruleId":"289","severity":1,"message":"338","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":13},{"ruleId":"289","severity":1,"message":"339","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":18},{"ruleId":"289","severity":1,"message":"340","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":13},{"ruleId":"296","severity":1,"message":"319","line":54,"column":34,"nodeType":"298","messageId":"299","endLine":54,"endColumn":36},{"ruleId":"289","severity":1,"message":"341","line":75,"column":13,"nodeType":"291","messageId":"292","endLine":75,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":77,"column":33,"nodeType":"298","messageId":"299","endLine":77,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":82,"column":31,"nodeType":"298","messageId":"299","endLine":82,"endColumn":33},{"ruleId":"296","severity":1,"message":"297","line":86,"column":55,"nodeType":"298","messageId":"299","endLine":86,"endColumn":57},{"ruleId":"289","severity":1,"message":"295","line":45,"column":13,"nodeType":"291","messageId":"292","endLine":45,"endColumn":17},{"ruleId":"342","severity":1,"message":"343","line":114,"column":17,"nodeType":"344","messageId":"345","endLine":114,"endColumn":37},{"ruleId":"346","severity":1,"message":"347","line":131,"column":17,"nodeType":"291","messageId":"348","endLine":131,"endColumn":24},{"ruleId":"342","severity":1,"message":"343","line":217,"column":17,"nodeType":"344","messageId":"345","endLine":217,"endColumn":37},{"ruleId":"289","severity":1,"message":"349","line":217,"column":17,"nodeType":"291","messageId":"292","endLine":217,"endColumn":30},{"ruleId":"289","severity":1,"message":"316","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":9},{"ruleId":"289","severity":1,"message":"350","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":17},{"ruleId":"289","severity":1,"message":"351","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":19},{"ruleId":"285","severity":1,"message":"286","line":9,"column":5,"nodeType":"287","messageId":"288","endLine":11,"endColumn":6},{"ruleId":"296","severity":1,"message":"319","line":15,"column":22,"nodeType":"298","messageId":"299","endLine":15,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":42,"column":39,"nodeType":"298","messageId":"299","endLine":42,"endColumn":41},{"ruleId":"289","severity":1,"message":"339","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":18},{"ruleId":"289","severity":1,"message":"340","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":13},{"ruleId":"289","severity":1,"message":"303","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":56,"column":34,"nodeType":"298","messageId":"299","endLine":56,"endColumn":36},{"ruleId":"289","severity":1,"message":"341","line":74,"column":13,"nodeType":"291","messageId":"292","endLine":74,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":76,"column":33,"nodeType":"298","messageId":"299","endLine":76,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":78,"column":30,"nodeType":"298","messageId":"299","endLine":78,"endColumn":32},{"ruleId":"289","severity":1,"message":"339","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":18},{"ruleId":"289","severity":1,"message":"340","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":13},{"ruleId":"289","severity":1,"message":"303","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"352","line":40,"column":13,"nodeType":"291","messageId":"292","endLine":40,"endColumn":18},{"ruleId":"289","severity":1,"message":"353","line":41,"column":13,"nodeType":"291","messageId":"292","endLine":41,"endColumn":18},{"ruleId":"289","severity":1,"message":"354","line":42,"column":13,"nodeType":"291","messageId":"292","endLine":42,"endColumn":18},"no-native-reassign",["355"],"no-negated-in-lhs",["356"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'setUserAuthenticationStatus' is defined but never used.","'getUserAuthenticationStatus' is defined but never used.","'self' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'CourseFilter' is defined but never used.","'CourseTableWithPagination' is defined but never used.","'CourseTableWithoutPagination' is defined but never used.","'profile' is assigned a value but never used.","'StudentRow' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"357","text":"358"},"'local_courses' is assigned a value but never used.","'userid' is assigned a value but never used.","'$' is defined but never used.","'CourseRow' is defined but never used.","'todayDate' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'axios' is defined but never used.","'useEffect' is defined but never used.","'getUser' is defined but never used.","'value' is assigned a value but never used.","'assignedCourses' is defined but never used.","'profile' is defined but never used.","'Container' is defined but never used.","'EnrolledCourseRow' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Alert' is defined but never used.","'Badge' is defined but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'courseEndDate' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'payload' is already defined.","redeclared","'updatesuccess' is assigned a value but never used.","'CardGroup' is defined but never used.","'CardColumns' is defined but never used.","'today' is assigned a value but never used.","'sdate' is assigned a value but never used.","'edate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3536,3551],"\r\n            ."]